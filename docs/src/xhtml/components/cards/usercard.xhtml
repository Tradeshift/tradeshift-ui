<!DOCTYPE html>
<html>
	<head>
		<title>UserCard</title>
		<object data="tabs.xhtml"></object>
		<style>
		 	figure .output {
		 		text-align: center;
		 	}
		</style>
	</head>
	<body class="nosticky">
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>UserCard</h1>
				<section class="desc">
					<p>In this first iteration, the UserCard can simply show some user details in an Aside.</p>
				</section>
				<section>
					<p>The properties are all optional but you should at least include the name.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.UserCard({
								id: '6bf17754-f9de-4e31-aa31-bd3ff765b9c2',
								data: {
									name: 'Wired Earp',
									image: 'assets/wiredearp.png',
									title: 'EDB Programmer',
									role: 'Gentleman Spy',
									email: 'jmo@tradeshift.com',
									company: 'Tradeshift',
									companyUrl: 'http://tradeshift.com/'
								}
							}).open();
						</script>
					</figure>

				<!--
				<section>
					<li>You can initialize a UserCard with the <code class="attr-name">ts-usercard</code> attribute.
					<figure docs-markuli>
						<script>
							<div data-ts="UserCard" id="mycard"></div>
						</script>
					</figure>
					<li>Even without any data, the card takes on a cardlike appearance.
					<p data-ts="UserCard">
					<li>
						If you are using Angular or jQuery, you might like to feed the card through a	
						<a data-ts="Button" href="/#components/cards/js.html">JavaScript API</a>. 
						You can however also embed the data directly in the markup.
					


					<h3>Embedded JSON</h3>
					<li>
						Server-side devs and UX designers might like to embed the JSON in the HTML.
						Because this is JSON, you should use double quotes and omit trailing commas.
					
					<ul class="splitscreen">
						<li>
							<figure docs-markuli>
								<script>
									<div data-ts="UserCard">
										<scrxpt type="application/json">
											{
												"id": "6bf17754-f9de-4e31-aa31-bd3ff765b9c2",
												"data": {
													"email": "lza@tradeshift.com",
													"name": "Leo Johnson",
													"image": "assets/jim-bob-johnson.jpg"
												}
											}
										</scrxpt>
									</div>
								</script>
							</figure>
						
						<li>
							<div data-ts="UserCard">
								<script type="application/json">
									{
										"id": "6bf17754-f9de-4e31-aa31-bd3ff765b9c2",
										"data": {
											"email": "lza@tradeshift.com",
											"name": "Leo Johnson",
											"image": "assets/jim-bob-johnson.jpg"
										}
									}
								</script>
							</div>
						
					</ul>

					<h3>Encoded JSON</h3>
					<li>
						You can also embed the JSON in an attribute <code class="attr-name">ts.render</code>. 
						The JSON string must be encoded in the format returned by method <code>encodeURIComponent(json);</code>
					
					<p class="todo">Encode that JSON for this example.
					<li>Remember to <code>trim()</code> the JSON string before you encode it.
				</section>
				-->

			</article>
		</main>
	</body>
</html>
