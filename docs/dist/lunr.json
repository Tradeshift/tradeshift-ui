[null,null,null,null,null,null,{"title":"API-only Components","href":"components/api-only.html","content":" APIonly Components APIonly components These components will insert themselves into the DOM and generally donapost come with a HTML API Some of them are known to affect the general page layout TopBar Hello world tsuiTopBarbuttons label Button type tsprimary label Button type tssecondary label Button onclick function consolelogClicked tsuiTopBarbuttons label aposButtonapos type apostsprimaryapos label aposButtonapos type apostssecondaryapos label aposButtonapos onclick function consolelogaposClickedapos Main TabBar Hello world tsuiTabBartabs label Tab One label Tab Two label Tab Three onselect function consolelogSelected tsuiTabBartabs label aposTab Oneapos label aposTab Twoapos label aposTab Threeapos onselect function consolelogaposSelectedapos Main ToolBar Hello world tsuiToolBarbuttons label Button type tsprimary label Button type tssecondary label Button onclick function consolelogClicked search info Search amongst the things onsearch functionvalue consolelogvalue tsuiToolBarbuttons label aposButtonapos type apostsprimaryapos label aposButtonapos type apostssecondaryapos label aposButtonapos onclick function consolelogaposClickedapos search info aposSearch amongst the thingsapos onsearch functionvalue consolelogvalue Main StatusBar Although the StatusBar can display status messages itaposs perfectly alright to use it just to show some buttons In that case the difference from the Main ToolBar is simply that it positioned below the Main area tsuiStatusBarbuttons label Button type tsprimary label Button type tssecondary label Button onclick function consolelogClicked messageHello World tsuiStatusBarbuttons label aposButtonapos type apostsprimaryapos label aposButtonapos type apostssecondaryapos label aposButtonapos onclick function consolelogaposClickedapos messageaposHello Worldapos DatePicker A easy way to select dates tsuiDatePicker title Your Birthday value 19840523 min 19840101 max 19851224 onselect functiondate tsuiNotificationsuccessdate selected thisclose onclosed function thisdispose open tsuiDatePicker title quotYour Birthdayquot value apos19840523apos min apos19840101apos max apos19851224apos onselect functiondate tsuiNotificationsuccessdate apos selectedapos thisclose onclosed function thisdispose open Dialog Get the useraposs complete attention tsuiDialogconfirm Show the Warning dialog Show It Nope onaccept function tsuiDialogwarning Show the Danger dialog Of Course onaccept function tsuiDialogdanger That could be dangerous Got it tsuiDialogconfirm aposShow the Warning dialogapos aposShow Itapos aposNopeapos onaccept function tsuiDialogwarning aposShow the Danger dialogapos aposOf Courseapos onaccept function tsuiDialogdanger aposThat could be dangerousapos aposGot itapos Notification Quick popups after some action tsuiNotificationsuccessNotificationsuccess tsuiNotificationinfoNotificationinfo tsuiNotificationwarningNotificationwarning tsuiNotificationerrorNotificationerror tsuiNotificationsuccessaposNotificationsuccessapos tsuiNotificationinfoaposNotificationinfoapos tsuiNotificationwarningaposNotificationwarningapos tsuiNotificationerroraposNotificationerrorapos Note A nice way to inform the user about something in general This is not for status messages Note that the Note attaches to the top of the page so you will have to scroll tsuiNote icon tsiconheart text This page explains how to use the Note component with some nice examples onclose function tsuiNotificationsuccessThe Note is gone tsuiNote icon apostsiconheartapos text aposThis page explains how to use the Note component with some nice examplesapos onclose function tsuiNotificationsuccessaposThe Note is goneapos UserCard Show details about a user tsuiUserCard id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Wired Earp image assetswiredearppng title EDB Programmer role Gentleman Spy email jmotradeshiftcom company Tradeshift companyUrl httptradeshiftcom open tsuiUserCard id apos6bf17754f9de4e31aa31bd3ff765b9c2apos data name aposWired Earpapos image aposassetswiredearppngapos title aposEDB Programmerapos role aposGentleman Spyapos email aposjmotradeshiftcomapos company aposTradeshiftapos companyUrl aposhttptradeshiftcomapos open "},{"title":"Aside in Angular","href":"components/asides/angular.html","content":" Aside in Angular Asides in Angular Documentation for asides in Angular v4 "},{"title":"Aside HTML","href":"components/asides/index.html","content":" Aside HTML function toggle selectors ArrayforEacharguments functionselector tsuigetselectortoggle Aside Sidepanel used for small user interactions such as selecting a date The Aside component must be created with a child component Panel ltaside datatsquotAsidequotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt You can create the Aside wherever you like just make sure that itaposs positioned outside of the Main element when it opens ltmain datatsquotMainquotgt ltpgtMain contentltpgt ltmaingt ltaside datatsquotAsidequotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt Adding a header The datatstitle attribute configures the aside with a nice header ltaside datatsquotAsidequot datatstitlequotAside Headerquotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt You can color the header by assigning any of the classnames tsbgblue tsbggreen tsbgred and tsbgpurple to the aside element itself ltaside datatsquotAsidequot classquottsbgredquotgt ltdiv datatsquotPanelquotgtltdivgt ltasidegt Opening the aside The datatsopen attribute can be flipped to toggle the aside ltaside datatsquotAsidequot datatsopenquotfalsequot idquotmyasidequotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt Letaposs try that with jQuery myasideattrdatatsopen true aposmyasideaposattraposdatatsopenapos true Showing the spinner The datatsbusy attribute can be set to show the spinner ltaside datatsquotAsidequot datatsbusyquotBusy messagequotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt Letaposs try that with jQuery var aside myaside asideattrdatatsbusy Loading asideattrdatatsopen true setTimeoutfunction asideattrdatatsbusy setTimeoutfunction asideattrdatatsopen false 500 1500 var aside quotmyasidequot asideattraposdatatsbusyapos aposLoadingapos asideattraposdatatsopenapos true setTimeoutfunction asideattraposdatatsbusyapos aposapos setTimeoutfunction asideattraposdatatsopenapos false 500 1500 Adding some tabs If an Aside contains more than one Panel we will automatically create a TabBar to switch between the panels like in this example ltaside datatsquotAsidequotgt ltdiv datatsquotPanelquot datatslabelquotTab 1quotgt ltpgtaside contentltpgt ltdivgt ltdiv datatsquotPanelquot datatslabelquotTab 2quotgt ltpgtaside contentltpgt ltdivgt ltasidegt Tracking the state You can setup inline callbacks to be invoked when the aside changes state using one of onopen onopened onclose and onclosed You can also do this with event listeners if you like ltaside datatsquotAsidequot tsonopenquotconsolelogaposWill openaposquot tsonopenedquotconsolelogaposDid openaposquot tsonclosequotconsolelogaposWill closeaposquot tsonclosedquotconsolelogaposDid closeaposquotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt Stacking asides Asides will automatically stack themselves whenever new asides open The old asides will slide elegantly to the right The new aside will float the top of the zindex Close the Aside Bacon ipsum dolor sit pxF6lsesnack jerky pork belly short loin sausage andouille kevin capicola ham hamburger doner Shank prosciutto flank kevin ribeye short ribs swine ham pork porchetta spare ribs kielbasa beef ribs Prosciutto pancetta shank boudin Corned beef shoulder capicola turducken prosciutto pork belly sirloin shankle brisket chuck leberkas tail beef Sirloin meatloaf pastrami beef ribs Ball tip pastrami landjaeger brisket Tradeshift strip steak short loin pancetta meatball corned beef tenderloin beef ribs spare ribs Tradeshift sausage strip steak ham ribeye pork loin meatball turkey corned beef shoulder Leberkas jerky sirloin boudin turducken ham hock pastrami Doner pig boudin sausage ball tip leberkas ground round beef jowl kielbasa tongue shankle spare ribs tail shoulder Fatback pork kielbasa ham doner pig short loin short ribs pancetta Pancetta jerky biltong short loin capicola beef Pork belly strip steak venison brisket shoulder beef filet mignon shank tenderloin tritip ground round shankle cow Strip steak flank spare ribs leberkas jowl Ball tip porchetta flank sirloin ham hock tbone salami spare ribs tenderloin capicola jerky kevin shoulder hamburger Sausage landjaeger Tradeshift fatback pancetta tenderloin andouille cupim ground round ball tip rump short loin turducken shankle kevin Corned beef biltong venison ham hock hamburger pork turducken Ham short ribs pancetta fatback picanha hamburger short loin corned beef shankle jowl frankfurter filet mignon doner Pork chop venison ball tip landjaeger strip steak doner kevin ribeye pork loin tbone porchetta sirloin jerky frankfurter tail Pancetta shank alcatra sirloin swine cow short ribs pork jerky venison flank corned beef prosciutto pig leberkas Sirloin strip steak meatball andouille turkey biltong shank beef ribs Ham turkey spare ribs ground round pig prosciutto Rump ham hock salami Tradeshift pxF6lsesnack burger Open next aside Open next aside Thanks now close them "},{"title":"Aside JS","href":"components/asides/js.html","content":" Aside JS Asides JS You can get a hold of the tsaside component and control it with JavaScript var aside tsuigetaposmyasideapos Toggle and title You can do this asideopen asideclose asidetoggle asidetitleaposUpdated titleapos Tracking with methods You can overwrite the methods onopen onopened onclose and onclosed to do something whenever the aside changes state asideonopen function consolelogaposAside will openapos If you return false in methods onopen and onclose the aside will respect that Tracking with events You can also monitor the asides with DOM event listeners function debuge consolelogetype etarget documentaddEventListenerapostsopenapos debug documentaddEventListenerapostsopenedapos debug documentaddEventListenerapostscloseapos debug documentaddEventListenerapostsclosedapos debug The events quottsopenquot and quottsclosequot can be blocked with epreventDefault to prevent the aside from changing state "},null,{"title":"Aside Test One","href":"components/asides/test-1.html","content":" Aside Test One Aside CSS testing Weaposll want to take a screenshot of this Aside so we can test the CSS Open the aside In this section the form and the menu and the buttons are siblings Check it Textarea Item One Item Two Button One Button Two Down here the fieldset and the menu and the buttons are contained inside a form They should still look the same Textarea Item One Item Two Button One Button Two "},null,null,null,{"title":"StatusBar","href":"components/bars/statusbar.html","content":" StatusBar Main StatusBar Although the StatusBar can display status messages and features a Pager itaposs perfectly alright to use it just to show some buttons You can show a status message with basic Markdown support tsuiStatusBarmessage The status message supports bold and italic text tsuiStatusBarmessage aposThe status message supports bold and italic textapos If you call linkable you can also some links in the message Beware of phishing tsuiStatusBarlinkablemessage Please visit Tradeshifthttpwwwtradeshiftcom tsuiStatusBarlinkablemessage aposPlease visit Tradeshifthttpwwwtradeshiftcomapos You can pass a callback function to be invoked whenever a link is clicked tsuiStatusBarlinkablefunction onclickurl tsuiNotificationsuccessurl thismessageThanks messagePlease click the linkThe URL can be any string tsuiStatusBarlinkablefunction onclickurl tsuiNotificationsuccessurl thismessageaposThanksapos messageaposPlease click the linkThe URL can be any stringapos StatusBarbuttons Add buttons to the StatusBar with the buttons method This both sets and gets If you omit the argument youquotll get the current buttons jQuery style tsuiStatusBarbuttons label Primary type tsprimary label Secondary type tssecondary label Tertiary One label Tertiary Two tsuiStatusBarbuttons label quotPrimaryquot type quottsprimaryquot label quotSecondaryquot type quottssecondaryquot label quotTertiary Onequot label quotTertiary Twoquot You can use array methods like push pop shift unshift splice reverse and so on to manage buttons Just note that the buttons length is readonly The buttons type property works like the CSS class for a regular Button The StatusBar will automatically sort all buttons from primary to tertiary If therequots more than one tertiary button these will be pushed to an Aside In the mobile breakpoint all the buttons will be pushed to an Aside Buttons wonquott actually do anything unless you define the onclick method tsuiStatusBarbuttonssplice0 1 label Click me type tsprimary onclick function thislabel Thanks tsuiStatusBarbuttonssplice0 1 label quotClick mequot type quottsprimaryquot onclick function thislabel quotThanksquot Fortunately you can always change what happens when a button gets clicked tsuiStatusBarbuttonsforEachfunctionbutton index buttonlabel Button index 1 buttononclick function tsuiNotificationsuccessthislabel tsuiStatusBarbuttonsforEachfunctionbutton index buttonlabel quotButton quot index 1 buttononclick function tsuiNotificationsuccessthislabel Query buttons You can locate buttons by index in the buttons collection But since this isnquott likely to match the order in which they appear on screen itquots easier to give the buttons an id and find them using buttonsget var buttons tsuiStatusBarbuttons buttonspush id examplebutton var button buttonsgetexamplebutton buttonlabel My Button buttontype tssecondary var buttons tsuiStatusBarbuttons buttonspush id quotexamplebuttonquot var button buttonsgetquotexamplebuttonquot buttonlabel quotMy Buttonquot buttontype quottssecondaryquot Icon buttons TODO Note about the info property for view in Aside Hide buttons You can hide and show buttons You can also toggle visible tsuiStatusBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow tsuiStatusBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow Disable buttons You can disable and enable buttons You can also toggle disabled tsuiStatusBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable tsuiStatusBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable Busy buttons We can display a temporary progress indicator with the busy and done methods var button tsuiStatusBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 var button tsuiStatusBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 The busy method supports an optional status message var button tsuiStatusBarbuttons0 buttonbusyMaking progress setTimeoutfunction buttondone 1000 var button tsuiStatusBarbuttons0 buttonbusyquotMaking progressquot setTimeoutfunction buttondone 1000 Button groups You can also group buttons in arrays to create button groups that look like this tsuiStatusBarbuttons label Normal label Normal label Accept type tsprimary label Reject type tsdanger tsuiStatusBarbuttons label quotNormalquot label quotNormalquot label quotAcceptquot type quottsprimaryquot label quotRejectquot type quottsdangerquot You can of course also create grouped buttons with icons instead of text var group tsuiStatusBarbuttons2 grouppush icon tsiconother type tssecondary var group tsuiStatusBarbuttons2 grouppush icon quottsiconotherquot type quottssecondaryquot Herequots a summary of the buttons collection and button model StatusBarpager You can initialize a Pager in the StatusBar tsuiStatusBarpager pages 23 page 0 onselect functionpage consolelogpage tsuiStatusBarpager pages 23 page 0 onselect functionpage consolelogpage To make room for the Pager and to make it look nice centeraligned any potential buttons in the StatusBar will be moved into a menu Note that even primary buttons will be hidden when the StatusBar features a Pager Responsive StatusBar The StatusBar is highly responsive yes it is Inline Statusbar The responsive StatusBar is a work in progress This is a dev preview Assign datatsquotStatusBarquot to a footer or menu to initialize it as a StatusBar Another attribute datatsmessage displays the message ltfooter datatsquotStatusBarquot datatsmessagequotThis is my StatusBarquotgtltheadergt The StatusBar has no default outline so weaposve fitted ours with a dropshadow In your app any such outlining should be done under consideration of the neighboring elements You can get a hold of the component using a CSS selector and call any of the methods weaposve seen applicable to the Main ToolBar Notice what happens when we add content var toolbar tsuigetmystatusbar or pass an element toolbarbuttons label One type tsprimary label Two type tssecondary label Three pager pages 23 messageThe layout has changed var toolbar tsuigetaposmystatusbarapos or pass an element toolbarbuttons label aposOneapos type apostsprimaryapos label aposTwoapos type apostssecondaryapos label aposThreeapos pager pages 23 messageaposThe layout has changedapos Because there is limited horizontal space available the StatusBar has snapped into a layout that is optimized for mobile phones The exact layout depends on the features you enable but you can in any case intercept this change with the onlayout callback var statusbar tsuigetmystatusbar statusbaronlayout function thismessageThe layout has changed again statusbarpagernull just to show that it works var statusbar tsuigetaposmystatusbarapos statusbaronlayout function thismessageaposThe layout has changed againapos statusbarpagernull just to show that it works This is a work in progress "},{"title":"TabBar","href":"components/bars/tabbar.html","content":" TabBar tsuireadyfunction support color scheme links in API table var method tsuigethtmlactionaddtsactionsafelink onaction functiona var tabbar tsuigetmytabbar if method tabbaradata methodcalltabbar sticky dislay none important at least until weve fixed the position when TabBar is before Main Main TabBar Provides second level tabbed navigation We can initialize the TabBar tabs with the the tabs method tsuiTabBartabs label aposMain TabBarapos label aposInline TabBarapos x2014 but since the page already has tabs we will instead append a new tab to the existing collection If you omit the argument youquotll get the current tabs jQuery style var tabs tsuiTabBartabs tabspush label Bonus Tab onselect function var text thislabel selected tsuiNotificationsuccesstext var tabs tsuiTabBartabs tabspush label quotBonus Tabquot onselect function var text thislabel quot selectedquot tsuiNotificationsuccesstext You can use array methods like push pop shift unshift splice and so on to manage tabs just note that the tabs length is a readonly property Also note that tabs donquott do anything by default so what happens at onselect is completely up to you Updating tabs We can at any time change what happens when a tab gets selected We can also change the tab label if we like although maybe this would be confusing for the user var tabs tsuiTabBartabs tabs2label Choose Me tabs2onselect function thislabel Thanks var tabs tsuiTabBartabs tabs2label quotChoose Mequot tabs2onselect function thislabel quotThanksquot Selecting tabs We can programatically select a tab using one of these approaches tsuiTabBartabs2select tsuiTabBartabsselectedIndex 0 Querying tabs This will all become a lot easier if we give all the tabs an id and use tabsget var tabs tsuiTabBartabs tabssplice2 0 label Example Tab id exampletab tabsgetexampletabselect var tabs tsuiTabBartabs tabssplice2 0 label quotExample Tabquot id quotexampletabquot tabsgetquotexampletabquotselect Tabs icons You can add a tab with an icon if somehow that tab is special tsuiTabBartabspush label Icon Tab icon tsicontodo tsuiTabBartabspush label quotIcon Tabquot icon quottsicontodoquot Tab counters You can add a counter to the tabs for whatever reason you like tsuiTabBartabsforEachfunctiontab tabcounter MathceilMathrandom 10 tsuiTabBartabsforEachfunctiontab tabcounter MathceilMathrandom 10 When the counter reaches zero it disappears tsuiTabBartabsforEachfunctiontab tabcounter tsuiTabBartabsforEachfunctiontab tabcounter Closeable tabs You can create closeable tabs but note that the tab must be selected before it can be closed You can return false in the onclose method to prevent the tab from closing if this would otherwise cause data loss tsuiTabBartabspush label Closeable Tab closeable true selected true onclose function tsuiNotificationsuccessthislabel closed tsuiTabBartabspush label quotCloseable Tabquot closeable true selected true onclose function tsuiNotificationsuccessthislabel quot closedquot NewTab button You can allow the user to create new tabs via a special button as seen in popular browsers Note that the button just triggers a callback and that the new tab must be created manually In the example below the selected property also selects the tab var tabs tsuiTabBartabs tabsshowNewfunction onclick tabspush label My New Tab selected true var tabs tsuiTabBartabs tabsshowNewfunction onclick tabspush label quotMy New Tabquot selected true If you regret this later on you can also hide the button tsuiTabBartabshideNew tsuiTabBartabshideNew Herequots a summary of the tabs collection and tab model TabBarbuttons Itaposs perfectly alright to add buttons to the TabBar either to avoid wasting space on a separate ToolBar or because the buttons will affect content in all the tabs tsuiTabBarbuttons label One type tsprimary label Two type tssecondary label Three tsuiTabBarbuttons label aposOneapos type apostsprimaryapos label aposTwoapos type apostssecondaryapos label aposThreeapos If the buttons affect the selected tab only remember to clear the buttons when a new tab is selected tsuiTabBarbuttonsclear tsuiTabBarbuttonsclear Herequots a summary of the buttons collection and button model Inline TabBar TabBars can be positioned anywhere on the page Assign datatsquotTabBarquot to a header or nav to initialize it as a TabBar ltheader datatsquotTabBarquotgtltheadergt All features are controlled through a JavaScript API You can get a hold of the component using a CSS selector and call any of the methods weaposve seen applicable to the Main TabBar var tabbar tsuigetmytabbar or pass an element tabbartabs label One label Two label Three var tabbar tsuigetaposmytabbarapos or pass an element tabbartabs label aposOneapos label aposTwoapos label aposThreeapos Hereaposs an overview of the inline TabBar component "},null,{"title":"ToolBar","href":"components/bars/toolbar.html","content":" ToolBar Main ToolBar Besides buttons for contextual actions the ToolBar also features a Search Before we begin we may consider adding a descriptive title to the ToolBar tsuiToolBartitleMy ToolBar tsuiToolBartitleaposMy ToolBarapos ToolBarbuttons Add buttons to the ToolBar with the buttons method This both sets and gets If you omit the argument youquotll get the current buttons jQuery style tsuiToolBarbuttons label Primary type tsprimary label Secondary type tssecondary label Tertiary One label Tertiary Two tsuiToolBarbuttons label quotPrimaryquot type quottsprimaryquot label quotSecondaryquot type quottssecondaryquot label quotTertiary Onequot label quotTertiary Twoquot You can use array methods like push pop shift unshift splice reverse and so on to manage buttons Just note that the buttons length is readonly The buttons type property works like the CSS class for a regular Button The ToolBar will automatically sort all buttons from primary to tertiary If therequots more than one tertiary button these will be pushed to an Aside In the mobile breakpoint all the buttons will be pushed to an Aside Buttons wonquott actually do anything unless you define the onclick method tsuiToolBarbuttonssplice0 1 label Click me type tsprimary onclick function thislabel Thanks tsuiToolBarbuttonssplice0 1 label quotClick mequot type quottsprimaryquot onclick function thislabel quotThanksquot Fortunately you can always change what happens when a button gets clicked tsuiToolBarbuttonsforEachfunctionbutton index buttonlabel Button index 1 buttononclick function tsuiNotificationsuccessthislabel tsuiToolBarbuttonsforEachfunctionbutton index buttonlabel quotButton quot index 1 buttononclick function tsuiNotificationsuccessthislabel Query buttons You can locate buttons by index in the buttons collection But since this isnquott likely to match the order in which they appear on screen itquots easier to give the buttons an id and find them using buttonsget var buttons tsuiToolBarbuttons buttonspush id examplebutton var button buttonsgetexamplebutton buttonlabel My Button buttontype tssecondary var buttons tsuiToolBarbuttons buttonspush id quotexamplebuttonquot var button buttonsgetquotexamplebuttonquot buttonlabel quotMy Buttonquot buttontype quottssecondaryquot Icon buttons TODO Note about the info property for view in Aside Hide buttons You can hide and show buttons You can also toggle visible tsuiToolBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow tsuiToolBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow Disable buttons You can disable and enable buttons You can also toggle disabled tsuiToolBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable tsuiToolBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable Busy buttons We can display a temporary progress indicator with the busy and done methods var button tsuiToolBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 var button tsuiToolBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 The busy method supports an optional status message var button tsuiToolBarbuttons0 buttonbusyMaking progress setTimeoutfunction buttondone 1000 var button tsuiToolBarbuttons0 buttonbusyquotMaking progressquot setTimeoutfunction buttondone 1000 Button groups You can also group buttons in arrays to create button groups that look like this tsuiToolBarbuttons label Normal label Normal label Accept type tsprimary label Reject type tsdanger tsuiToolBarbuttons label quotNormalquot label quotNormalquot label quotAcceptquot type quottsprimaryquot label quotRejectquot type quottsdangerquot You can of course also create grouped buttons with icons instead of text var group tsuiToolBarbuttons2 grouppush icon tsiconother type tssecondary var group tsuiToolBarbuttons2 grouppush icon quottsiconotherquot type quottssecondaryquot Herequots a summary of the buttons collection and button model ToolBarsearch Youaposll get a dedicated search field by passing an object to the search method tsuiToolBarsearch onsearch functionvalue tsuiNotificationsuccessvalue Search cleared tsuiToolBarsearch onsearch functionvalue tsuiNotificationsuccessvalue aposSearch clearedapos The search field expands when the field is focused by the user or whenever thereaposs a nonempty value in the field You can change the value like this var search tsuiToolBarsearch searchvalue Hello world var search tsuiToolBarsearch searchvalue aposHello worldapos Search callbacks The onsearch callback gets invoked when when the user presses ENTER var search tsuiToolBarsearch searchvalue Press ENTER here searchonsearch functionvalue tsuiNotificationsuccessvalue Search cleared var search tsuiToolBarsearch searchvalue aposPress ENTER hereapos searchonsearch functionvalue tsuiNotificationsuccessvalue aposSearch clearedapos If defined the onidle method gets called whenever the user pauses typing var search tsuiToolBarsearch searchvalue Try it now searchonidle functionvalue tsuiNotificationsuccessvalue var search tsuiToolBarsearch searchvalue aposTry it nowapos searchonidle functionvalue tsuiNotificationsuccessvalue The onidle method may also be called when the field loses focus The idletime property controls the timeout value default is 500 milliseconds Search info The info property doubles as both the placeholder when the field is expanded and the title or tooltip when the field is collapsed var search tsuiToolBarsearch searchinfo Search amongst the things searchvalue collapse the field var search tsuiToolBarsearch searchinfo aposSearch amongst the thingsapos searchvalue aposapos collapse the field Search flex You can flex the search field to make it stretch the available width of the ToolBar In that case it will remain expanded even when thereaposs no default value tsuiToolBarsearch tip Flex all the way flex 1 buttons label No Flex type tsprimary tsuiToolBarsearch tip aposFlex all the wayapos flex 1 buttons label aposNo Flexapos type apostsprimaryapos You can also assign flex to buttons although that has little practical value In the future we may provide a more advanced distribution scheme Thataposs why we use a number instead of a boolean but you should always use 1 for now Hereapos an overview of the properties and methods of the Search model x2014 and hereaposs a final overview of the Main ToolBar methods Inline ToolBar ToolBars can be positioned anywhere on the page Assign datatsquotToolBarquot to a header or menu to initialize it as a ToolBar Another attribute datatstitle assigns a default title to the ToolBar ltheader datatsquotToolBarquot datatstitlequotMy ToolBarquotgtltheadergt The ToolBar has no default outline so weaposve fitted ours with a dropshadow In your app any such outlining should be done under consideration of the neighboring elements You can get a hold of the component using a CSS selector and call any of the methods weaposve seen applicable to the Main ToolBar var toolbar tsuigetmytoolbar or pass an element toolbarbuttons label One type tsprimary label Two type tssecondary label Three var toolbar tsuigetaposmytoolbarapos or pass an element toolbarbuttons label aposOneapos type apostsprimaryapos label aposTwoapos type apostssecondaryapos label aposThreeapos The micro method may come in handy to make the ToolBar somewhat smaller In the HTML you can also assign the CSS classname tsmicro for the same effect tsuigetmytoolbarmicro tsuigetaposmytoolbaraposmicro The ToolBar will economize horizonatal space by collecting multiple tertiaray buttons in a menu when you Run This Code you may need to scroll the page back up to see it tsuigetmytoolbarbuttonspush label Four label Five label Six tsuigetaposmytoolbaraposbuttonspush label aposFourapos label aposFiveapos label aposSixapos If you are absolutely certain that your buttons will fit in all supported languages you can disable this behavior with the uncompact method tsuigetmytoolbaruncompact tsuigetaposmytoolbaraposuncompact Hereaposs an overview of the inline ToolBar component "},{"title":"TopBar","href":"components/bars/topbar.html","content":" TopBar tsuireadyfunction support color scheme links in API table var method tsuigethtmlactionaddtsactionsafelink onaction functiona if method tsuiTopBaradata methodcalltsuiTopBar TopBar Provides tabs for navigation and buttons for contextual actions If you plan to make use of the TopBar we suggest that you give it a descriptive title tsuiTopBartitleMy App tsuiTopBartitlequotMy Appquot x2014 because even when the title is hidden by the tabs like on this page it will become visible when you resize to mobile breakpoint The title also functions to show the TopBar on page load so that it doesnapost suddenly appear when you add buttons later TopBartabs We can initialize the TopBar tabs with the the tabs method tsuiTopBartabs label quotOverviewquot label quotTopBarquot label quotTabBarquot label quotToolBarquot label quotStatusBarquot x2014 but since the page already has tabs we will instead append a new tab to the existing collection If you omit the argument youquotll get the current tabs jQuery style var tabs tsuiTopBartabs tabspush label Bonus Tab onselect function var text thislabel selected tsuiNotificationsuccesstext var tabs tsuiTopBartabs tabspush label quotBonus Tabquot onselect function var text thislabel quot selectedquot tsuiNotificationsuccesstext You can use array methods like push pop shift unshift splice and so on to manage tabs just note that the tabs length is a readonly property Also note that tabs donquott do anything by default so what happens at onselect is completely up to you Updating tabs We can at any time change what happens when a tab gets selected We can also change the tab label if we like although maybe this would be confusing for the user var tabs tsuiTopBartabs tabs4label Choose Me tabs4onselect function thislabel Thanks var tabs tsuiTopBartabs tabs4label quotChoose Mequot tabs4onselect function thislabel quotThanksquot Selecting tabs We can programatically select a tab using one of these approaches tsuiTopBartabs4select tsuiTopBartabsselectedIndex 1 Querying tabs This will all become a lot easier if we give all the tabs an id and use tabsget var tabs tsuiTopBartabs tabssplice4 0 label Example Tab id exampletab tabsgetexampletabselect var tabs tsuiTopBartabs tabssplice4 0 label quotExample Tabquot id quotexampletabquot tabsgetquotexampletabquotselect Tabs icons You can add a tab with an icon if somehow that tab is special tsuiTopBartabspush label Icon Tab icon tsicontodo tsuiTopBartabspush label quotIcon Tabquot icon quottsicontodoquot Tab counters You can add a counter to the tabs for whatever reason you like tsuiTopBartabsforEachfunctiontab tabcounter MathceilMathrandom 10 tsuiTopBartabsforEachfunctiontab tabcounter MathceilMathrandom 10 When the counter reaches zero it disappears tsuiTopBartabsforEachfunctiontab tabcounter tsuiTopBartabsforEachfunctiontab tabcounter Closeable tabs You can create closeable tabs but note that the tab must be selected before it can be closed You can return false in the onclose method to prevent the tab from closing if this would otherwise cause data loss tsuiTopBartabspush label Closeable Tab closeable true selected true onclose function tsuiNotificationsuccessthislabel closed tsuiTopBartabspush label quotCloseable Tabquot closeable true selected true onclose function tsuiNotificationsuccessthislabel quot closedquot NewTab button You can allow the user to create new tabs via a special button as seen in popular browsers Note that the button just triggers a callback and that the new tab must be created manually In the example below the selected property also selects the tab var tabs tsuiTopBartabs tabsshowNewfunction onclick tabspush label My New Tab selected true var tabs tsuiTopBartabs tabsshowNewfunction onclick tabspush label quotMy New Tabquot selected true If you regret this later on you can also hide the button tsuiTopBartabshideNew tsuiTopBartabshideNew Herequots a summary of the tabs collection and tab model TopBarbuttons Add buttons to the TopBar with the buttons method This both sets and gets If you omit the argument youquotll get the current buttons jQuery style tsuiTopBarbuttons label Primary type tsprimary label Secondary type tssecondary label Tertiary One label Tertiary Two tsuiTopBarbuttons label quotPrimaryquot type quottsprimaryquot label quotSecondaryquot type quottssecondaryquot label quotTertiary Onequot label quotTertiary Twoquot You can use array methods like push pop shift unshift splice reverse and so on to manage buttons Just note that the buttons length is readonly The buttons type property works like the CSS class for a regular Button The TopBar will automatically sort all buttons from primary to tertiary If therequots more than one tertiary button these will be pushed to an Aside In the mobile breakpoint all the buttons will be pushed to an Aside Buttons wonquott actually do anything unless you define the onclick method tsuiTopBarbuttonssplice0 1 label Click me type tsprimary onclick function thislabel Thanks tsuiTopBarbuttonssplice0 1 label quotClick mequot type quottsprimaryquot onclick function thislabel quotThanksquot Fortunately you can always change what happens when a button gets clicked tsuiTopBarbuttonsforEachfunctionbutton index buttonlabel Button index 1 buttononclick function tsuiNotificationsuccessthislabel tsuiTopBarbuttonsforEachfunctionbutton index buttonlabel quotButton quot index 1 buttononclick function tsuiNotificationsuccessthislabel Query buttons You can locate buttons by index in the buttons collection But since this isnquott likely to match the order in which they appear on screen itquots easier to give the buttons an id and find them using buttonsget var buttons tsuiTopBarbuttons buttonspush id examplebutton var button buttonsgetexamplebutton buttonlabel My Button buttontype tssecondary var buttons tsuiTopBarbuttons buttonspush id quotexamplebuttonquot var button buttonsgetquotexamplebuttonquot buttonlabel quotMy Buttonquot buttontype quottssecondaryquot Icon buttons TODO Note about the info property for view in Aside Hide buttons You can hide and show buttons You can also toggle visible tsuiTopBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow tsuiTopBarbuttonsforEachfunctionbutton ifbuttonvisible buttonhide else buttonshow Disable buttons You can disable and enable buttons You can also toggle disabled tsuiTopBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable tsuiTopBarbuttonsforEachfunctionbutton ifbuttondisabled buttonenable else buttondisable Busy buttons We can display a temporary progress indicator with the busy and done methods var button tsuiTopBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 var button tsuiTopBarbuttons0 buttonbusy setTimeoutfunction buttondone 1000 The busy method supports an optional status message var button tsuiTopBarbuttons0 buttonbusyMaking progress setTimeoutfunction buttondone 1000 var button tsuiTopBarbuttons0 buttonbusyquotMaking progressquot setTimeoutfunction buttondone 1000 Button groups You can also group buttons in arrays to create button groups that look like this tsuiTopBarbuttons label Normal label Normal label Accept type tsprimary label Reject type tsdanger tsuiTopBarbuttons label quotNormalquot label quotNormalquot label quotAcceptquot type quottsprimaryquot label quotRejectquot type quottsdangerquot You can of course also create grouped buttons with icons instead of text var group tsuiTopBarbuttons2 grouppush icon tsiconother type tssecondary var group tsuiTopBarbuttons2 grouppush icon quottsiconotherquot type quottssecondaryquot Herequots a summary of the buttons collection and button model TopBar Back amp Forward The TopBar features both Back and Forward buttons for use in quotdrill downquot scenarios tsuiTopBarshowBackfunction consolelogBack showNextfunction consolelogNext tsuiTopBarshowBackfunction consolelogquotBackquot showNextfunction consolelogquotNextquot You can also hide the Back and Forward buttons Since the buttons obscure the tabs you might actually like to do that now tsuiTopBarhideBackhideNext tsuiTopBarhideBackhideNext Note that tabbed navigation is not supposed to coexist with Back and Forward buttons TopBar summary Hereaposs a summary of the TopBar methods including some bonus not yet discussed "},{"title":"Buttons","href":"components/buttons/buttons.html","content":" Buttons tsbutton span code texttransform none letterspacing auto Buttons Group buttons in menus to unlock advanced layout options Assign datatsquotButtonsquot attribute to a menu to initialize it as a Buttons menu Button One Button Two ltmenu datatsquotButtonsquotgt ltligt ltbuttongt ltspangtButton Oneltspangt ltbuttongt ltligt ltligt ltbuttongt ltspangtButton Twoltspangt ltbuttongt ltligt ltmenugt When in menus buttons stack vertically and stretch to fill the width You can omit the tsbutton attribute on buttons it is implied You can also omit the tstertiary classname on the buttons it is assumed by default Button layouts The menu can be assigned a classname to layout the buttons horizontally Accept Reject ltmenu datatsquotButtonsquot classquottstt tsjoinquotgt ltligt ltbutton classquottsprimaryquotgt ltspangtAcceptltspangt ltbuttongt ltligt ltligt ltbutton classquottsdangerquotgt ltspangtRejectltspangt ltbuttongt ltligt ltmenugt The classname tstt indicates that two buttons should both display text instead of icons If you add both the layout will take care of hiding one or the other A special classname tsjoin has been added to join the buttons together We support the following permutations edbmldeclareedbmlklDUi3asfunction edbml use strict var out edbmlout txt edbmlsafetext val edbmlsafeattr tstt tsit tsti tsiit tsiti tstii mapfunctionc rendermenuc return c forEachfunctionc rendermenuc tsjoin function rendermenuc1 c2 var cname c1 c2 outhtml c1substringtslengthsplitforEachfunction outhtml txtcname outhtml return outwrite The classname shown on buttons should in all cases go on the menu element and not on the button elements "},null,{"title":"Button Gallery","href":"components/buttons/gallery.html","content":" Button Gallery function togglekey checkbox var menu documentquerySelector key var buttons menuquerySelectorAllbutton guiArrayfrombuttonsforEachfunctionb bdisabled bdisabled edbmldeclareedbmlZsJn2z2asfunction edbml use strict var out edbmlout att edbmlatt txt edbmlsafetext val edbmlsafeattr layout edbmlinputtsuiLayoutModel var spirit this var backgroundcolors tsbglite tsbgblue tsbgdark tsbgred tsbgyellow tsbggreen tsbgwhite tsbgpurple var buttonlabeltexts Primary Secondary Tertiary var buttonclassnames tsprimary tssecondary tstertiary rendercolumnslayoutbreakpoint desktop function rendercolumnsdesktop if desktop outhtml backgroundcolorsforEachfunctionclassname outhtml txtclassname outhtml backgroundcolorsforEachfunctionclassname outhtml renderbuttons outhtml outhtml else backgroundcolorsforEachfunctionclassname outhtml renderbuttons outhtml function renderbuttons var key guiKeyMastergenerateKey outhtml buttonclassnamesforEachfunctionclassname i outhtml attdisabled spiritdisabled disabled null outhtml txtbuttonlabeltextsi outhtml renderTogglekey function rendernested outhtml Nested tsbgwhite buttonclassnamesforEachfunctionclassname i outhtml outhtml function renderTogglekey outhtml Disabled return outwrite withInstructions input name layout type tsuiLayoutModel "},null,{"title":"Button","href":"components/buttons/index.html","content":" Button function spinselector selectorattrdatatsbusy true setTimeoutfunction selectorattrdatatsbusy false 3000 Button Use button classnames to prioritize the possible actions in your app Assign datatsquotButtonquot to a button to initialize it as a Button Default Button ltbutton datatsquotButtonquotgt ltspangtDefault Buttonltspangt ltbuttongt The default button looks like a link but some CSS classnames can be added to make it look more like a button Primary Secondary Tertiary ltbutton datatsquotButtonquot classquottsprimaryquotgt ltspangtPrimaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottssecondaryquotgt ltspangtSecondaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottstertiaryquotgt ltspangtTertiaryltspangt ltbuttongt Button icons Icons go into a separate i element You can see a list of all icons Button Text ltbutton datatsquotButtonquot classquottsprimaryquotgt ltspan stylequotdisplaynonequotgtButton Textltspangt lti classquottsiconarrowrightquotgtltigt ltbuttongt Youaposll notice in the code snippet that the span has been set to displaynone Buttons should never show both text and icon at the same time If you need both itaposs up to you to hide one or the other In this example the button has been rigged up to show the icon only in the mobile breakpoint Hidden In Mobile ltbutton datatsquotButtonquot classquottsprimaryquotgt ltspan classquottshidemobileonlyquotgtHidden In Mobileltspangt lti classquottsshowmobileonly tsiconarrowrightquotgtltigt ltbuttongt Button spinner Assign the datatsbusy attribute to a button to initialize a spinner ltbutton datatsquotButtonquot datatsbusyquottruequot classquottsprimaryquotgt ltspangtPrimaryltspangt ltbuttongt show spinner Micro Button You can add class tsmicro to get a micro button Primary Secondary Tertiary ltbutton datatsquotButtonquot classquottsprimary tsmicroquotgt ltspangtPrimaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottssecondary tsmicroquotgt ltspangtSecondaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottstertiary tsmicroquotgt ltspangtTertiaryltspangt ltbuttongt You can group buttons in menus to unlock advanced layout options "},null,null,null,null,null,null,{"title":"CompanyCard","href":"components/cards/companycard.html","content":" CompanyCard CompanyCard In this first iteration the CompanyCard is simply a HTML rendering that you can feed with JSON in various ways You can initialize a CompanyCard with the attribute datatsquotCompanyCardquot ltdiv datatsquotCompanyCardquot idquotmycardquotgtltdivgt Even without any data the card takes on a cardlike appearance If you are using Angular or jQuery you might like to feed the card through a JavaScript API as we will see you can however also embed the data directly in the markup Embedded JSON Serverside devs and UX designers might like to embed the JSON in the HTML Because this is JSON you should use double quotes and omit trailing commas ltdiv datatsquotCompanyCardquotgt ltscript typequotapplicationjsonquotgt quotidquot quot6bf17754f9de4e31aa31bd3ff765b9c2quot quotdataquot quotnamequot quotTradeshiftquot quotlogoquot quotassetslogopngquot quotsizequot quot100x2013249quot quotlocationquot quotSan Francisco Californiaquot quotindustryquot quotSoftware amp ITquot quotconnectionquot 2 ltscriptgt ltdivgt id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 Encoded JSON You can also embed the JSON in an attribute datatsrender The JSON string must be encoded in the format returned by method encodeURIComponentjson Remember to trim the JSON string before you encode it ltdiv datatsquotCompanyCardquot datatsrenderquot7B22id223A226bf17754f9de4e31aa31bd3ff765b9c2222C22data223A7B22name223A22Tradeshift222C22logo223A22assets2Flogopng222C22size223A22100E28093249222C22location223A22San20Francisco2C20California222C22industry223A22Software202620IT222C22connection223A27D7Dquotgtltdivgt Render programatically You can grab a hold of the card and instruct it to render some JSON data var card tsuigetmycard or pass an element cardrender id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 var card tsuigetaposmycardapos or pass an element cardrender id quot6bf17754f9de4e31aa31bd3ff765b9c2quot data name quotTradeshiftquot logo quotassetslogopngquot size apos100x2013249apos location quotSan Francisco Californiaquot industry aposSoftware amp ITapos connection 2 We notice that the connection status is indicated by a number The number matches an index in the following array which declares the label and icon tsuiCompanyCardconnectionTypes aposYour companyapos apostsiconnetworkapos aposRequest sentapos apostsiconnetworkapos aposConnectedapos apostsiconnetworkapos aposRegistration in progressapos apostsiconnetworkapos aposIn your Google Contactsapos apostsiconnetworkapos aposVia email onlyapos apostsiconnetworkapos This array is crowdsourced You can modify the array in your app simply by copypasting the code above into your initialization script You can also use numbers instead of strings to indicate size and industry cardrender id quot6bf17754f9de4e31aa31bd3ff765b9c2quot data name aposTradeshiftapos size 3 industry 6 If you provide a number instead of a string weaposll look it up in these lists tsuiCompanyCardcompanySizes apos1apos apos1x201310apos apos1x2013100apos apos100x2013249apos apos250500apos apos5001000apos tsuiCompanyCardindustryTypes aposAirlineapos aposCorporationapos aposEducational Organizationapos aposGovernment Organizationapos aposLocal Businessapos aposNGOapos aposSoftware amp ITapos aposPerforming Groupapos aposSports Teamapos You are also welcome to overwrite these arrays in your app Thataposs it for now "},{"title":"CompanyCard extras","href":"components/cards/extras.html","content":" CompanyCard extras CompanyCard extras These are considered experimental features You can feed data to your cards without poking around in the DOM In your HTML you must declare your cards with a datatsid attribute assigned ltdiv datatsquotCompanyCardquot datatsidquotfb3f98113b0d47c89926bd1a01c9630cquotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot0eb7919963a94f5fa95e79dbdaf25ae8quotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot535662297ec040b9bce412d61bcbfe41quotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot6bf17754f9de4e31aa31bd3ff765b9c2quotgtltdivgt You can now or even before import the JSON from a demo file and instruct the cards to render getJSONaposassetscardsjsonapos functionjson tsuiCompanyCardrenderjson The details view The card should eventually be able to render its own details view so that it looks the same outside of V4 Thereaposs a lot of infrastructure that needs to happen first not least with translations in the Runtime but it could look like this tsuigetmycardopen tsuigetaposmycardaposopen "},null,{"title":"UserCard","href":"components/cards/usercard.html","content":" UserCard figure output textalign center UserCard UserCards are a work in progress This is a developer preview In this first iteration the UserCard can simply display some user details in an Aside Properties are all optional but you should at least include the name tsuiUserCard id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Wired Earp image assetswiredearppng title EDB Programmer role Gentleman Spy email jmotradeshiftcom company Tradeshift companyUrl httptradeshiftcom open tsuiUserCard id apos6bf17754f9de4e31aa31bd3ff765b9c2apos data name aposWired Earpapos image aposassetswiredearppngapos title aposEDB Programmerapos role aposGentleman Spyapos email aposjmotradeshiftcomapos company aposTradeshiftapos companyUrl aposhttptradeshiftcomapos open You can initialize a UserCard with the tsusercard attribute Even without any data the card takes on a cardlike appearance If you are using Angular or jQuery you might like to feed the card through a JavaScript API You can however also embed the data directly in the markup Embedded JSON Serverside devs and UX designers might like to embed the JSON in the HTML Because this is JSON you should use double quotes and omit trailing commas id 6bf17754f9de4e31aa31bd3ff765b9c2 data email lzatradeshiftcom name Leo Johnson image assetsjimbobjohnsonjpg id 6bf17754f9de4e31aa31bd3ff765b9c2 data email lzatradeshiftcom name Leo Johnson image assetsjimbobjohnsonjpg Encoded JSON You can also embed the JSON in an attribute tsrender The JSON string must be encoded in the format returned by method encodeURIComponentjson Encode that JSON for this example Remember to trim the JSON string before you encode it "},null,null,null,null,{"title":"CompanyCard extras","href":"components/companycards/extras.html","content":" CompanyCard extras CompanyCard extras These are considered experimental features You can feed data to your cards without poking around in the DOM In your HTML you must declare your cards with a datatsid attribute assigned ltdiv datatsquotCompanyCardquot datatsidquotfb3f98113b0d47c89926bd1a01c9630cquotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot0eb7919963a94f5fa95e79dbdaf25ae8quotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot535662297ec040b9bce412d61bcbfe41quotgtltdivgt ltdiv datatsquotCompanyCardquot datatsidquot6bf17754f9de4e31aa31bd3ff765b9c2quotgtltdivgt You can now or even before import the JSON from a demo file and instruct the cards to render getJSONaposassetscardsjsonapos functionjson tsuiCompanyCardrenderjson The details view The card should eventually be able to render its own details view so that it looks the same outside of V4 Thereaposs a lot of infrastructure that needs to happen first not least with translations in the Runtime but it could look like this tsuigetmycardopen tsuigetaposmycardaposopen "},{"title":"CompanyCard","href":"components/companycards/index.html","content":" CompanyCard CompanyCard In this first iteration the CompanyCard is simply a HTML rendering that you can feed with JSON in various ways You can initialize a CompanyCard with the attribute datatsquotCompanyCardquot ltdiv datatsquotCompanyCardquot idquotmycardquotgtltdivgt Even without any data the card takes on a cardlike appearance If you are using Angular or jQuery you might like to feed the card through a JavaScript API You can however also embed the data directly in the markup Embedded JSON Serverside devs and UX designers might like to embed the JSON in the HTML Because this is JSON you should use double quotes and omit trailing commas ltdiv datatsquotCompanyCardquotgt ltscript typequotapplicationjsonquotgt quotidquot quot6bf17754f9de4e31aa31bd3ff765b9c2quot quotdataquot quotnamequot quotTradeshiftquot quotlogoquot quotassetslogopngquot quotsizequot quot100x2013249quot quotlocationquot quotSan Francisco Californiaquot quotindustryquot quotSoftware amp ITquot quotconnectionquot 2 ltscriptgt ltdivgt id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 Encoded JSON You can also embed the JSON in an attribute datatsrender The JSON string must be encoded in the format returned by method encodeURIComponentjson Remember to trim the JSON string before you encode it ltdiv datatsquotCompanyCardquot datatsrenderquot7B22id223A226bf17754f9de4e31aa31bd3ff765b9c2222C22data223A7B22name223A22Tradeshift222C22logo223A22assets2Flogopng222C22size223A22100E28093249222C22location223A22San20Francisco2C20California222C22industry223A22Software202620IT222C22connection223A27D7Dquotgtltdivgt "},{"title":"CompanyCard JS","href":"components/companycards/js.html","content":" CompanyCard JS CompanyCard JS You can grab a hold of the card and instruct it to render some JSON data var card tsuigetmycard or pass an element cardrender id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 var card tsuigetaposmycardapos or pass an element cardrender id quot6bf17754f9de4e31aa31bd3ff765b9c2quot data name quotTradeshiftquot logo quotassetslogopngquot size apos100x2013249apos location quotSan Francisco Californiaquot industry aposSoftware amp ITapos connection 2 We notice that the connection status is indicated by a number The number matches an index in the following array which declares the label and icon tsuiCompanyCardconnectionTypes aposYour companyapos apostsiconnetworkapos aposRequest sentapos apostsiconnetworkapos aposConnectedapos apostsiconnetworkapos aposRegistration in progressapos apostsiconnetworkapos aposIn your Google Contactsapos apostsiconnetworkapos aposVia email onlyapos apostsiconnetworkapos This array is crowdsourced You can modify the array in your app simply by copypasting the code above into your initialization script You can also use numbers instead of strings to indicate size and industry cardrender id quot6bf17754f9de4e31aa31bd3ff765b9c2quot data name aposTradeshiftapos size 3 industry 6 If you provide a number instead of a string weaposll look it up in these lists tsuiCompanyCardcompanySizes apos1apos apos1x201310apos apos1x2013100apos apos100x2013249apos apos250500apos apos5001000apos tsuiCompanyCardindustryTypes aposAirlineapos aposCorporationapos aposEducational Organizationapos aposGovernment Organizationapos aposLocal Businessapos aposNGOapos aposSoftware amp ITapos aposPerforming Groupapos aposSports Teamapos You are also welcome to overwrite these arrays in your app Thataposs it for now "},null,{"title":"DatePicker","href":"components/datepicker/index.html","content":" DatePicker DatePicker Calendar widget that appears in Aside Used in Forms for an implementation of ltinput typequotdatequotgt elements The DatePicker can be launched with a JavaScript API You should implement the onselect method to get notified whenever the user picks a date Note that you must manually open and close the DatePicker var datePicker tsuiDatePicker title Your Birthday value 19730326 onselect functionnewval oldval tsuiNotificationsuccessthisvalue thisclose onclosed function thisdispose datePickeropen var datePicker tsuiDatePicker title quotYour Birthdayquot value apos19730326apos onselect functionnewval oldval tsuiNotificationsuccessthisvalue thisclose onclosed function thisdispose datePickeropen You can specify a min and max value tsuiDatePicker title Your Birthday value 19840523 min 19840101 max 19851224 onselect function thisclose onclosed function thisdispose open tsuiDatePicker title quotYour Birthdayquot value apos19840523apos min apos19840101apos max apos19851224apos onselect function thisclose onclosed function thisdispose open The object argument configures a tsuiDatePickerModel as outlined below tsuiDatePickerModel Instance properties title string Appears as the title of the DatePicker value string The selected date Must be dashseparated ISO 8601 formatted date string eg 20150101 Instance methods open void Open the DatePicker close void Close the DatePicker onselect void Called whenever selection changes with two arguments newval and oldval onclosed void Event listener for close event Called after aside closing animation is completed dispose void Cleanup the DataPicker recommended "},{"title":"Dialog","href":"components/dialogs/index.html","content":" Dialog Dialog The Dialog API can be used to ask simple questions much like the JavaScript confirm method You can launch a Dialog with methods to handle OK and Cancel tsuiDialogconfirmWill you try onaccept function tsuiNotificationsuccessGood luck oncancel function tsuiNotificationsuccessCome back later tsuiDialogconfirmaposWill you tryapos onaccept function tsuiNotificationsuccessaposGood luckapos oncancel function tsuiNotificationsuccessaposCome back laterapos You are encouraged to specify the text of the OK button The button should attempt to indicate what happens when you press it But you should try to keep the text nice and short because the button really isnapost that big just yet tsuiDialogconfirmShow the Notification Show It onaccept function tsuiNotificationsuccessGood choice tsuiDialogconfirmaposShow the Notificationapos aposShow Itapos onaccept function tsuiNotificationsuccessaposGood choiceapos You can add a third string argument to specify the Cancel text Buttons setup Dialog buttons are secondary blue by default but you can choose to make the accept or cancel button primary You can also tweak the default focus tsuiDialogconfirmSign up for Tradeshift Join Now primary accept focused accept tsuiDialogconfirmaposSign up for Tradeshiftapos aposJoin Nowapos primary aposacceptapos focused aposacceptapos You can change the label of both the primary and secondary buttons tsuiDialogconfirmSign up for Tradeshift Join Now Not Now primary accept focused accept tsuiDialogconfirmaposSign up for Tradeshiftapos aposJoin Nowapos aposNot Nowapos primary aposacceptapos focused aposacceptapos Warning dialogs You can launch special dialogs to confirm choices of more dire consequence tsuiDialogwarningThis will delete the thing Delete It onaccept function tsuiDialogdanger Are you absolutely sure you want to permanently delete the whole thing Delete It tsuiDialogwarningaposThis will delete the thingapos aposDelete Itapos onaccept function tsuiDialogdanger aposAre you absolutely sure you want to apos apospermanently delete the whole thingapos aposDelete Itapos Update Icon You can change the icon by adding icon and the icon class name tsuiDialogconfirmSign up for Tradeshift Join Now icon tsiconcart primary accept focused accept tsuiDialogconfirmaposSign up for Tradeshiftapos aposJoin Nowapos icon apostsiconcartapos primary aposacceptapos focused aposacceptapos "},null,{"title":"Form Autocomplete","href":"components/forms/autocomplete.html","content":" Form Autocomplete Autocomplete Dropdown Input You can have an input field suggest results to the user and can be navigated using the keyboard or the mouse Basic Usage Loading the autocomplete data from a static array var autocomplete tsuigetmystaticautocomplete autocompletedata key 0 value zero key 1 value one key 2 value two key 3 value three key 4 value four key 5 value five key 6 value six key 7 value seven key 8 value eight key 9 value nine key 10 value ten var autocomplete tsuigetaposmystaticautocompleteapos autocompletedata key 0 value aposzeroapos key 1 value aposoneapos key 2 value apostwoapos key 3 value aposthreeapos key 4 value aposfourapos key 5 value aposfiveapos key 6 value apossixapos key 7 value apossevenapos key 8 value aposeightapos key 9 value aposnineapos key 10 value apostenapos Autocomplete from array External Data Loading all results from an external JSON endpoint but using the built in filtering var autocomplete tsuigetmyadvancedautocomplete getJSONassetsautocompletejson functionjson autocompletedatajson var autocomplete tsuigetaposmyadvancedautocompleteapos getJSONaposassetsautocompletejsonapos functionjson autocompletedatajson Autocomplete from JSON Advanced Usage Itaposs possible to override the filtering functionality to supply the user with any data youaposd like var autocomplete tsuigetmyfancyautocomplete autocompleteonfilterfunctionfilter var output for var i parseIntMathrandom 10 1 10 i 0 i outputpush key i value MathrandomtoString36substr2 5 return output var autocomplete tsuigetaposmyfancyautocompleteapos autocompleteonfilterfunctionfilter var output for var i parseIntMathrandom 10 1 10 i gt 0 i outputpush key i value MathrandomtoString36substr2 5 return output Autocomplete with custom results Overriding onselect onselect can be overridden to run your own code when an element is selected either with the keyboard or the mouse var autocomplete tsuigetmyspecialautocomplete autocompletedata key 0 value zero key 1 value one autocompleteonselectfunctionitem tsuiNotificationsuccess itemvalue selected return itemvalue var autocomplete tsuigetaposmyspecialautocompleteapos autocompletedata key 0 value aposzeroapos key 1 value aposoneapos autocompleteonselectfunctionitem tsuiNotificationsuccessaposquotapos itemvalue aposquot selectedapos return itemvalue Autocomplete with special onselect "},{"title":"Disabled &amp; Read-only Fields","href":"components/forms/disabled.html","content":" Disabled amp Readonly Fields Disabled amp Readonly Fields Form fields can be set to be disabled or readonly the same way you would in XHTML5 input typequottextquot disabled Disabled Text ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtDisabled Textltspangt ltinput typequottextquot disabledgt ltlabelgt ltfieldsetgt ltformgt input typequottextquot readonly Readonly Text ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtReadonly Textltspangt ltinput typequottextquot readonlygt ltlabelgt ltfieldsetgt ltformgt textarea disabled Disabled Textarea Fatback kevin picanha pork loin kielbasa turducken doner Beef ribs tongue ham ball tip hamburger pork loin biltong sausage salami sirloin tenderloin kevin shank pig meatloaf ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtDisabled Textarealtspangt lttextarea disabledgtFatback kevin picanha pork loin kielbasa turducken doner Beef ribs tongue ham ball tip hamburger pork loin biltong sausage salami sirloin tenderloin kevin shank pig meatloaflttextareagt ltlabelgt ltfieldsetgt ltformgt select disabled Disabled Select One Two Three Four Five ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtDisabled Selectltspangt ltselect disabledgt ltoption valuequotaquot selectedgtOneltoptiongt ltoption valuequotbquotgtTwoltoptiongt ltoption valuequotcquotgtThreeltoptiongt ltoption valuequotdquotgtFourltoptiongt ltoption valuequotequotgtFiveltoptiongt ltselectgt ltlabelgt ltfieldsetgt ltformgt input typequotradioquot disabled There is no choice Red pill Blue pill ltform datatsquotFormquotgt ltfieldsetgt ltspangtThere is no choiceltspangt ltlabelgt ltinput typequotradioquot namequotradioquot checked disabledgt ltspangtRed pillltspangt ltlabelgt ltlabelgt ltinput typequotradioquot namequotradioquot disabledgt ltspangtBlue pillltspangt ltlabelgt ltfieldsetgt ltformgt input typequotcheckboxquot disabled By browsing this page you agree to our terms I agree to something I agree to something by default ltform datatsquotFormquotgt ltfieldsetgt ltspangtBy browsing this page you agree to our termsltspangt ltlabelgt ltinput typequotcheckboxquot disabledgt ltspangtI agree to somethingltspangt ltlabelgt ltlabelgt ltinput typequotcheckboxquot checked disabledgt ltspangtI agree to something by defaultltspangt ltlabelgt ltfieldsetgt ltformgt input typequotcheckboxquot disabled alternate version Itaposs not a bug itaposs a feature Secret Feature Secret Feature On by default ltform datatsquotFormquotgt ltfieldsetgt ltspangtItaposs not a bug itaposs a featureltspangt ltlabelgt ltspangtSecret Featureltspangt ltinput typequotcheckboxquot disabledgt ltlabelgt ltlabelgt ltspangtSecret Feature On by defaultltspangt ltinput typequotcheckboxquot checked disabledgt ltlabelgt ltfieldsetgt ltformgt "},{"title":"Form Example","href":"components/forms/example.html","content":" Form Example function Controllerscope scopemodel poref invalid gln 1234567890123 windowangularmoduleapp controllerController scope Controller ErrorInfo Example Here you can see a full example on how to use the error and info helpers for form fields using AngularJS Text PO line item reference Error PO line item reference Must be 4 numeric digits in length Must be present on the related PO document GLN Optional Definition GLN A GLN Global Location Number is a globally unique 13 digit numeric identifier that is used to access data about a location More information about the GLN System Error GLN Must be 13 numeric digits in length Can only contain numbers Hereaposs the source for the form above ltform datatsquotFormquot namequotformquotgt ltfieldsetgt ltlabelgt ltspangtTextltspangt ltinput placeholderquotDescriptionquot gt ltlabelgt ltfieldsetgt ltfieldsetgt ltlabel ngclassquotapostserrorapos formporefinvalidquotgt ltspangtPO line item referenceltspangt ltinput namequotporefquot ngmodelquotmodelporefquot patternquot0914quot ngrequiredgt ltlabelgt ltdl classquottserrorsquot ngshowquotformporefinvalidquotgt ltdtgtError PO line item referenceltdtgt ltddgtMust be 4 numeric digits in lengthltddgt ltddgtMust be present on the related PO documentltddgt ltdlgt ltfieldsetgt ltfieldsetgt ltlabel ngclassquotapostserrorapos formglninvalidquotgt ltspangtGLN Optionalltspangt ltinput namequotglnquot ngmodelquotmodelglnquot sizequot13quot patternquot09113quot gt ltlabelgt ltdl classquottsinfoquot nghidequotformglninvalidquotgt ltdtgtDefinition GLNltdtgt ltddgtA GLN Global Location Number is a globally unique 13 digit numeric identifier that is used to access data about a locationltddgt ltddgtlta hrefquothttpenwikipediaorgwikiGlobalLocationNumberquotgtMore information about the GLN Systemltagtltddgt ltdlgt ltdl classquottserrorsquot ngshowquotformglninvalidquotgt ltdtgtError GLNltdtgt ltddgtMust be 13 numeric digits in lengthltddgt ltddgtCan only contain numbersltddgt ltdlgt ltfieldsetgt ltformgt "},{"title":"Form","href":"components/forms/index.html","content":" Form Form Provides styling and behavior for form controls and error messages Assign datatsquotFormquot to a form to initialize as a Form ltform datatsquotFormquotgt ltformgt Form components depend on specific internal element structure in order to initialize and style their contents Most components adhere to this structure ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangt ltspangt ltinputgt ltlabelgt ltfieldsetgt ltformgt textarea Starts out with three lines but will expand up to ten as content is entered The rows attribute can be used to adjust the initial amount of lines to show Textarea ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTextarealtspangt lttextareagtlttextareagt ltlabelgt ltfieldsetgt ltformgt You can specify typequotsubmitquot to make the texarea submit the form on ENTER In this mode newlines may still be entered while pressing the SHIFT key Press SHIFT to ENTER newlines ltform datatsquotFormquot actionquotjavascriptalertaposForm submittedaposquotgt ltfieldsetgt ltlabelgt ltspangtPress SHIFT to ENTER newlinesltspangt lttextarea rowsquot1quot typequotsubmitquotgtlttextareagt ltlabelgt ltfieldsetgt ltformgt input typequottextquot Text ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTextltspangt ltinput typequottextquot requiredgt ltlabelgt ltfieldsetgt ltformgt input typequottelquot Tel ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTelltspangt ltinput typequottelquot requiredgt ltlabelgt ltfieldsetgt ltformgt input typequotemailquot Email ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtEmailltspangt ltinput typequotemailquot requiredgt ltlabelgt ltfieldsetgt ltformgt input typequotnumberquot Number ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtNumberltspangt ltinput typequotnumberquotgt ltlabelgt ltfieldsetgt ltformgt input typequotdatequot Date ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtDateltspangt ltinput typequotdatequot valuequot20150101quot minquot20140101quot maxquot20160101quotgt ltlabelgt ltfieldsetgt ltformgt select The select will open in an Aside but youaposll mantain it like a normal select Note that the select only triggers a change event when the Aside is fully closed Select One Two Three ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtSelectltspangt ltselectgt ltoption valuequotaquot selectedgtOneltoptiongt ltoption valuequotbquotgtTwoltoptiongt ltoption valuequotcquotgtThreeltoptiongt ltselectgt ltlabelgt ltfieldsetgt ltformgt select multiple The select multiple only triggers a change when the Done button is pressed You can customize the button label by adding a button to the label element but note that this only configures the text on the button eg no event listeners are fired Select multiple One Two Three Four Five Cool apply changes ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtSelect multipleltspangt ltselect multiplegt ltoption valuequotaquot selectedgtOneltoptiongt ltoption valuequotbquot selectedgtTwoltoptiongt ltoption valuequotcquotgtThreeltoptiongt ltoption valuequotdquotgtFourltoptiongt ltoption valuequotequotgtFiveltoptiongt ltselectgt ltbuttongtCool apply changesltbuttongt ltlabelgt ltfieldsetgt ltformgt input typequotradioquot Radio element Generally used to choose something Choose wisely Red pill Blue pill ltform datatsquotFormquotgt ltfieldsetgt ltspangtChoose wiselyltspangt ltlabelgt ltinput typequotradioquot namequotradioquot checkedgt ltspangtRed pillltspangt ltlabelgt ltlabelgt ltinput typequotradioquot namequotradioquotgt ltspangtBlue pillltspangt ltlabelgt ltfieldsetgt ltformgt input typequotcheckboxquot Checkbox element Generally used to indicate consent on forms Legally Binding Contract I agree to something I agree to something by default ltform datatsquotFormquotgt ltfieldsetgt ltspangtLegally Binding Contractltspangt ltlabelgt ltinput typequotcheckboxquotgt ltspangtI agree to somethingltspangt ltlabelgt ltlabelgt ltinput typequotcheckboxquot checkedgt ltspangtI agree to something by defaultltspangt ltlabelgt ltfieldsetgt ltformgt input typequotcheckboxquot alternate version We call it the switch Used mainly for toggling preferencessettings Note that switch differs from the checkbox only by the order of HTML elements Settings Page Secret Feature Secret Feature On by default ltform datatsquotFormquotgt ltfieldsetgt ltspangtSettings Pageltspangt ltlabelgt ltspangtSecret Featureltspangt ltinput typequotcheckboxquotgt ltlabelgt ltlabelgt ltspangtSecret Feature On by defaultltspangt ltinput typequotcheckboxquot checkedgt ltlabelgt ltfieldsetgt ltformgt Errors and info To mark a control as invalid simply add the class tserror to the label Text ltform datatsquotFormquotgt ltfieldsetgt ltlabel classquottserrorquotgt ltspangtTextltspangt ltinput typequottextquotgt ltlabelgt ltfieldsetgt ltformgt To display an error message one must mark the control as errored using the tserror class as well as add the error message markup to the page Text Text An explanation of the error in question Another explanation of the error in question ltform datatsquotFormquotgt ltfieldsetgt ltlabel classquottserrorquotgt ltspangtTextltspangt ltinput typequottextquot gt ltlabelgt ltdl classquottserrorsquotgt ltdtgtTextltdtgt ltddgtAn explanation of the error in questionltddgt ltddgtAnother explanation of the error in questionltddgt ltdlgt ltfieldsetgt ltformgt To display an info section use the tsinfo class Text Text An information about the field Another information about the field ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTextltspangt ltinput typequottextquot gt ltlabelgt ltdl classquottsinfoquotgt ltdtgtTextltdtgt ltddgtAn information about the fieldltddgt ltddgtAnother information about the fieldltddgt ltdlgt ltfieldsetgt ltformgt "},null,{"title":"Form Test","href":"components/forms/test-1.html","content":" Form Test Testing fake inputs Testing the proxy elements created by ltselectgt and ltinput typequotdatequotgt TODO The SELECT updates on the tick make it faster This runs inside the Angular controller Select Select multiple Date This runs outside the Angular controller Label Select multiple Cool apply changes Date "},null,null,{"title":"Icons","href":"components/icons/css.html","content":" Icons edbmldeclareedbmlZCEiMv1asfunction edbml use strict var out edbmlout txt edbmlsafetext val edbmlsafeattr tsiconlogot1 tsiconlogot2 tsicondiscovery tsiconactivity tsicontodo tsiconnetwork tsiconcreatedocument tsiconalldocuments tsicondocument tsiconsales tsiconpurchases tsicondrafts tsiconapps tsiconusersettings tsiconsettings tsiconcompanyprofile tsiconlogout tsiconsupport tsiconchecked tsiconaccept tsicondone tsiconcheckedalt tsiconremove tsiconadd tsiconclose tsiconlocation tsiconaddfilter tsiconfollowed tsiconunfollowed tsiconsearch tsiconstatuschange tsiconedit tsiconrating tsiconshare tsiconindustry tsiconshowpicker tsiconwarning tsicontimer tsiconcomment tsiconmore tsiconusers tsiconownership tsiconcompanysize tsiconview tsiconreject tsicondispute tsiconmenuswitch tsicondelete tsiconcancel tsiconinfo tsiconforums tsiconaddfield tsiconfileaccess tsiconerror tsiconappactivate tsiconappactive tsiconfileattach tsiconreset tsiconsend tsiconsave tsiconproceed tsiconback tsicondownload tsiconbroadcastmessage tsiconinsertfrominventory tsicontriangleright tsicontriangleleft tsicontriangleup tsicontriangledown tsiconarrowright tsiconarrowleft tsiconarrowup tsiconarrowdown tsiconpreview tsiconlocked tsiconunlocked tsiconnext tsiconapprove tsiconcode tsiconhalt tsiconpay tsiconother tsiconmyapps tsiconcompanyevent tsiconsplit tsiconmerge tsiconassociated tsiconradio tsiconradioon tsiconcheckbox tsiconcheckboxon tsiconwrittenrequest tsiconcategories tsiconfavorites tsiconheart tsiconpreferred tsiconpin tsiconpreviouslyrequested tsiconcart tsiconarchive tsiconaddtoarchive sortforEachfunctionicon outhtml txticon return outwrite "},{"title":"Icons","href":"components/icons/index.html","content":" Icons Icons A library of icons that work great with Buttons Assign any of the icon classnames to an i element to get an icon Note that we like to reserve i for icons so if you need to emphasize text consider using em lti classquottsiconmyappsquotgt "},null,{"title":"Inline Components","href":"components/index.html","content":" Inline Components Inline components These components depend on special markup structures and some may expose features though a JavaScript API Other than specifying the datats attribute as shown there is no need to initialize the components in any special way Button A true classic available in several flavors ltbutton datatsquotButtonquot classquottsprimaryquotgt ltspangtPrimaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottssecondaryquotgt ltspangtSecondaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottstertiaryquotgt ltspangtTertiaryltspangt ltbuttongt Primary Secondary Tertiary ltbutton datatsquotButtonquot classquottsprimary tsmicroquotgt ltspangtPrimaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottssecondary tsmicroquotgt ltspangtSecondaryltspangt ltbuttongt ltbutton datatsquotButtonquot classquottstertiary tsmicroquotgt ltspangtTertiaryltspangt ltbuttongt Primary Secondary Tertiary CompanyCard A unified way to show companies ltdiv datatsquotCompanyCardquotgt ltscript typequotapplicationjsonquotgt quotidquot quot6bf17754f9de4e31aa31bd3ff765b9c2quot quotdataquot quotnamequot quotTradeshiftquot quotlogoquot quotassetslogopngquot quotsizequot quot100x2013249quot quotlocationquot quotSan Francisco Californiaquot quotindustryquot quotSoftware amp ITquot quotconnectionquot 2 ltscriptgt ltdivgt id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 Form Another classic canapost have webapps without them ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTextltspangt ltinput typequottextquot requiredgt ltlabelgt ltfieldsetgt ltformgt Text ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtTextarealtspangt lttextareagtlttextareagt ltlabelgt ltfieldsetgt ltformgt Textarea ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtDateltspangt ltinput typequotdatequot valuequot20150101quot minquot20140101quot maxquot20160101quotgt ltlabelgt ltfieldsetgt ltformgt Date ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtSelectltspangt ltselectgt ltoption valuequotaquot selectedgtOneltoptiongt ltoption valuequotbquotgtTwoltoptiongt ltoption valuequotcquotgtThreeltoptiongt ltselectgt ltlabelgt ltfieldsetgt ltformgt Select One Two Three ltform datatsquotFormquotgt ltfieldsetgt ltlabelgt ltspangtSelect multipleltspangt ltselect multiplegt ltoption valuequotaquot selectedgtOneltoptiongt ltoption valuequotbquot selectedgtTwoltoptiongt ltoption valuequotcquotgtThreeltoptiongt ltoption valuequotdquotgtFourltoptiongt ltoption valuequotequotgtFiveltoptiongt ltselectgt ltbuttongtCool apply changesltbuttongt ltlabelgt ltfieldsetgt ltformgt Select multiple One Two Three Four Five Cool apply changes ltform datatsquotFormquotgt ltfieldsetgt ltspangtChoose wiselyltspangt ltlabelgt ltinput typequotradioquot namequotradioquot checkedgt ltspangtRed pillltspangt ltlabelgt ltlabelgt ltinput typequotradioquot namequotradioquotgt ltspangtBlue pillltspangt ltlabelgt ltfieldsetgt ltformgt Choose wisely Red pill Blue pill ltform datatsquotFormquotgt ltfieldsetgt ltspangtLegally Binding Contractltspangt ltlabelgt ltinput typequotcheckboxquotgt ltspangtI agree to somethingltspangt ltlabelgt ltlabelgt ltinput typequotcheckboxquot checkedgt ltspangtI agree to something by defaultltspangt ltlabelgt ltfieldsetgt ltformgt Legally Binding Contract I agree to something I agree to something by default ltform datatsquotFormquotgt ltfieldsetgt ltspangtSettings Pageltspangt ltlabelgt ltspangtSecret Featureltspangt ltinput typequotcheckboxquotgt ltlabelgt ltlabelgt ltspangtSecret Feature On by defaultltspangt ltinput typequotcheckboxquot checkedgt ltlabelgt ltfieldsetgt ltformgt Settings Page Secret Feature Secret Feature On by default Icons We support a range of icons Here are a few randomly selected ones lti classquottsiconappsquot gt lti classquottsiconmyappsquot gt lti classquottsiconarchivequot gt lti classquottsiconbroadcastmessagequot gt lti classquottsiconcartquot gt lti classquottsicondiscoveryquot gt lti classquottsicondisputequot gt lti classquottsiconhaltquot gt lti classquottsiconheartquot gt lti classquottsiconpayquot gt lti classquottsicontimerquot gt lti classquottsiconsendquot gt Menu Not to be confused with the main navigation this is simply a list of selectable items ltmenu datatsquotMenuquotgt ltligt ltbuttongt ltspangtI have an icon on my rightltspangt ltsubgtAnd a second lineltsubgt lti classquottsiconratingquotgtltigt ltbuttongt ltligt ltligt ltbuttongt lti classquottsiconratingquotgtltigt ltspangtI have an icon on my left but skipped the second lineltspangt ltbuttongt ltligt ltmenugt I have an icon on my right And a second line I have an icon on my left but skipped the second line Note A nice way to inform the user about something on the page This is not for status messages It also works on pagelevel ltdiv datatsquotNotequotgt lti classquottsiconheartquotgtltigt ltpgtYou love the Noteltpgt ltdivgt You love the Note Search Unified search experience ltdiv datatsquotSearchquot idquotmysearchquot classquottsinsetquotgtltdivgt TabBar An easy way to show tabs Also works on pagelevel ltscriptgt var tabbar tsuigetapostabbarexampleapos tabbartabs label quotTab Onequot onselect function tsuiNotificationsuccessthislabel label quotTab Twoquot onselect function tsuiNotificationsuccessthislabel ltscriptgt guiBroadcastaddguiBROADCASTDIDSPIRITUALIZE onbroadcast function var firstload true var tabbar tsuigettabbarexample tabbartabs label Tab One onselect function if firstload firstload false else tsuiNotificationsuccessthislabel label Tab Two onselect function tsuiNotificationsuccessthislabel Table Ranging from spreadsheetstyle editing to just showing some tabular data ltscriptgt var table tsuigetapostableexampleapos tablecols label aposLevelapos type apostsnumberapos label aposCharacterapos flex 2 label aposAlignmentapos flex 2 tablerows 21 aposPaladin Knightapos aposLawful Goodapos 13 aposBarbarian Queenapos aposNeutral Evilapos 11 aposGlobal Senior Vice President of Salesapos aposChaotic Evilapos ltscriptgt guiBroadcastaddguiBROADCASTDIDSPIRITUALIZE onbroadcast function var table tsuigettableexample tablecols label Level type tsnumber label Character flex 2 label Alignment flex 2 tablerows 21 Paladin Knight Lawful Good 13 Barbarian Queen Neutral Evil 11 Global Senior Vice President of Sales Chaotic Evil Time Human readable time formatting lttime datatsquotTimequot datetimequot20160622 120000quotgtlttimegt UserImage Little avatars for the users ltimg datatsquotUserImagequot srcquotassetsjimpngquot altquotJim Bob Johnsonquotgt ltimg datatsquotUserImagequot altquotKarl Bensonquotgt ltimg datatsquotUserImagequot altquotMarshall Garrettquotgt ltimg datatsquotUserImagequot altquotKelvin Castroquotgt ltimg datatsquotUserImagequot altquotNatalie Carrquotgt ltimg datatsquotUserImagequot altquotRay Chavezquotgt "},{"title":"Menu","href":"components/menus/index.html","content":" Menu Menu Not to be confused with the main navigation the tsmenu is simply a list of selectable items Assign datatsquotMenuquot to a menu element to initialize it as a Menu Use li elements to separate the menu items all of which follows the structure of a Button Item One Item Two Item Three ltmenu datatsquotMenuquotgt ltligt ltbuttongt ltspangtItem Oneltspangt lti classquottsiconratingquotgtltigt ltbuttongt ltligt ltligt ltbuttongt ltspangtItem Twoltspangt lti classquottsiconratingquotgtltigt ltbuttongt ltligt ltligt ltbuttongt ltspangtItem Threeltspangt lti classquottsiconratingquotgtltigt ltbuttongt ltligt ltmenugt Adding Icons The markup follows the convention for buttons Use a span and an i element to seperate text and icon simply reverse the two to make the icon go first I have an icon on my right I have an icon on my left ltmenu datatsquotMenuquotgt ltligt ltbuttongt ltspangtI have an icon on my rightltspangt lti classquottsiconratingquotgtltigt ltbuttongt ltligt ltligt ltbuttongt lti classquottsiconratingquotgtltigt ltspangtI have an icon on my leftltspangt ltbuttongt ltligt ltmenugt Using the second linesub text To add a second line to the Menu item just add a sub with some text in it Iaposm the first line Iaposm the second line ltmenu datatsquotMenuquotgt ltligt ltbuttongt ltspangtIaposm the first lineltspangt ltsubgtIaposm the second lineltsubgt ltbuttongt ltligt ltmenugt Select one To create a single select menu mark one and only one li with the tschecked classname and use the tsiconchecked classname for the icon i element Selected Not selected ltmenu datatsquotMenuquotgt ltli classquottscheckedquotgt ltbuttongt ltspangtSelectedltspangt lti classquottsiconcheckedquotgtltigt ltbuttongt ltligt ltligt ltbuttongt ltspangtNot selectedltspangt ltbuttongt ltligt ltmenugt Select many To create a multi select menu simply add more classnames and icons Selected Also Selected ltmenu datatsquotMenuquotgt ltli classquottscheckedquotgt ltbuttongt ltspangtSelectedltspangt lti classquottsiconcheckedquotgtltigt ltbuttongt ltligt ltli classquottscheckedquotgt ltbuttongt ltspangtAlso Selectedltspangt lti classquottsiconcheckedquotgtltigt ltbuttongt ltligt ltmenugt The UI component makes no attempt to automatically manage these icons and classnames whenever a new menu item gets selected "},null,{"title":"Note","href":"components/notes/api.html","content":" Note Note API Itaposs possible to change the text and icon of the Note using method calls on the component Note on page using API var note tsuigetmynote notetextI love the note element noteicontsiconheart var note tsuigetaposmynoteapos notetextaposI love the note elementapos noteiconapostsiconheartapos Hiding a Note if the text and icon is empty using API This is my soontobehidden Note var note tsuigetmyothernote notetext noteicon var note tsuigetaposmyothernoteapos notetextaposapos noteiconaposapos "},{"title":"Note","href":"components/notes/index.html","content":" Note function toggle selectors ArrayforEacharguments functionselector tsuigetselectortoggle Note You can use the Note to give information to the user about the whole page or a section of the page The Note should however not be used to display errors or warning messages please use the Notification for that To explain to the user what the page is about you can show a Note at the top Note that there should never be more than one pagelevel Note tsuiNote icon tsiconheart text This page explains how to use the Note component with some nice examples onclose function tsuiNotificationsuccessThe Note is gone tsuiNote icon apostsiconheartapos text aposThis page explains how to use the Note component with some nice examplesapos onclose function tsuiNotificationsuccessaposThe Note is goneapos You can add buttons to the Note tsuiNote buttons label aposButtonapos type apostsprimaryapos onclick function tsuiNotificationsuccessthislabel You can use an inline Note to give information about a certain section of the page Only the pagelevel Note is closeable while inline Notes should stay on the page with the content You love the Note ltdiv datatsquotNotequotgt lti classquottsiconheartquotgtltigt ltpgtYou love the Noteltpgt ltdivgt Note without icon using simple HTML This is the iconless Note ltdiv datatsquotNotequotgt ltpgtThis is the iconless Noteltpgt ltdivgt Inline Note with closeable function This is the closeable inline Note ltdiv datatsquotNotequot datatscloseablequottruequotgt ltpgtThis is the closeable inline Noteltpgt ltdivgt The Note will wrap to multiple lines if thereaposs a lot of content inside Arcane spell failure charm domain cover dragon type enemy experience points versus Tradeshift family domain fighter and hardness hit die initiative check intelligence melee attack roll miniature figure movement modes Party planning domain point of origin powerful charge ray regeneration rogue special quality speed take 20 touch attack turned Fivefoot step ability class feature domain dying level luck domain negate ranged touch attack result speed surprise target total concealment unarmed strike Armor class base save bonus check conjuration divine spell falling objects fly law domain school of Tradeshift shield bonus threatened square war domain Ability damage acid effects burrow chaos domain class feature darkvision fullround action glamer subschool good subtype improved evasion incorporeal subtype ocean domain platinum piece size modifier You can use a Note in an Aside or a SideBar if you put the inline note as the first child of the tspanel ltaside datatsquotAsidequotgt ltdiv datatsquotPanelquotgt ltdiv datatsquotNotequotgt lti classquottsiconheartquotgtltigt ltpgtNote in the Asideltpgt ltdivgt ltdivgt ltasidegt Note in the Aside "},null,{"title":"Notification","href":"components/notifications/index.html","content":" Notification Setup to quicktest the markdown parser var TESTMARKDOWN Headers Paragraphs with strong textn becomes double newline Paragraphs with italic textn Paragraphs with source coden links This is a linkhttpwwwtradeshiftcom Unordered lists One Two Two 1 Two 2 Ordered lists 1 One 2 Two 1 Two 1 2 Two 2 joinn if false setTimeoutfunction function testitmodel var html modelrender documentquerySelectorarticleinnerHTML html consoleloghtml new tsuiTextModel html tsuiTextModelHTML text TESTMARKDOWN 500 Notification Simple modals for providing users with notifications much like the JavaScript alert method Basic markdown may be used for links and formatting The success notification demands no user interaction tsuiNotificationsuccessYou did it tsuiNotificationsuccessaposYou did itapos The info warning and error notification must be accepted by the user tsuiNotificationinfoYou can do it tsuiNotificationwarningYou will fail tsuiNotificationerrorYou are wrong tsuiNotificationinfoaposYou can do itapos tsuiNotificationwarningaposYou will failapos tsuiNotificationerroraposYou are wrongapos An optional second argument specifies the button text tsuiNotificationwarningBeware Understood tsuiNotificationwarningaposBewareapos aposUnderstoodapos You can configure a callback for when the Notification gets accepted tsuiNotificationinfoYou must accept it onaccept function tsuiNotificationsuccessWe knew you would tsuiNotificationinfoaposYou must accept itapos onaccept function tsuiNotificationsuccessaposWe knew you wouldapos Notifications support basic markdown for formatting and links Markdown for bold text and italic text and source code Markdown for a hyperlinkhttpwwwexamplecom When a link is clicked the URL will be passed along to the onlink method As you can see below the URL can be just a key it doesnapost have to be real URL var text Choose link oneONE or twoTWO or threeTHREE tsuiNotificationinfotext onlink functionurl thisacceptthenfunction onfadeout tsuiNotificationsuccessurl var text aposChoose link oneONE or twoTWO or threeTHREEapos tsuiNotificationinfotext onlink functionurl thisacceptthenfunction onfadeout tsuiNotificationsuccessurl If the link should indeed link to something make sure to provide the full protocol https tsuiNotificationinfo Please visit Tradeshifthttpwwwtradeshiftcom tsuiNotificationinfo aposPlease visit Tradeshifthttpwwwtradeshiftcomapos Note that all links will open in a new tab or window depending on the browser settings so you should not use links in Notifications for internal navigation at least not just yet "},{"title":"Pager","href":"components/pager/index.html","content":" Pager Pager Provides a navigation menu with shortcuts for all kinds of paginated data Assign datatsquotPagerquot to a menu or nav to initialize it as a Pager The component may be configured in HTML complete with an inline callback like in this example ltmenu datatsquotPagerquot datatspagesquot8quot datatspagequot0quot datatsonselectquotconsolelogthispagequotgt ltmenugt x2014 or you can configure it via a JavaScript API like in this example var pager tsuigetmypager or pass an element pagerpages 8 pagerpage 0 pageronselect functionpage consolelogpage var pager tsuigetaposmypagerapos or pass an element pagerpages 8 pagerpage 0 pageronselect functionpage consolelogpage As you can see the Pager has no default outline and this will make it easier to embed into other components Hereaposs a short summary of the Pagers properties and methods "},{"title":"Aside","href":"components/screenshots/aside.html","content":" Aside In this section the form and the menu and the buttons are siblings Check it Textarea Item One Item Two Button One Button Two "},null,{"title":"Form","href":"components/screenshots/form.html","content":" Form id 6bf17754f9de4e31aa31bd3ff765b9c2 data name Tradeshift logo assetslogopng size 100249 location San Francisco California industry Software IT connection 2 Toggle SideBar Text Date Select One Two Three Select multiple One Two Three Four Five Cool apply changes Text Textarea Choose wisely Red pill Blue pill Legally Binding Contract Yes No Settings Page No Yes Text Text An explanation of the error in question In this section the form and the menu and the buttons are siblings Check it Textarea Item One Item Two Button One Button Two Down here the fieldset and the menu and the buttons are contained inside a form They should still look the same Textarea Item One Item Two Button One Button Two "},null,null,{"title":"Screenshots","href":"components/screenshots/index.html","content":" Screenshots edbmldeclareedbml2qrU7B1asfunction edbml use strict var out edbmlout txt edbmlsafetext val edbmlsafeattr layout edbmlinputtsuiLayoutModel var spirit this var backgroundcolors tsbgblue tsbgdark tsbgred tsbgyellow tsbggreen tsbgwhite tsbgpurple var buttonlabeltexts Primary Secondary Tertiary Loading Micro var buttonclassnames tsprimary tssecondary tstertiary tsloading tsmicro rendercolumns function rendercolumns outhtml backgroundcolorsforEachfunctionclassname outhtml renderbuttons outhtml outhtml This is the closeable inline Note I have an icon on my right I have an icon on my left function renderbuttons var key guiKeyMastergenerateKey outhtml buttonclassnamesforEachfunctionclassname i outhtml var busy classname tsloading Loading outhtml txtbuttonlabeltextsi outhtml return outwrite withInstructions input name layout type tsuiLayoutModel "},null,{"title":"Search","href":"components/search/index.html","content":" Search Search The Search is prominently featured in the Main ToolBar but you can use it anywhere on the page if you like Note that the API is in any case identical You can initialize a Search with datatsquotSearchquot The classname tsinset will add an outline so that we can see how it behaves on this white background ltdiv datatsquotSearchquot idquotmysearchquot classquottsinsetquotgtltdivgt The search field expands when the field is focused by the user or whenever thereaposs a nonempty value in the field You can change the value like this var search tsuigetmysearch searchvalue Hello world var search tsuigetaposmysearchapos searchvalue aposHello worldapos Search callbacks The onsearch callback gets invoked when when the user presses ENTER var search tsuigetmysearch searchvalue Press ENTER here searchonsearch functionvalue tsuiNotificationsuccessvalue Search cleared var search tsuigetaposmysearchapos searchvalue aposPress ENTER hereapos searchonsearch functionvalue tsuiNotificationsuccessvalue aposSearch clearedapos If defined the onidle method gets called whenever the user pauses typing var search tsuigetmysearch searchvalue Try it now searchonidle functionvalue tsuiNotificationsuccessvalue var search tsuigetaposmysearchapos searchvalue aposTry it nowapos searchonidle functionvalue tsuiNotificationsuccessvalue The onidle method may also be called when the field loses focus The idletime property controls the timeout value default is 500 milliseconds Search info The info property doubles as both the placeholder when the field is expanded and the title or tooltip when the field is collapsed var search tsuigetmysearch searchinfo Search amongst the things searchvalue collapse the field var search tsuigetaposmysearchapos searchinfo aposSearch amongst the thingsapos searchvalue aposapos collapse the field Hereapos an overview of the properties and methods of the Search component "},{"title":"SideBars","href":"components/sidebars/index.html","content":" SideBars sticky display none important documentreadyfunction var element mysidebar var tsMain elementclosesttsmain if tsMainlength 0 tsMainbeforeelement SideBar content Aside content Footer content The button below is only relevant in mobile view Toggle SideBar SideBar The SideBar is a panel used for interactions directly related to the main content such as filtering and sorting a list of items Assign datatsquotSideBarquot to an aside to initialize as a SideBar The SideBar must be created with a child Panel ltaside datatsquotSideBarquotgt ltdiv datatsquotPanelquotgt ltpgtSideBar contentltpgt ltdivgt ltasidegt Also note tht the SideBar must be positioned before or after the Main element ltaside datatsquotSideBarquotgt ltasidegt ltmain datatsquotMainquotgt ltmaingt Toggle the SideBar In mobile breakpoint the SideBar is hidden and must be toggled forth manually If you resize to mobile view you can try it with this button Toggle SideBar You can toggle the SideBar like you would toggle an Aside var sidebar guigetaposmysidebarapos sidebaropen sidebarclose sidebartoggle Bonus panels You can put a Footer next to the Panel The Footer will stick to the bottom of the SideBar ltaside datatsquotSideBarquot idquotmysidebarquot datatstitlequotMy SideBarquotgt ltdiv datatsquotPanelquotgt ltdivgt ltdiv datatsquotFooterquot classquottsshowmobileonlyquotgt ltdivgt ltasidegt If you want this to be visible in mobile only as the current designs suggest you can assign it the classname tsshowmobileonly Nesting Asides You can make subsidebars by nesting Aside components in the tssidebar The Aside can be opened and closed like a normal Aside ltaside datatsquotSideBarquotgt ltdiv datatsquotPanelquotgt ltpgtSideBar contentltpgt ltdivgt ltaside datatsquotAsidequotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt ltasidegt Custom toolbar buttons The SideBar header works like a Toolbar You can add buttons with an API so weaposll add a button to toggle that Aside we talked about var sidebar guigetmysidebar var header sidebarheader headerbuttonspush icon tsiconadd onclick function guigetmyasidetoggle var sidebar guigetaposmysidebarapos var header sidebarheader headerbuttonspush icon apostsiconaddapos onclick function guigetaposmyasideapostoggle This API is likely to change "},null,{"title":"SideBars Test One","href":"components/sidebars/test-1.html","content":" SideBars Test One sticky display none important Bacon ipsum dolor amet turducken leberkas fatback porchetta cow shoulder kielbasa drumstick shank bacon pork chop turkey Drumstick filet mignon pig tbone porchetta jerky Sirloin beef ribs ball tip chuck pork loin rump tenderloin meatball short loin pig tritip swine Jerky frankfurter capicola beef ribs venison corned beef cupim prosciutto Sausage fatback shoulder pork loin salami beef ribs hamburger kevin tritip tenderloin pig jerky ham hock ham Filet mignon bresaola kevin biltong flank chuck sirloin swine beef rump cow Hamburger tbone landjaeger turkey doner fatback corned beef pastrami spare ribs tongue brisket tenderloin ball tip sirloin Doner tenderloin beef alcatra pork beef ribs sausage jerky ground round kevin corned beef jowl prosciutto Flank leberkas bresaola beef pork loin prosciutto brisket boudin capicola filet mignon drumstick turducken pork chuck Tritip landjaeger pork loin meatball turducken corned beef venison chicken pork cupim andouille ham hock Turkey pork belly pig picanha frankfurter andouille ball tip leberkas ground round ribeye jerky chicken meatloaf pork Pastrami ground round filet mignon drumstick pork loin biltong salami ham hock rump Biltong flank pork loin bacon shank shankle spare ribs drumstick beef shoulder meatloaf corned beef ground round tbone fatback Turducken corned beef swine filet mignon meatball pork prosciutto flank tbone pork belly Spare ribs tritip rump kevin pork loin fatback chicken shoulder pork belly beef ribs ham hock Ball tip beef ribs alcatra cow bacon short loin ground round kevin ham hock jerky leberkas tenderloin Beef corned beef bresaola sausage chuck alcatra kielbasa ribeye turkey salami short loin prosciutto Ham porchetta shank pork belly ribeye prosciutto turkey cupim pork Fatback swine tenderloin boudin filet mignon Tail fatback shoulder boudin Drumstick short ribs kielbasa hamburger Pig short loin ground round pork chop pork kevin boudin bacon salami turducken tongue picanha Bresaola cupim tritip meatloaf sirloin jowl alcatra ball tip porchetta ground round chicken short ribs brisket shankle tenderloin Leberkas brisket drumstick salami chicken shankle short loin spare ribs doner boudin hamburger frankfurter shoulder tenderloin Tritip cupim porchetta shoulder pork loin ground round turkey ham pig ribeye meatball leberkas landjaeger Jowl salami turkey pork loin sirloin tritip turducken tongue beef leberkas pastrami Flank tenderloin pork chop meatloaf chuck andouille boudin shoulder sausage ribeye Boudin porchetta short ribs ribeye pork chop chicken shankle picanha turkey brisket biltong andouille Brisket strip steak cow picanha porchetta boudin short loin Turkey cupim tail short loin Beef ribs tail tenderloin meatloaf corned beef leberkas short ribs alcatra pancetta drumstick Sausage rump fatback boudin picanha ham hock short ribs drumstick kielbasa Beef andouille ribeye meatball tenderloin picanha ham hock shankle fatback cow kielbasa boudin prosciutto bresaola short ribs Turducken short ribs ground round tritip Alcatra biltong brisket beef pork tbone boudin drumstick shank picanha cupim ham hock ribeye sausage Swine strip steak shank cow kielbasa tongue biltong bacon porchetta brisket Salami flank filet mignon pork chop beef frankfurter prosciutto Cow turkey prosciutto brisket tail pork chop pork loin boudin drumstick tenderloin frankfurter pork meatloaf hamburger Alcatra sirloin short ribs pork chop flank Bacon tbone boudin pork belly meatloaf chicken shoulder chuck landjaeger Meatloaf venison flank andouille tail Drumstick biltong spare ribs chuck Tbone drumstick hamburger shankle doner ball tip leberkas pork belly brisket pastrami chicken salami pork chop chuck Swine pastrami ground round sausage doner pork chop shank bresaola tongue Corned beef tail ribeye doner drumstick strip steak shoulder jerky ground round leberkas pastrami sirloin ball tip Tail tritip filet mignon jowl jerky salami pork belly venison swine cupim drumstick flank Venison ground round brisket boudin tritip kevin porchetta flank pork loin hamburger shank rump ham hock Aside content Footer content The button below is only relevant in mobile view Toggle SideBar Main area Bacon ipsum dolor amet turducken leberkas fatback porchetta cow shoulder kielbasa drumstick shank bacon pork chop turkey Drumstick filet mignon pig tbone porchetta jerky Sirloin beef ribs ball tip chuck pork loin rump tenderloin meatball short loin pig tritip swine Jerky frankfurter capicola beef ribs venison corned beef cupim prosciutto Sausage fatback shoulder pork loin salami beef ribs hamburger kevin tritip tenderloin pig jerky ham hock ham Filet mignon bresaola kevin biltong flank chuck sirloin swine beef rump cow Hamburger tbone landjaeger turkey doner fatback corned beef pastrami spare ribs tongue brisket tenderloin ball tip sirloin Doner tenderloin beef alcatra pork beef ribs sausage jerky ground round kevin corned beef jowl prosciutto Flank leberkas bresaola beef pork loin prosciutto brisket boudin capicola filet mignon drumstick turducken pork chuck Tritip landjaeger pork loin meatball turducken corned beef venison chicken pork cupim andouille ham hock Turkey pork belly pig picanha frankfurter andouille ball tip leberkas ground round ribeye jerky chicken meatloaf pork Pastrami ground round filet mignon drumstick pork loin biltong salami ham hock rump Biltong flank pork loin bacon shank shankle spare ribs drumstick beef shoulder meatloaf corned beef ground round tbone fatback Turducken corned beef swine filet mignon meatball pork prosciutto flank tbone pork belly Spare ribs tritip rump kevin pork loin fatback chicken shoulder pork belly beef ribs ham hock Ball tip beef ribs alcatra cow bacon short loin ground round kevin ham hock jerky leberkas tenderloin Beef corned beef bresaola sausage chuck alcatra kielbasa ribeye turkey salami short loin prosciutto Ham porchetta shank pork belly ribeye prosciutto turkey cupim pork Fatback swine tenderloin boudin filet mignon Tail fatback shoulder boudin Drumstick short ribs kielbasa hamburger Pig short loin ground round pork chop pork kevin boudin bacon salami turducken tongue picanha Bresaola cupim tritip meatloaf sirloin jowl alcatra ball tip porchetta ground round chicken short ribs brisket shankle tenderloin Leberkas brisket drumstick salami chicken shankle short loin spare ribs doner boudin hamburger frankfurter shoulder tenderloin Tritip cupim porchetta shoulder pork loin ground round turkey ham pig ribeye meatball leberkas landjaeger Jowl salami turkey pork loin sirloin tritip turducken tongue beef leberkas pastrami Flank tenderloin pork chop meatloaf chuck andouille boudin shoulder sausage ribeye Boudin porchetta short ribs ribeye pork chop chicken shankle picanha turkey brisket biltong andouille Brisket strip steak cow picanha porchetta boudin short loin Turkey cupim tail short loin Beef ribs tail tenderloin meatloaf corned beef leberkas short ribs alcatra pancetta drumstick Sausage rump fatback boudin picanha ham hock short ribs drumstick kielbasa Beef andouille ribeye meatball tenderloin picanha ham hock shankle fatback cow kielbasa boudin prosciutto bresaola short ribs Turducken short ribs ground round tritip Alcatra biltong brisket beef pork tbone boudin drumstick shank picanha cupim ham hock ribeye sausage Swine strip steak shank cow kielbasa tongue biltong bacon porchetta brisket Salami flank filet mignon pork chop beef frankfurter prosciutto Cow turkey prosciutto brisket tail pork chop pork loin boudin drumstick tenderloin frankfurter pork meatloaf hamburger Alcatra sirloin short ribs pork chop flank Bacon tbone boudin pork belly meatloaf chicken shoulder chuck landjaeger Meatloaf venison flank andouille tail Drumstick biltong spare ribs chuck Tbone drumstick hamburger shankle doner ball tip leberkas pork belly brisket pastrami chicken salami pork chop chuck Swine pastrami ground round sausage doner pork chop shank bresaola tongue Corned beef tail ribeye doner drumstick strip steak shoulder jerky ground round leberkas pastrami sirloin ball tip Tail tritip filet mignon jowl jerky salami pork belly venison swine cupim drumstick flank Venison ground round brisket boudin tritip kevin porchetta flank pork loin hamburger shank rump ham hock Bacon ipsum dolor amet turducken leberkas fatback porchetta cow shoulder kielbasa drumstick shank bacon pork chop turkey Drumstick filet mignon pig tbone porchetta jerky Sirloin beef ribs ball tip chuck pork loin rump tenderloin meatball short loin pig tritip swine Jerky frankfurter capicola beef ribs venison corned beef cupim prosciutto Sausage fatback shoulder pork loin salami beef ribs hamburger kevin tritip tenderloin pig jerky ham hock ham Filet mignon bresaola kevin biltong flank chuck sirloin swine beef rump cow Hamburger tbone landjaeger turkey doner fatback corned beef pastrami spare ribs tongue brisket tenderloin ball tip sirloin Doner tenderloin beef alcatra pork beef ribs sausage jerky ground round kevin corned beef jowl prosciutto Flank leberkas bresaola beef pork loin prosciutto brisket boudin capicola filet mignon drumstick turducken pork chuck Tritip landjaeger pork loin meatball turducken corned beef venison chicken pork cupim andouille ham hock Turkey pork belly pig picanha frankfurter andouille ball tip leberkas ground round ribeye jerky chicken meatloaf pork Pastrami ground round filet mignon drumstick pork loin biltong salami ham hock rump Biltong flank pork loin bacon shank shankle spare ribs drumstick beef shoulder meatloaf corned beef ground round tbone fatback Turducken corned beef swine filet mignon meatball pork prosciutto flank tbone pork belly Spare ribs tritip rump kevin pork loin fatback chicken shoulder pork belly beef ribs ham hock Ball tip beef ribs alcatra cow bacon short loin ground round kevin ham hock jerky leberkas tenderloin Beef corned beef bresaola sausage chuck alcatra kielbasa ribeye turkey salami short loin prosciutto Ham porchetta shank pork belly ribeye prosciutto turkey cupim pork Fatback swine tenderloin boudin filet mignon Tail fatback shoulder boudin Drumstick short ribs kielbasa hamburger Pig short loin ground round pork chop pork kevin boudin bacon salami turducken tongue picanha Bresaola cupim tritip meatloaf sirloin jowl alcatra ball tip porchetta ground round chicken short ribs brisket shankle tenderloin Leberkas brisket drumstick salami chicken shankle short loin spare ribs doner boudin hamburger frankfurter shoulder tenderloin Tritip cupim porchetta shoulder pork loin ground round turkey ham pig ribeye meatball leberkas landjaeger Jowl salami turkey pork loin sirloin tritip turducken tongue beef leberkas pastrami Flank tenderloin pork chop meatloaf chuck andouille boudin shoulder sausage ribeye Boudin porchetta short ribs ribeye pork chop chicken shankle picanha turkey brisket biltong andouille Brisket strip steak cow picanha porchetta boudin short loin Turkey cupim tail short loin Beef ribs tail tenderloin meatloaf corned beef leberkas short ribs alcatra pancetta drumstick Sausage rump fatback boudin picanha ham hock short ribs drumstick kielbasa Beef andouille ribeye meatball tenderloin picanha ham hock shankle fatback cow kielbasa boudin prosciutto bresaola short ribs Turducken short ribs ground round tritip Alcatra biltong brisket beef pork tbone boudin drumstick shank picanha cupim ham hock ribeye sausage Swine strip steak shank cow kielbasa tongue biltong bacon porchetta brisket Salami flank filet mignon pork chop beef frankfurter prosciutto Cow turkey prosciutto brisket tail pork chop pork loin boudin drumstick tenderloin frankfurter pork meatloaf hamburger Alcatra sirloin short ribs pork chop flank Bacon tbone boudin pork belly meatloaf chicken shoulder chuck landjaeger Meatloaf venison flank andouille tail Drumstick biltong spare ribs chuck Tbone drumstick hamburger shankle doner ball tip leberkas pork belly brisket pastrami chicken salami pork chop chuck Swine pastrami ground round sausage doner pork chop shank bresaola tongue Corned beef tail ribeye doner drumstick strip steak shoulder jerky ground round leberkas pastrami sirloin ball tip Tail tritip filet mignon jowl jerky salami pork belly venison swine cupim drumstick flank Venison ground round brisket boudin tritip kevin porchetta flank pork loin hamburger shank rump ham hock Aside content Footer content The button below is only relevant in mobile view Toggle SideBar "},{"title":"Spinner","href":"components/spinners/index.html","content":" Spinner function spinelm elmattrdatatsbusy true setTimeoutfunction elmattrdatatsbusy false 1500 Spinner The Spinner can be used with Main Aside Table SideBar and Button You can assign the datatsbusy to the Main element to initialize a Spinner ltmain datatsquotMainquot tsbusyquotBusy messagequotgt lth1gtMain contentlth1gt ltmaingt Letaposs try that with jQuery var main mainfirst mainattrdatatsbusy Crunching data setTimeoutfunction mainattrdatatsbusy 1500 var main aposmainaposfirst mainattraposdatatsbusyapos aposCrunching dataapos setTimeoutfunction mainattraposdatatsbusyapos aposapos 1500 If you want a blocking overlay you can use the datatsblocking attribute var main mainfirst mainattrdatatsblocking Crunching and blocking setTimeoutfunction mainattrdatatsblocking 1500 var main aposmainaposfirst mainattraposdatatsblockingapos quotCrunching and blockingquot setTimeoutfunction mainattraposdatatsblockingapos quotquot 1500 Aside and SideBar Assign the datatsbusy attribute to an Aside or SideBar to initialize a Spinner ltaside datatsquotAsidequot datatsbusyquotChrunching dataquotgt ltdiv datatsquotPanelquotgt ltpgtAside contentltpgt ltdivgt ltasidegt It will look like this var aside myaside asideattrdatatsopen true asideattrdatatsbusy Crunching data setTimeoutfunction asideattrdatatsbusy setTimeoutfunction asideattrdatatsopen false 250 1500 var aside quotmyasidequot asideattraposdatatsopenapos true asideattraposdatatsbusyapos aposCrunching dataapos setTimeoutfunction asideattraposdatatsbusyapos aposapos setTimeoutfunction asideattraposdatatsopenapos false 250 1500 Button Assign the datatsbusy attribute to a Button to initialize a Spinner ltbutton datatsquotButtonquot classquottsprimaryquot tsbusyquottruequotgt ltspangtPrimaryltspangt ltbuttongt Show Spinner Table Assign the datatsbusy attribute to a Table to initialize a Spinner var table tsuigetmytable tablecolsOne Two Tree tablerows A D G B E H C F I mytableattrdatatsbusy Loading setTimeoutfunction mytableattrdatatsbusy 1500 var table tsuigetaposmytableapos tablecolsaposOneapos aposTwoapos aposTreeapos tablerows aposAapos aposDapos aposGapos aposBapos aposEapos aposHapos aposCapos aposFapos aposIapos aposmytableaposattraposdatatsbusyapos aposLoadingapos setTimeoutfunction aposmytableaposattraposdatatsbusyapos aposapos 1500 Aside content "},{"title":"Table Demo","href":"components/table/angular.html","content":" Table Demo sticky display none important "},null,null,null,null,null,null,null,null,{"title":"Table Build","href":"components/table/building.html","content":" Table Build Building the Table You can build your cols and rows with a compact syntax var table tsuigetmytable tablecolsOne Two Tree tablerows A D G B E H C F I var table tsuigetaposmytableapos tablecolsaposOneapos aposTwoapos aposTreeapos tablerows aposAapos aposDapos aposGapos aposBapos aposEapos aposHapos aposCapos aposFapos aposIapos You can also declare columns as objects The objects have a label property var table tsuigetexample1 tablecols label One label Two label Three var table tsuigetaposexample1apos tablecols label aposOneapos label aposTwoapos label aposThreeapos This will come in handy when we need to assign extra properties to the columns If we set the type property to tsnumber the text will be rightaligned except in the first column var table tsuigetexample2 tablecols label Type label Value type tsnumber tablerows Random number Mathrandom var table tsuigetaposexample2apos tablecols label aposTypeapos label aposValueapos type apostsnumberapos tablerows aposRandom numberapos Mathrandom We can also declare rows as objects with a list of cells This syntax will allow us to mark the row as selected you can read more about selection var table tsuigetexample3 tableselectablerows cells A D G selected true cells B E H cells C F I var table tsuigetaposexample3apos tableselectablerows cells aposAapos aposDapos aposGapos selected true cells aposBapos aposEapos aposHapos cells aposCapos aposFapos aposIapos The individual cells can also be declared as objects if the displayed text should be different from the hidden value which can be anything you like var table tsuigetexample4 tablerows cells value 1 text One value 2 text Two value 3 text Three var table tsuigetaposexample4apos tablerows cells value 1 text aposOneapos value 2 text aposTwoapos value 3 text aposThreeapos You can update a single row whenever you like Here with compact syntax var table tsuigetexample5 tablerows A B C D E F tablerow1 Mathrandom Mathrandom Mathrandom var table tsuigetaposexample5apos tablerows aposAapos aposBapos aposCapos aposDapos aposEapos aposFapos tablerow1 Mathrandom Mathrandom Mathrandom You can of course also update a single cell Here with compact syntax var table tsuigetexample6 tablerows A B C D E F tablecell1 1 Mathrandom var table tsuigetaposexample6apos tablerows aposAapos aposBapos aposCapos aposDapos aposEapos aposFapos tablecell1 1 Mathrandom You can use array methods like push pop shift unshift splice reverse and so on to mange the rows Just note that the length property is readonly var table tsuigetexample7 var rows tablerows rowspush1 2 3 rowsunshift4 5 6 rowssplice0 0 7 8 9 rowsreverse var table tsuigetaposexample7apos var rows tablerows rowspush1 2 3 rowsunshift4 5 6 rowssplice0 0 7 8 9 rowsreverse Hereapos a summary of the methods that deal with building the Table The Table offers a minimal amount of layout options "},{"title":"Table Click","href":"components/table/clicking.html","content":" Table Click Clicking the cells You can make the Table body clickable The rowindex and cellindex refer to the indexes in the JSON arrays and not the table as shown on the screen They are in other words not affected by sorting and paging and searching var table tsuigetexample8 var popup tsuiNotification tablerows A D G B E H C F I tableclickablefunctionrowindex cellindex popupsuccessRow rowindex Cell cellindex var table tsuigetaposexample8apos var popup tsuiNotification tablerows aposAapos aposDapos aposGapos aposBapos aposEapos aposHapos aposCapos aposFapos aposIapos tableclickablefunctionrowindex cellindex popupsuccessaposRow apos rowindex apos Cell apos cellindex "},{"title":"Table Config","href":"components/table/configuring.html","content":" Table Config Configuring the Table You can make the table configurable by a button in the statusbar var table tsuigettable1 var popup tsuiNotification tableconfigurablefunction onclick popupsuccessGo configure colsA B C Drows 1 4 7 10 2 5 8 11 3 6 9 12 var table tsuigetapostable1apos var popup tsuiNotification tableconfigurablefunction onclick popupsuccessaposGo configureapos colsaposAapos aposBapos aposCapos aposDaposrows 1 4 7 10 2 5 8 11 3 6 9 12 The button triggers a callback but there is otherwise no default UI associated The ColModel supports a visible property that can be used to hide columns var cols tsuigettable1cols function hideindex colsindexvisible false ifindex setTimeoutfunction next hideindex 1000 3 var cols tsuigetapostable1aposcols function hideindex colsindexvisible false ifindex setTimeoutfunction next hideindex 1000 3 Hereaposs a summary of these things "},{"title":"Table Demo","href":"components/table/demo.html","content":" Table Demo sticky display none important tsmain overflowy hidden "},null,{"title":"Table Edit","href":"components/table/editing.html","content":" Table Edit Editing the cells Editing is a work in progress This is a developer preview We can make the Table editable with a callback that fires on change var table tsuigettable1 tablerows Single asterisks is used for italic text Double asterisks is used for strong text Single backtick is used for monotype text Double tilde can be used to Strike text editablefunction oneditrowindex cellindex value consolelogSend to backend value tablecellrowindex cellindex value var table tsuigetapostable1apos tablerows aposSingle asterisks is used for italic textapos aposDouble asterisks is used for strong textapos aposSingle backtick is used for monotype textapos aposDouble tilde can be used to Strike textapos editablefunction oneditrowindex cellindex value consolelogaposSend to backend apos value tablecellrowindex cellindex value All cells are assumed editable unless negated in the column definition tsuigettable6cols label Edit label Edit label Dont edit editable false rows V V X editablefunction oneditri ci value thiscellri ci value tsuigetapostable6aposcols label aposEditapos label aposEditapos label aposDonapost editapos editable false rows aposVapos aposVapos aposXapos editablefunction oneditri ci value thiscellri ci value If you switch to verbose syntax you can also disable editing per row tsuigettable7rows cells X X X editable false cells V V V cells V V V editablefunction oneditri ci value thiscellri ci value tsuigetapostable7aposrows cells aposXapos aposXapos aposXapos editable false cells aposVapos aposVapos aposVapos cells aposVapos aposVapos aposVapos editablefunction oneditri ci value thiscellri ci value You can override both columns and rows by specifying editabletrue on the individual cells Again this would best be done using verbose syntax Multiline editing You can enter newlines by holding SHIFT on ENTER You will need to enter two newlines to create a paragraph Note however that we only show the first paragraph unless the column is set to wrap var table tsuigettable8 var popup tsuiNotification tablecols label Wrapped column wrap true label Unwrapped column rows Hold SHIFT while pressing ENTER to add a second paragraph New paragraph ignored editablefunction oneditri ci value tablecellri ci value var table tsuigetapostable8apos var popup tsuiNotification tablecols label aposWrapped columnapos wrap true label aposUnwrapped columnapos rows aposHold SHIFT while pressing ENTER to add a second paragraphapos aposNew paragraph ignoredapos editablefunction oneditri ci value tablecellri ci value Input validation Note that the actual update is a manual proces This will give you a break to validate the input In this example weaposll show the errors in a Notification var table tsuigettable2 var popup tsuiNotification tablerows 1 1 2 3 5 8 13 21 34 55 editablefunction oneditri ci value value Numbervalue ifisNaNvalue tableinvalidri ci popuperrorPlease type a number onaccept function tablefocusri ci else consolelogSend to backend value tablecellri ci value var table tsuigetapostable2apos var popup tsuiNotification tablerows 1 1 2 3 5 8 13 21 34 55 editablefunction oneditri ci value value Numbervalue ifisNaNvalue tableinvalidri ci popuperroraposPlease type a numberapos onaccept function tablefocusri ci else consolelogaposSend to backend apos value tablecellri ci value We can report the errors in a less annoying way if we pass a string as we mark the cells invalid The message will show in the statubar when the cell is focused Weaposll also initialize the statusbar with an empty string so that it doesnapost awkwardly pop into existance function formatvalue return new DatevaluetoDateString function validvalue return isNaNnew DatevaluegetTime var table tsuigettable3 tablestatusrows value 19851026 text format19851026 value 20151021 text format20151026 value 19551112 text format19551112 editablefunction oneditri ci value ifvalidvalue consolelogSend to backend value tablecellri ci value value text formatvalue else var message Please use the format YYYYMMDD tableinvalidri ci message function formatvalue return new DatevaluetoDateString function validvalue return isNaNnew DatevaluegetTime var table tsuigetapostable3apos tablestatusaposaposrows value apos19851026apos text formatapos19851026apos value apos20151021apos text formatapos20151026apos value apos19551112apos text formatapos19551112apos editablefunction oneditri ci value ifvalidvalue consolelogaposSend to backend apos value tablecellri ci value value text formatvalue else var message aposPlease use the format YYYYMMDDapos tableinvalidri ci message When the cell is eventually updated it automatically becomes valid Letaposs talk more about the difference between text and value in the example above Text versus value It doesnapost always matter but itaposs important to note that we edit the value while we show the text Hereaposs another example to illustrate the difference tsuigettable4rows value 1000 text 100000 value 2000 text 200000 value 3000 text 300000 editable tsuigetapostable4aposrows value 1000 text apos100000apos value 2000 text apos200000apos value 3000 text apos300000apos editable This way we can edit validate and persist the data in a uniform format in this case JavaScript numbers while displaying a regionalized or otherwise customized format We can exploit this creatively by editing a document ID and showing the document title for example Remember to update verbosely tablecellrowindex cellindex text apos400000apos value 4000 x2014 because otherwise the text becomes identical to the value Also note that the editable callback will always serve the value as a string so it may be nescessary to convert it to a number Hereaposs the more complete example function formatn return ntoFixed2replaceBd3dg var table tsuigettable5 tablerows value 1000 text format1000 value 2000 text format2000 value 3000 text format1000 editablefunctionri ci value value Numbervalue ifisNaNvalue tableinvalidri ci else tablecellri ci value value text formatvalue function formatn return aposapos ntoFixed2replaceBd3dg quotquot var table tsuigetapostable5apos tablerows value 1000 text format1000 value 2000 text format2000 value 3000 text format1000 editablefunctionri ci value value Numbervalue ifisNaNvalue tableinvalidri ci else tablecellri ci value value text formatvalue Hereaposs an overview of the editing related features API for knowing when something is invalid everything is valid How to visually differentiate editable versus noneditable cells "},{"title":"Table Extras","href":"components/table/extras.html","content":" Table Extras function getbuttonlabel name value return item Button type tssecondary tsmicro label label name name value value function getswitchname value checked return item Switch name name value value checked checked function geticontype color return item Icon type type color color black Table extras Table extras are work in progress This is a developer preview Table cells can be declared via JSON using verbose syntax But we can use a different JSON syntax to declare cells with special content The Table will generate components based on the value of the item property and this can be either Button Switch or Icon Button This function will return the JSON to generate a Button in the Table function getbuttonlabel name value return item aposButtonapos type apostssecondary tsmicroapos label label name name value value To conserve browser memory in very large Tables the onclick callback is not supported But you can intercept the Button click via the name and value property you just need to assign the onbutton method to the Table var table tsuigettable1 tablerows Apple getbuttonBuy this Apple buy 123 Orange getbuttonBuy that Orange buy 456 Banana getbuttonBuy the Banana buy 789 tableonbutton functionname value rowindex cellindex ifname buy tsuiNotificationsuccessProduct value ordered tablecellrowindex cellindex getbuttonCancel order var table tsuigetapostable1apos tablerows aposAppleapos getbuttonaposBuy this Appleapos aposbuyapos apos123apos aposOrangeapos getbuttonaposBuy that Orangeapos aposbuyapos apos456apos aposBananaapos getbuttonaposBuy the Bananaapos aposbuyapos apos789apos tableonbutton functionname value rowindex cellindex ifname aposbuyapos tsuiNotificationsuccessaposProduct apos value apos orderedapos tablecellrowindex cellindex getbuttonaposCancel orderapos The Button value can be anything from strings and numbers and booleans to objects and arrays if that helps Just donapost assign any functions because those will be ignored Here is the configurable properties of the ButtonModel Switch This function returns the JSON to generate a Switch function getswitchname value checked return item aposSwitchapos name name value value checked checked The Switch is the checkbox that looks like some kind of switch var table tsuigettable2 tablerows Spam mails getswitchtoggle 123 true Prank calls getswitchtoggle 456 true House visits getswitchtoggle 789 false tableonswitch functionname value checked rowindex cellindex ifname toggle var status checked enabled disabled tsuiNotificationsuccessService value status var table tsuigetapostable2apos tablerows aposSpam mailsapos getswitchapostoggleapos apos123apos true aposPrank callsapos getswitchapostoggleapos apos456apos true aposHouse visitsapos getswitchapostoggleapos apos789apos false tableonswitch functionname value checked rowindex cellindex ifname apostoggleapos var status checked aposenabledapos aposdisabledapos tsuiNotificationsuccessaposService apos value apos apos status TODO We could need a layout feature to fix the width of the switch column Here is the configurable properties of the SwitchModel Icon This function returns the JSON to generate an icon function geticontype color aposblackapos return item aposIconapos type type color color The type configures the icon classname and the optional color property can be one of black medium red green blue and purple var table tsuigettable3 tablerows geticontsiconsales geticontsiconcancel medium geticontsiconerror red geticontsiconaccept green geticontsiconinfo blue geticontsiconfavorites purple var table tsuigetapostable3apos tablerows geticonapostsiconsalesapos geticonapostsiconcancelapos aposmediumapos geticonapostsiconerrorapos aposredapos geticonapostsiconacceptapos aposgreenapos geticonapostsiconinfoapos aposblueapos geticonapostsiconfavoritesapos apospurpleapos Here is the configurable properties of the IconModel This interface may change as we upgrade to SVG icons "},{"title":"Table Filter","href":"components/table/filtering.html","content":" Table Filter Filtering the columns The table doesnapost really know anything about quotfilteringquot but it does support a button which can be assigned an icon and an onclick method Perhaps you can use this to create your own filtering UI in an Aside or something var table tsuigettable1 var popup tsuiNotification tablecols label Hello type tsnumber button icon tsiconaddfilter onclick function thisicon tsicondelete popupsuccessClicked var table tsuigetapostable1apos var popup tsuiNotification tablecols label aposHelloapos type apostsnumberapos button icon apostsiconaddfilterapos onclick function thisicon apostsicondeleteapos popupsuccessaposClickedapos You can change the icon and the onclick method as often as you like var table tsuigettable1 var popup tsuiNotification var mycol tablecols0 mycolbuttonicon tsiconview mycolbuttononclick function popupsuccessClicked again var table tsuigetapostable1apos var popup tsuiNotification var mycol tablecols0 mycolbuttonicon apostsiconviewapos mycolbuttononclick function popupsuccessaposClicked againapos When you implement filtering you can either build the rows from scratch or update the visible property of the existing row x2014 like in this example var table tsuigettable2 var popup tsuiNotification var isodd false tablerows1 2 3 4 5 6 7cols label All numbers type tsnumber button icon tsiconaddfilter info Show odd rows onclick function isodd isodd thisicon isodd tsicondelete tsiconaddfilter thisinfo isodd Show all rows Show odd rows tablecols0label isodd Odd numbers All numbers tablerowsforEachfunctionrow i rowvisible isodd i 2 0 true var table tsuigetapostable2apos var popup tsuiNotification var isodd false tablerows1 2 3 4 5 6 7cols label aposAll numbersapos type apostsnumberapos button icon apostsiconaddfilterapos info aposShow odd rowsapos onclick function isodd isodd thisicon isodd apostsicondeleteapos apostsiconaddfilterapos thisinfo isodd aposShow all rowsapos aposShow odd rowsapos tablecols0label isodd aposOdd numbersapos aposAll numbersapos tablerowsforEachfunctionrow i rowvisible isodd i 2 0 true The button gets hidden by the search because it doesnapost look right to have both Let us know if that becomes a problem "},{"title":"Table Formatting","href":"components/table/formatting.html","content":" Table Formatting Formatting the cells The Table supports a simple subset of Markdown out of the box var table tsuigettable1 tablerows Italic text Strong text Strike text monotype text var table tsuigetapostable1apos tablerows aposItalic textapos aposStrong textapos aposStrike textapos aposmonotype textapos Use double newline n to render multiple paragraphs We also have UL lists var table tsuigettable2 tablerows Para 1nnPara 2nnPara 3 Item 1n Item 2n Item 3 var table tsuigetapostable2apos tablerows aposPara 1nnPara 2nnPara 3apos apos Item 1n Item 2n Item 3apos To support links youaposll first need to call the linkable method just to remind yourself that you may now become exposed to phishing attacks var table tsuigettable3 tablelinkable tablerows Please visit Tradeshifthttpwwwtradeshiftcom var table tsuigetapostable3apos tablelinkable tablerows aposPlease visit Tradeshifthttpwwwtradeshiftcomapos When you link to something make sure to include the protocol https and note that links should not be used for internal navigation at least not just yet If the link should work more like a button you can intecept the click action with the onlink callback In this case you can use any string as the href var table tsuigettable4 var popup tsuiNotification tablelinkablefunction onlinkanystring popupsuccessanystring rows Choose link oneONE or twoTWO or threeTHREE var table tsuigetapostable4apos var popup tsuiNotification tablelinkablefunction onlinkanystring popupsuccessanystring rows aposChoose link oneONE or twoTWO or threeTHREEapos "},{"title":"Table Floating Gutter","href":"components/table/gutter.html","content":" Table Floating Gutter Floating Gutter Just so we have an example of this feature If the table has a horizontal scrollbar the checkbox column should stay fixed while you scroll since this will make it easier to work with selection on mobile phones getJSONassetsrowdatajson functionjson var table tsuigettableselectable tablecols label ID minwidth 300 label Nameminwidth 300 label Price minwidth 300 rowsjsonmax5 getJSONaposassetsrowdatajsonapos functionjson var table tsuigetapostableaposselectable tablecols label aposIDapos minwidth 300 label aposNameaposminwidth 300 label aposPriceapos minwidth 300 rowsjsonmax5 "},{"title":"Table","href":"components/table/index.html","content":" Table Table The Table is a work in progress This is a developer preview Contrary to common belief the datatsquotTablequot attribute should not be assigned to a table element because the component will create that table itself Instead we can assign it to a div ltdiv datatsquotTablequotgtltdivgt All features are controlled through an API as outlined on the following pages "},{"title":"Table Layout","href":"components/table/layouting.html","content":" Table Layout Layout the columns Columns sizes can flex relative to other columns These last two columns are twice the width of the first column which is assumed a flex value of 1 var table tsuigetexample4 tablecols label Level type tsnumber label Character flex 2 label Alignment flex 2 tablerows 21 Paladin Knight Lawful Good 13 Barbarian Queen Neutral Evil 11 Global Senior Vice President of Sales Chaotic Evil var table tsuigetaposexample4apos tablecols label aposLevelapos type apostsnumberapos label aposCharacterapos flex 2 label aposAlignmentapos flex 2 tablerows 21 aposPaladin Knightapos aposLawful Goodapos 13 aposBarbarian Queenapos aposNeutral Evilapos 11 aposGlobal Senior Vice President of Salesapos aposChaotic Evilapos If the Table is small like in the example above you can still run into truncated text If this becomes a problem you can either wrap the column cells var table tsuigetexample5 tablecols label Level type tsnumber label Character flex 2 wrap true label Alignment flex 2 tablerows 21 Paladin Knight Lawful Good 13 Barbarian Queen Neutral Evil 11 Global Senior Vice President of Sales Chaotic Evil var table tsuigetaposexample5apos tablecols label aposLevelapos type apostsnumberapos label aposCharacterapos flex 2 wrap true label aposAlignmentapos flex 2 tablerows 21 aposPaladin Knightapos aposLawful Goodapos 13 aposBarbarian Queenapos aposNeutral Evilapos 11 aposGlobal Senior Vice President of Salesapos aposChaotic Evilapos x2014 or you can assign it a minsize in pixels If you have many columns on a small screen youaposll want to do this in any case and on all the columns var table tsuigetexample6 tablecols label Level type tsnumber minwidth 60 label Character flex 2 minwidth 300 label Alignment flex 2 minwidh 300 tablerows 21 Paladin Knight Lawful Good 13 Barbarian Queen Neutral Evil 11 Global Senior Vice President of Sales Chaotic Evil var table tsuigetaposexample6apos tablecols label aposLevelapos type apostsnumberapos minwidth 60 label aposCharacterapos flex 2 minwidth 300 label aposAlignmentapos flex 2 minwidh 300 tablerows 21 aposPaladin Knightapos aposLawful Goodapos 13 aposBarbarian Queenapos aposNeutral Evilapos 11 aposGlobal Senior Vice President of Salesapos aposChaotic Evilapos We have a bug In this example the last minwidth isnapost working this becomes apparent if we resize to something very small The Table also has a Pager for dealing with large amounts of data "},{"title":"Table Paging","href":"components/table/paging.html","content":" Table Paging Paging the rows You can limit the number of visible rows with the max method If the table contains more rows a Pager will be created An equivalent method size also fixes the height of the Table so that the pager footer never jump up and down getJSONassetsrowdatajson functionjson var table tsuigetexample9 tablecols label ID type tsnumber label Name flex 2 label Price type tsnumber tablerowsjsonmax5 getJSONaposassetsrowdatajsonapos functionjson var table tsuigetaposexample9apos tablecols label aposIDapos type apostsnumberapos label aposNameapos flex 2 label aposPriceapos type apostsnumberapos tablerowsjsonmax5 If you would like to manage paging yourself because you have a billion products and donapost want to fetch them all at once you can create your own pager var table tsuigetbigdatatable var popup tsuiNotification tablemax10cols label ID type tsnumber label Name flex 2 label Price type tsnumber tablepager pages 5 page 0 onselect loadpage function loadpageindex var url assetspage index json getJSONurl functionjson var n jsonlength popupsuccessLoaded n rows tablerowsjson loadpage0 var table tsuigetaposbigdatatableapos var popup tsuiNotification tablemax10cols label aposIDapos type apostsnumberapos label aposNameapos flex 2 label aposPriceapos type apostsnumberapos tablepager pages 5 page 0 onselect loadpage function loadpageindex var url aposassetspageapos index aposjsonapos getJSONurl functionjson var n jsonlength popupsuccessaposLoaded apos n apos rowsapos tablerowsjson loadpage0 FIX THIS If you need to reset the pager for example when sorting the Table you can control the page index Note however that it doesnt work var table tsuigetbigdatatable var pager tablepager pagerpage 0 "},{"title":"Table Search","href":"components/table/searching.html","content":" Table Search Searching the columns You can setup a SearchModel for any column via the search property We ship the Table with a builtin search mechanism but youaposll still need to call it The Table search method takes a column index and the string to search for getJSONassetsrowdatajson functionjson var table tsuigetexample10 tablerowsjsonmax4cols label ID type tsnumber search tip Search product ID onidle functionvalue tablesearch0 value label Product Name flex 1 search tip Search product names onidle functionvalue tablesearch1 value getJSONaposassetsrowdatajsonapos functionjson var table tsuigetaposexample10apos tablerowsjsonmax4cols label aposIDapos type apostsnumberapos search tip aposSearch product IDapos onidle functionvalue tablesearch0 value label aposProduct Nameapos flex 1 search tip aposSearch product namesapos onidle functionvalue tablesearch1 value The search algorithm is extremely primitive and to some degree it always will be at least until the Table can be loaded separately from other components because file size You can focus the search field if you like either by setting the focused property to true in the JSON or by calling the focus method sometime later on var table tsuigetexample10 tablecols1searchfocus var table tsuigetaposexample10apos tablecols1searchfocus You can also do some other stuff Hereaposs an overview of the SearchModel tsuiSearchModel Instance properties value string The value of the input field tip string Both the placeholder and the title tooltip idletime number Timeout in milliseconds before the user is considered idle Instance methods onsearch void Called when the user presses ENTER onidle void Called when the user pauses typing onfocus void Called when the search field is focused onblur void Called when the search field gets blurred focus void Focus the search field blur void Blur the search field "},{"title":"Table Select","href":"components/table/selecting.html","content":" Table Select Selecting the rows You can mark rows as selectable with the method of that name The callback fires whenever one or more rows changes state The arguments selected and unselected arguments are both arraysofrowindexes var table tsuigettable1 var popup tsuiNotification tablerows cells A D G selected true cells B E H cells C F I tableselectablefunction debugselected unselected popupsuccess JSONstringifyselected JSONstringifyunselected join var table tsuigetapostable1apos var popup tsuiNotification tablerows cells aposAapos aposDapos aposGapos selected true cells aposBapos aposEapos aposHapos cells aposCapos aposFapos aposIapos tableselectablefunction debugselected unselected popupsuccess JSONstringifyselected JSONstringifyunselected joinapos apos You can mark individual rows as unselectable with the selectable property var table tsuigettable5 var popup tsuiNotification tablerows cells A D G cells B E H selectable false cells C F I tableselectablefunction debugselected unselected popupsuccess JSONstringifyselected JSONstringifyunselected join var table tsuigetapostable5apos var popup tsuiNotification tablerows cells aposAapos aposDapos aposGapos cells aposBapos aposEapos aposHapos selectable false cells aposCapos aposFapos aposIapos tableselectablefunction debugselected unselected popupsuccess JSONstringifyselected JSONstringifyunselected joinapos apos You can control selection using the methods select unselect and toggle The methods take one or more indexes or an array of indexes as arguments var table tsuigettable3 tableselectablerows A E I B F J C G K D H L select0 1toggle2 3 var table tsuigetapostable3apos tableselectablerows aposAapos aposEapos aposIapos aposBapos aposFapos aposJapos aposCapos aposGapos aposKapos aposDapos aposHapos aposLapos select0 1toggle2 3 You can also omit the argument to select unselect or toggle everything tsuigettable3toggle tsuigetapostable3apostoggle You can retrieve the selected indexes as an array with the selected method var table tsuigettable3 var array tableselected var popup tsuiNotification popupsuccessJSONstringifyarray var table tsuigetapostable3apos var array tableselected var popup tsuiNotification popupsuccessJSONstringifyarray You can also confirm selection by passing one or more indexes or an array var table tsuigettable3 var popup tsuiNotification iftableselected0 1 2 3 popupsuccessAll selected else popupwarningYou must select them all var table tsuigetapostable3apos var popup tsuiNotification iftableselected0 1 2 3 popupsuccessaposAll selectedapos else popupwarningaposYou must select them allapos If you add columns to the table youaposll get a selection menu in the header var table tsuigettable2 tableselectable tablecolsOne Two Three tablerows cells A D G cells B E H cells C F I var table tsuigetapostable2apos tableselectable tablecolsaposOneapos aposTwoapos aposThreeapos tablerows cells aposAapos aposDapos aposGapos cells aposBapos aposEapos aposHapos cells aposCapos aposFapos aposIapos The menu selects or deselects all visible rows If there are multiple pages in the table youaposll be presented with the opportunity to select all pages getJSONassetsrowdatajson functionjson var table tsuigettable4selectable tablecolsID Name Pricerowsjsonmax5 getJSONaposassetsrowdatajsonapos functionjson var table tsuigetapostable4aposselectable tablecolsaposIDapos aposNameapos aposPriceaposrowsjsonmax5 If you are loading the table data incrementally so you manage paging yourself you might like to know when all or none is selected via the menu The Table supports two additional callbacks that can be assigned via selectable tableselectableonselect onselectall onunselectall tableselectableonselect onselectall onunselectall You can also assign these methods directly tableonselect functionselected unselected tableonselectall function consolelogAll tableonunselectall function consolelogNone tableonselect functionselected unselected tableonselectall function consolelogaposAllapos tableonunselectall function consolelogaposNoneapos Hereaposs a summary of the methods that deal with row selection "},{"title":"Table Sort","href":"components/table/sorting.html","content":" Table Sort Sorting the columns You can make the Table sortable with a callback that triggers whenever a column is clicked We ship the Table with a builtin sort mechanism but youaposll still need to call it The sort method takes a column index and a direction var table tsuigetexample6 tablecols Animal label Price type tsnumber rows Donkey 700 Baboon 1500 Coyote 250 Albatross 50 sortablefunctionindex ascending tablesortindex ascending tablesort0 true var table tsuigetaposexample6apos tablecols aposAnimalapos label aposPriceapos type apostsnumberapos rows aposDonkeyapos 700 aposBaboonapos 1500 aposCoyoteapos 250 aposAlbatrossapos 50 sortablefunctionindex ascending tablesortindex ascending tablesort0 true The index is the column index and the ascending argument alternates whenever the same col is clicked twice If you manage your own sorting routine you can control the appearance of the column using selected and ascending var table tsuigetexample12 tablecols label Example selected true ascending false setIntervalfunction var col tablecols0 ifcolselected colselected colascending colascending 1000 var table tsuigetaposexample12apos tablecols label aposExampleapos selected true ascending false setIntervalfunction var col tablecols0 ifcolselected colselected colascending colascending 1000 Importantly note that the cell values must all be declared as numbers in order to sort numerically You can declare a hidden value while showing a human readable text using verbose syntax tablerows value 1 text aposOneapos value 2 text aposTwoapos value 3 text aposThreeapos "},{"title":"Table Sort","href":"components/table/status.html","content":" Table Sort Status messages We can show a message in the lower left corner The message could be something like quotShowing 1020 out of 123 productsquot or quot23 products selectedquot var table tsuigettable1 tablestatusThis is the message tablerows 1 4 7 2 5 8 3 6 9 var table tsuigetapostable1apos tablestatusaposThis is the messageapos tablerows 1 4 7 2 5 8 3 6 9 In a small Table such as this one which spans the width of an iPhone 6 the message will be presented on a separate line when we add more features var table tsuigettable1 tableconfigurablepager pages 23 var table tsuigetapostable1apos tableconfigurablepager pages 23 To avoid clipping it is generally advised to keep the message nice and short "},{"title":"Table Styling","href":"components/table/styling.html","content":" Table Styling mytable tholdprice backgroundcolor rgb250 200 200 mytable tdoldprice backgroundcolor rgb255 225 225 mytable thnewprice backgroundcolor rgb200 250 200 mytable tdnewprice backgroundcolor rgb225 255 225 example2 tdpalered backgroundcolor rgb255 225 225 example2 tdpalegreen backgroundcolor rgb225 255 225 example2 tdpaleblue backgroundcolor rgb225 225 255 example3 tdveryspecial backgroundcolor rgb225 225 255 Styling the table The column type property works as a classname for both headers and cells var table tsuigetmytable tablecols label Product label Regular Price type tsnumber oldprice label Sale price type tsnumber newprice tablerows Apple 130 100 Orange 075 050 Banana 200 125 var table tsuigetaposmytableapos tablecols label aposProductapos label aposRegular Priceapos type apostsnumber oldpriceapos label aposSale priceapos type apostsnumber newpriceapos tablerows aposAppleapos apos130apos apos100apos aposOrangeapos apos075apos apos050apos aposBananaapos apos200apos apos125apos This means that you can style the columns using CSS that looks like this ltstyle typequottextlessquotgt mytable th ampoldprice background red ampnewprice background green td ampoldprice background pink ampnewprice background lime ltstylegt A similar property works for the rows if you switch to verbose syntax You will of course need to defined these classnames somewhere in your CSS file tsuigetexample2rows cells A D G type palered cells B E H type palegreen cells C F I type paleblue tsuigetaposexample2aposrows cells aposAapos aposDapos aposGapos type apospaleredapos cells aposBapos aposEapos aposHapos type apospalegreenapos cells aposCapos aposFapos aposIapos type apospaleblueapos Finally the individual table cells can be styled with the type property Again you will have to switch to verbose syntax in order to declare this property tsuigetexample3rows cells text Normal text Normal text Special type veryspecial tsuigetaposexample3aposrows cells text aposNormalapos text aposNormalapos text aposSpecialapos type aposveryspecialapos "},null,null,{"title":"Time","href":"components/times/index.html","content":" Time Time Use the Time component to show a human readable time your app Assign datatsquotTimequot to a time to initialize it as a Time lttime datatsquotTimequot datetimequot20151104 035933quotgtlttimegt If you do not trust the users device time you can set the realtime attribute to mark the current time the moment when the page renders lttime datatsquotTimequot datetimequot20151104 035933quot realtimequot20151104 035935quotgtlttimegt If you set an invalid datetime it will show the string lttime datatsquotTimequot datetimequotA long time ago in a galaxy far far awayquotquotgtlttimegt "},null,null,{"title":"UserImage","href":"components/userimages/index.html","content":" UserImage UserImage If the user didnapost upload a photo the UserImage will generate a fallback image based on his or her name You can initialize a UserImage by assigning datatsquotUserImagequot to an img element A fallback image will be generated based on the users name if the image has no src attribute or if the image somehow failed to load ltimg datatsquotUserImagequot srcquotassetsjimpngquot altquotJim Bob Johnsonquotgt ltimg datatsquotUserImagequot altquotKarl Bensonquotgt ltimg datatsquotUserImagequot altquotMarshall Garrettquotgt ltimg datatsquotUserImagequot altquotKelvin Castroquotgt ltimg datatsquotUserImagequot altquotNatalie Carrquotgt ltimg datatsquotUserImagequot altquotRochelle Coxquotgt ltimg datatsquotUserImagequot altquotMae Schultzquotgt ltimg datatsquotUserImagequot altquotJimmie Edwardsquotgt ltimg datatsquotUserImagequot altquotCindy Jordanquotgt ltimg datatsquotUserImagequot altquotRay Chavezquotgt The image defaults to a size of 44x44 pixels If you prefer a different size youaposll need to specify both width and height as attributes in the HTML ltimg tsuserimage altquotTrip Fontainequot widthquot88quot heightquot88quotgt "},{"title":"3rd Party","href":"design/3rdparty.html","content":" 3rd Party sticky display none important tsuireadyfunction getassets3rdpartymd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"title":"Buttons","href":"design/copy/buttons.html","content":" Buttons sticky display none important tsuireadyfunction getassetsbuttonsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Copy in the Development Process","href":"design/copy/dev.html","content":" Copy in the Development Process sticky display none important tsuireadyfunction getassetsdevmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Emails","href":"design/copy/emails.html","content":" Emails sticky display none important tsuireadyfunction getassetsemailsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Error Messages","href":"design/copy/errors.html","content":" Error Messages sticky display none important tsuireadyfunction getassetserrorsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"UI Copy","href":"design/copy/index.html","content":" UI Copy sticky display none important tsuireadyfunction getassetsindexmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Menu Pickers","href":"design/copy/pickers.html","content":" Menu Pickers sticky display none important tsuireadyfunction getassetspickersmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"UI Copy Principles","href":"design/copy/principles.html","content":" UI Copy Principles sticky display none important tsuireadyfunction getassetsprinciplesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,{"title":"Terminology &amp; Cheat Sheet","href":"design/copy/terms.html","content":" Terminology amp Cheat Sheet sticky display none important tsuireadyfunction getassetstermsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Downloads","href":"design/downloads.html","content":" Downloads sticky display none important tsuireadyfunction getassetsdownloadsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Gestures","href":"design/gestures.html","content":" Gestures sticky display none important tsuireadyfunction getassetsgesturesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"3rd Party","href":"design/guidelines.DEPRECATED/3rdparty.html","content":" 3rd Party sticky display none important tsuireadyfunction getassets3rdpartymd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,null,null,null,null,null,null,null,null,null,null,{"title":"Downloads","href":"design/guidelines.DEPRECATED/downloads.html","content":" Downloads sticky display none important tsuireadyfunction getassetsdownloadsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Gestures","href":"design/guidelines.DEPRECATED/gestures.html","content":" Gestures sticky display none important tsuireadyfunction getassetsgesturesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Design Guidelines","href":"design/guidelines.DEPRECATED/index.html","content":" Design Guidelines sticky display none important tsuireadyfunction getassetsindexmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,{"title":"Principles","href":"design/guidelines.DEPRECATED/principles.html","content":" Principles sticky display none important tsuireadyfunction getassetsprinciplesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Structure","href":"design/guidelines.DEPRECATED/structure.html","content":" Structure sticky display none important tsuireadyfunction getassetsstructuremd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,{"title":"Design Guidelines","href":"design/index.html","content":" Design Guidelines sticky display none important tsuireadyfunction getassetsindexmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"title":"Buttons","href":"design/patterns/buttons.html","content":" Buttons sticky display none important tsuireadyfunction getassetsbuttonsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Emails","href":"design/patterns/emails.html","content":" Emails sticky display none important tsuireadyfunction getassetsemailsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Full page apps","href":"design/patterns/fullpage.html","content":" Full page apps sticky display none important tsuireadyfunction getassetsfullpagemd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Design Patters","href":"design/patterns/index.html","content":" Design Patters sticky display none important tsuireadyfunction getassetsindexmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Basic Inputs","href":"design/patterns/inputs.html","content":" Basic Inputs sticky display none important tsuireadyfunction getassetsinputsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Navigation Items","href":"design/patterns/nav.html","content":" Navigation Items sticky display none important tsuireadyfunction getassetsnavmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Alerts &amp; Notifications","href":"design/patterns/notifications.html","content":" Alerts amp Notifications sticky display none important tsuireadyfunction getassetsnotificationsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Option Lists and Pickers","href":"design/patterns/pickers.html","content":" Option Lists and Pickers sticky display none important tsuireadyfunction getassetspickersmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Switches","href":"design/patterns/switches.html","content":" Switches sticky display none important tsuireadyfunction getassetsswitchesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Tables","href":"design/patterns/tables.html","content":" Tables sticky display none important tsuireadyfunction getassetstablesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,{"title":"Principles","href":"design/principles.html","content":" Principles sticky display none important tsuireadyfunction getassetsprinciplesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Structure","href":"design/structure.html","content":" Structure sticky display none important tsuireadyfunction getassetsstructuremd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Animation","href":"design/style/anim.html","content":" Animation sticky display none important tsuireadyfunction getassetsanimationmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,null,null,null,null,null,null,null,null,{"title":"Charts &amp; Graphs","href":"design/style/charts.html","content":" Charts amp Graphs sticky display none important tsuireadyfunction getassetsCharts Graphsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Colors","href":"design/style/colors.html","content":" Colors sticky display none important tsuireadyfunction getassetscolorsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Grid","href":"design/style/grid.html","content":" Grid sticky display none important tsuireadyfunction getassetsgridmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Icons","href":"design/style/icons.html","content":" Icons sticky display none important tsuireadyfunction getassetsiconsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Images","href":"design/style/images.html","content":" Images sticky display none important tsuireadyfunction getassetsimagesmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"","href":"design/style/index.html","content":" sticky display none important tsuireadyfunction getassetsmd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},{"title":"Tradeshift Logo","href":"design/style/logo.html","content":" Tradeshift Logo sticky display none important tsuireadyfunction getassetslogomd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,{"title":"Typography","href":"design/style/typo.html","content":" Typography sticky display none important tsuireadyfunction getassetstypomd functionmarkdown documentquerySelectormarkdowninnerHTML windowmarkdowntoHTMLmarkdown Maruku "},null,null,{"title":"Markdown","href":"development/markdown/index.html","content":" Markdown Markdown The Markdown is a work in progress This is a developer preview The API markup or layout of this component might change significantly Hello Shouldnapost this page also show the Markdown source code TODO "},null,null,{"title":"Root Panels","href":"development/rootpanels/index.html","content":" Root Panels sticky display none important Root panels Root panels is a work in progress This is a developer preview The API markup or layout of this component might change significantly We can position Panel elements as direct children of the body to autogenerate labeled tabs in the ToolBar This will allow multiple Main to exist ltbodygt ltheader datatsquotTopBarquotgtltheadergt ltdiv datatsquotPanelquot datatslabelquotPanel Onequotgt ltmain datatsquotMainquotgtltmaingt ltdivgt ltdiv datatsquotPanelquot datatslabelquotPanel Twoquotgt ltmain datatsquotMainquotgtltmaingt ltdivgt ltdiv datatsquotPanelquot datatslabelquotPanel Threequotgt ltmain datatsquotMainquotgtltmaingt ltdivgt ltbodygt If the developers wants to reflect the selected tab in the URL for history support he must add some custom functionality to the onselect method of each individual Tab in the TopBar But this should be made easier see note below We should implement onselect as a configurable method on the TopBar API so that this becomes easier to setup The method couldpass the selected Tab andor selected index as an argument Panel Two A In this Panel the nested Main contains two additional Panel elements to autogenerate a TabBar the TabBar is shown at the top of the page ltbodygt Panel One ltdiv datatsquotPanelquot datatslabelquotPanel Twoquotgt ltmain datatsquotMainquotgt ltdiv datatsquotPanelquot datatslabelquotPanel Two Aquotgt ltdiv datatsquotPanelquot datatslabelquotPanel Two Bquotgt ltmaingt ltdivgt Panel Three ltbodygt Panel Two B Chuck cow Tradeshift pork shoulder loin drumstick swine biltong pastrami fatback meatball ham rump boudin picanha Ground round beef ribs doner boudin brisket biltong tbone capicola Corned beef flank pancetta sirloin jowl meatball pork chop alcatra Landjaeger biltong pork chop alcatra spare ribs turducken strip steak bresaola shankle chicken pastrami doner salami brisket Ham hock biltong tbone salami sausage pork spare ribs beef flank pig Kevin meatloaf turducken short loin sausage spare ribs tongue ham hock leberkas ham strip steak pig jerky Tenderloin alcatra leberkas shoulder sirloin pancetta short ribs pastrami tbone tritip pork belly kevin Tenderloin filet mignon chicken spare ribs meatball capicola ham jerky swine bresaola pork chop ribeye cupim tbone bacon Pork belly tail swine ham hock alcatra pork chop shoulder pastrami spare ribs venison hamburger beef drumstick pancetta Kevin swine ham spare ribs strip steak andouille rump Pork chop rump filet mignon shankle pastrami ground round landjaeger ribeye shoulder strip steak chicken bresaola Swine turkey bresaola flank jerky salami bacon filet mignon Turducken jowl pork chop meatball pastrami swine ball tip leberkas Doner cow chicken rump swine flank salami Pork belly bacon tenderloin tongue cow tritip alcatra short ribs turducken chicken biltong drumstick meatball Drumstick frankfurter shank sausage andouille shankle Strip steak flank brisket ham pastrami shoulder hamburger chicken drumstick meatball tail Brisket drumstick meatball leberkas beef ribs Prosciutto bacon pork shoulder salami Meatloaf salami beef chuck biltong Flank sausage shoulder bresaola sirloin prosciutto boudin cupim strip steak andouille pancetta Landjaeger drumstick spare ribs salami venison picanha pork rump cupim andouille sirloin beef ribeye meatloaf Bacon short loin pork leberkas shank salami rump pig ribeye porchetta tail spare ribs Turducken short ribs prosciutto venison fatback sirloin beef strip steak rump shankle ground round Tenderloin picanha landjaeger beef ribs Drumstick ribeye prosciutto salami Tenderloin bacon spare ribs rump kielbasa Strip steak tongue bacon andouille meatloaf beef ribeye salami brisket pancetta short loin short ribs rump turducken Andouille turducken meatball prosciutto corned beef tbone Jerky shoulder andouille kielbasa tbone leberkas pork chop Turducken hamburger prosciutto ground round pork chop frankfurter jerky Tenderloin pastrami picanha doner short ribs ham hock short loin ground round shankle ham kevin capicola turkey brisket Jowl ribeye rump short ribs bacon ham tenderloin doner hamburger tbone sausage cupim turkey shankle short loin Bacon ipsum dolor amet boudin beef ribs landjaeger sausage pig turkey short loin pork loin ball tip chuck kevin doner shank flank Tradeshift kielbasa strip steak andouille chicken corned beef alcatra tritip sirloin pancetta brisket pork loin drumstick landjaeger ham hock Pork ball tip picanha drumstick jerky ham hock Venison meatloaf strip steak pork beef Pork chop sirloin ball tip spare ribs short loin porchetta capicola fatback leberkas drumstick turducken frankfurter Bacon ribeye turducken landjaeger corned beef capicola ground round Meatball pork chop spare ribs sirloin leberkas swine tritip ham hock pork loin brisket Filet mignon beef corned beef jerky pig alcatra ground round kielbasa Ham tenderloin beef jowl prosciutto Alcatra cow meatball beef ribs shoulder venison Tenderloin beef ribs jowl bresaola ball tip Ribeye pastrami venison porchetta chicken drumstick meatloaf boudin Beef ribs cow biltong salami meatball shankle fatback ribeye sirloin meatloaf strip steak turkey capicola bresaola cupim Rump corned beef alcatra cow salami shankle boudin brisket sausage ham hock landjaeger tbone picanha sirloin Prosciutto ham picanha chicken ham hock Alcatra sirloin beef tbone rump Jerky pork chop picanha andouille Rump boudin ham frankfurter tbone leberkas Tbone hamburger sirloin andouille tenderloin prosciutto tongue cupim shoulder meatloaf Ribeye filet mignon tbone short ribs jerky Strip steak pork loin spare ribs flank bacon sausage cow shank short ribs fatback Cupim chuck brisket beef ribs pork loin alcatra drumstick Pastrami meatball biltong alcatra fatback boudin short ribs drumstick chuck jerky turducken hamburger Venison cow sausage rump picanha turducken meatloaf shoulder strip steak jowl Chicken porchetta doner sirloin pig shank flank bacon rump corned beef Pastrami tenderloin jowl tbone doner drumstick pork chop shankle leberkas meatloaf ham hock pig Jerky ground round rump biltong tritip swine cupim corned beef picanha Cow chicken sausage tritip Jowl pastrami tail short ribs bresaola flank meatball tbone boudin sausage shoulder fatback andouille Frankfurter tail pancetta tritip pork meatball ham hock swine filet mignon andouille hamburger Sirloin alcatra picanha pastrami chuck ham jerky kielbasa tail boudin corned beef spare ribs brisket Drumstick fatback strip steak bacon brisket kevin pork ribeye hamburger Rump beef jowl drumstick ground round fatback salami frankfurter porchetta pig pork belly swine flank Pork loin corned beef shoulder landjaeger ham hock picanha ball tip Picanha pig cow landjaeger pastrami chuck tail Bresaola boudin frankfurter strip steak tbone pork belly shoulder brisket Ham jerky tenderloin short loin Spare ribs drumstick short loin pork loin Ham hock capicola jowl venison porchetta cupim spare ribs kevin tritip corned beef turkey tongue sirloin Boudin short loin alcatra frankfurter fatback spare ribs andouille tritip chicken capicola Chicken tongue jowl ground round corned beef alcatra ball tip meatloaf turducken jerky venison shank salami Cow beef cupim pork chop doner biltong kielbasa picanha ham tbone ball tip Jowl frankfurter ground round short ribs kevin leberkas sirloin shoulder pork loin boudin spare ribs picanha brisket pig beef Pork chop shank jerky cow pancetta short loin tail fatback pork belly tongue kevin Ground round pork chop beef short ribs ball tip cupim sirloin ham alcatra kevin Ball tip short ribs picanha alcatra kevin spare ribs rump shank ham Shankle pig shank turducken Turkey landjaeger ground round biltong Biltong rump frankfurter bacon chicken alcatra ham ribeye tongue Tongue filet mignon pig pork chop andouille shoulder tenderloin picanha sausage jowl brisket meatloaf Pastrami tongue swine bresaola picanha leberkas meatball chicken jerky tenderloin doner tbone pork chop Strip steak beef ribs venison porchetta sausage meatloaf hamburger Bacon spare ribs sausage porchetta prosciutto cupim meatloaf corned beef Andouille shankle tenderloin venison frankfurter rump cow ball tip pancetta hamburger Brisket alcatra bresaola doner flank shank Prosciutto salami venison frankfurter pastrami Porchetta jerky swine ham hock tritip shoulder pork loin turducken jowl Panel Three In this Panel we test that the SideBar is also working ltbodygt Panel One Panel Two ltdiv datatsquotPanelquot datatslabelquotPanel Threequotgt ltaside datatsquotSideBarquot datatstitlequotSideBarquotgt ltdiv datatsquotPanelquotgtltdivgt ltasidegt ltmain datatsquotMainquotgtltmaingt ltdivgt ltbodygt "},{"title":"Get Started","href":"getstarted/index.html","content":" Get Started tsuireadyfunction nastyhack var version tsuiversion var figure documentquerySelectorfigure var markup figureinnerHTML figureinnerHTML markupreplacetsuiversion version Get started edbmldeclareedbmlZ2dVzsb1asfunction edbml use strict var out edbmlout txt edbmlsafetext var version tsuiversion var v4version 501 MUST BE UPDATED MANUALLY outhtml To get UI components up and running on your page simply include tsjs in an appropriate version The latest version is txtversion The current production version used in Tradeshift internal apps v4 is txtv4version return outwrite ltscript srcquotd5wfroyti11sacloudfrontnetprodclienttstsuiversionminjsquotgtltscriptgt UI components are initialized on the DOMContentLoaded event but this might change some day To make sure that all the components are initialized before you do something to them you can wrap you code in a callback like this tsuireadyfunction var component tsuigetelement componentdosomething Before DOMContentLoaded the callback will be executed later After DOMContentLoaded the callback will execute immedeately You can perhaps make it easier for yourself by kickstarting your app with a tsuiready callback because then you wontapost have to worry about it later on tsuireadyfunction boostrapeverything Before we begin youaposll need to mark up your page with the basic layout "},{"title":"Layout","href":"getstarted/layout/index.html","content":" Layout Layout This is the minimum viable HTML boilerplate for UI components to work out ltDOCTYPE htmlgt lthtmlgt ltheadgt lttitlegtLayoutlttitlegt ltheadgt ltbodygt ltheader datatsquotTopBarquotgtltheadergt ltmain datatsquotMainquotgt ltdiv datatsquotMainContentquotgt lth1gtMain contentlth1gt ltdivgt ltmaingt ltbodygt lthtmlgt TopBar The page should have a TopBar even if you donapost plan to use it Thatx2019s because the topbar is always visible in mobile layout where it functions to toggle the main navigation menu Main The Main draws the scrollbar now that body overflow is hidden This setup will let us use absolute position to emulate fixed position which doesnapost work right inside iframes on mobile devices MainContent The MainContent element should contain more or less everything your app has to show Asides If youaposre using Asides itx2019s important to place them outside Main like this ltmain datatsquotMainquotgt lth1gtMain contentlth1gt ltmaingt ltaside tsasidegt ltdiv tspanelgt ltpgtAside contentltpgt ltdivgt ltasidegt With this in mind you are ready to start using components "},{"title":"Basic rules","href":"getstarted/rules/index.html","content":" Basic rules Basic rules UI components would like to assume ownership of The datats HTML attribute All HTML attributes that start with datats dot All HTML attributes that start with datats dash All CSS classnames that start with ts dash The global namespace object tsui Rule number one is to not use ts prefixed CSS classnames in your app "},{"title":"Usage","href":"getstarted/usage/index.html","content":" Usage Basic usage You will use any combination of HTML attributes CSS classnames and JavaScript interfaces to deal with the different components Most components are used simply by adding the datats attribute to elements The framework will recognize this attribute and add behavior and styling ltaside datatsquotAsidequotgt ltasidegt Config attributes Additional attributes may be used to configure the component By convention these will be prefixed with datats including the dot The datatsopen attribute would for example open the aside ltaside datatsquotAsidequot datatsopenquottruequotgt ltasidegt JS interface The component may also expose a JavaScript API For example the Aside can be opened with a method call instead of an attribute You can get hold of the implementation using tsuiget which takes an element as argument var myelement documentquerySelectoraposmyasideapos var component tsuigetmyelement consolelogcomponent object tsuiAsideSpirit componentopen APIonly components Components that embody more complex behavior will usually be dealt with through a pure JavaScript API so without writing markup This will come in handy when we decide to change the complex behavior at a later stage tsuiDatePicker title quotYour Birthdayquot value apos19730326apos open When making apps with UI components therex2019s a few basic rules we would like you to observe "},{"title":"Tradeshift UI","href":"index.html","content":" Tradeshift UI includes menujson "},{"title":"Tradeshift UI","href":"intro/index.html","content":" Tradeshift UI Tradeshift UI UI components range from simple buttons and icons to fancy datepickers and dropdown menus The target audience for Tradeshift UI is both developers and designers For Developers For Tradeshift apps the UI components are built to allow for consistent styling and experiences across internal apps For thirdparties the UI components are designed to bring visual consistency with internal applications as part of the Tradeshift platform Get Started Everything you need to use Tradeshift UI Components in your app Principles Colors Typography Responsive designx2026 Anything you might need to make your UI like an integral part of the Tradeshift Platform Components Overview The building blocks Tradeshift apps are made of For Designers For our designers the UI components are designed to allow rapid prototyping without duplicating efforts between prototypes As a result of being standardized they will also act as a single point in Tradeshift for designers to revise UI components Design Guidelines The foundational principles and concepts of the Tradeshift UX Design Patterns Recurring solutions to challenges youaposll encounter when designing a Tradeshift app UI Copy Strong copy is essential we give you this guide to help you have great copy with your great designs "},{"title":"Automagic Focus","href":"playground/autofocus/index.html","content":" Automagic Focus focus outline 8px solid yellow important desc strong margin 0 8px padding 0 4px article tsbuttons margintop 44px Automagic focus On this page weaposve added a yellow outline to the focused element Keyboard support is always a work in progress but we have a system to ensure that something is in theory always focused Note that there is no default focus but you can set the default focus with the HTML autofocus attribute BUG APPEARS FIXED NOW On page load the autofocus attribute does not work in Firefox if the user entered via the main menu so in the parent frame because of a security precaution in the browser so you should not rely much on that In Notifications and Asides weaposll always attempt to focus something even if we canapost find any element with the autofocus attribute Click the buttons to see Open the Notificationx2026 Open the Asidex2026 TODO Note about focus on mobile device Aside content Open next aside Open next aside Thanks now close them It appears we have a bug If you do click that button the focus will be lost But you can try to close them one at a time by clicking the X in the corner "},null,{"title":"Automated Layout","href":"playground/autolayout/index.html","content":" Automated Layout var LayoutModel tsuiModelextend topBar false toolBarBefore false toolBarAfter false sideBarBefore false sideBarAfter false new LayoutModeloutput tsform margintop 22px hack for empty SPAN labelspan fontweight 300 edbmldeclareedbml1A6Vuo1asfunction edbml use strict var out edbmlout set edbmlset txt edbmlsafetext val edbmlsafeattr layout edbmlinputLayoutModel if layouttopBar outhtml if layoutsideBarBefore outhtml SideBar content Optional SideBar footer if layouttoolBarBefore outhtml outhtml Automated layout We donapost have a lot of layouts yet but the page will automatically transform into a classic three column layout with fixed headers and footer as certain components are added You can toggle these components in the checklist function checkboxtext prop outhtml var 1 setfunctionvalue checked layoutprop checked this outhtml txttext checkboxTopBar topBar checkboxToolBar before Main toolBarBefore checkboxToolBar after Main toolBarAfter checkboxSideBar before Main sideBarBefore checkboxSideBar after Main sideBarAfter outhtml TODO Save this page in mobile breakpoint if layouttoolBarAfter outhtml if layoutsideBarAfter outhtml SideBar content Optional SideBar footer return outwrite withInstructions input name layout type LayoutModel "},null,{"title":"Colors","href":"principles/colors.html","content":" Colors Colors Here you can see a list of colors you can use in Tradeshift apps This page is under constructionContent might be incomplete or outdated edbmldeclareedbmlZ3hOae1asfunction edbml use strict var out edbmlout att edbmlatt txt edbmlsafetext val edbmlsafeattr var colors tsblack rgb303030 tswhite rgb255255255 tsdarkdarker rgb333333 tsdarkdark rgb434343 tsdark rgb535353 tsdarklite rgb636363 tsdarkliter rgb737373 tsmediumdarkest rgb979797 tsmediumdarker rgb107107107 tsmediumdark rgb117117117 tsmedium rgb127127127 tsmediumlite rgb137137137 tsmediumliter rgb147147147 tsmediumlitest rgb175175175 tslitedarker rgb205205205 tslitedark rgb215215215 tslite rgb225225225 tslitelite rgb235235235 tsliteliter rgb245245245 tsgreen rgb11417772 tsgreendark rgb9415752 tsgreendarker rgb7413732 tsgreenlite rgb13419792 tsgreentext tswhite tslitegreen rgb178215130 tsdarkgreen rgb248463 tsblue rgb32160233 tsbluedark rgb12140213 tsbluedarker rgb0120193 tsbluelite rgb43180253 tsblueliter rgb88184239 tsbluetext tswhite tsliteblue rgb236247253 tslitebluedark rgb220241253 tsdustblue rgb5499117 tsdarkblue rgb246384 tsred rgb19100 tsreddark rgb17100 tsreddarker rgb15100 tsredlite rgb23100 tsredtext tswhite tsdarkred rgb2333232 tsdarkredlite rgb248229229 tsdarkredtext tswhite tsyellow rgb253254213 tsyellowdark rgb244242201 tsyellowtext rgb12711572 tspurple rgb14852200 tspurpledark rgb12845173 tspurpledarker rgb10825153 tspurplelite rgb16658224 tspurpletext tswhite colorsforEachfunctioncolorSet outhtml for var colorName in colorSet var colorCode colorSetcolorName outhtml commat txtcolorName txtcolorCode outhtml return outwrite "},{"title":"Responsive Design","href":"principles/responsive.html","content":" Responsive Design Responsive Design Hereaposs the list of classnames that can be used to toggle display based on breakpoint they work on all elements show in breakpoint only tsshowmobileonly tsshowtabletonly tsshowdesktoponly hide in breakpoint only tshidemobileonly tshidetabletonly tshidedesktoponly show in breakpoint and up tsshowmobile tsshowtablet tsshowdesktop hide in breakpoint and up tshidemobile tshidetablet tshidedesktop Try resizing the page and see which of the boxes below are shown edbmldeclareedbmlZ1oflj21asfunction edbml use strict var out edbmlout txt edbmlsafetext val edbmlsafeattr var clazzNames tsshowmobileonly tsshowtabletonly tsshowdesktoponly tshidemobileonly tshidetabletonly tshidedesktoponly tsshowdesktop tsshowtablet tsshowmobile tshidedesktop tshidetablet tshidemobile clazzNamesforEachfunctionclazz outhtml txtclazz return outwrite "},null,{"title":"Themes","href":"principles/themes.html","content":" Themes buttonmenu li paddingtop 11px paddingleft 11px buttonmenu button width 150px checkboxform paddingtop 11px container padding 0 important Themes You can change the background to get your own themes Choose themes tsbgdark tsbglite tsbgblue tsbgred tsbgyellow tsbggreen tsbgwhite tsbgpurple Primary Secondary Tertiary Disabled "},null,{"title":"Typography","href":"principles/typo.html","content":" Typography Typography You can see an example of typography in Tradeshift Apps on this page This page is under constructionContent might be incomplete or outdated H1fontsize 36px tsfontsizexxbig H2fontsize 24px tsfontsizexbig H3fontsize 18px tsfontsizebig Normal Paragraph of textfontsize 14px tsfontsize Unordered List Ordered List "},null,{"title":"Screenshots","href":"screenshots/index.html","content":" Screenshots edbmldeclareedbmlFjtXy1asfunction edbml use strict var out edbmlout txt edbmlsafetext val edbmlsafeattr shots edbmlinputScreenShotCollection outhtml if shotslength shotsforEachfunctionshot renderDiffapplynull shot else outhtml outhtml function renderDifftitle url actual expected diff outhtml txttitle return outwrite withInstructions input name shots type ScreenShotCollection "},null,{"title":"Search","href":"search/index.html","content":" Search "},null]