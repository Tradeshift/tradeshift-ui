<!DOCTYPE edbml>
<script>
	<?param name="text" type="string"?>
	<?param name="col1" type="string"?>
	<?param name="col2" type="string"?>
	<?param name="size" type="number"?>
	<?param name="stylesheet_url" type="string"?>
	<?param name="stylesheet_txt" type="string"?>

	text = text || '?';
	col1 = col1 || 'pink';
	col2 = col2 || 'lime';

	var fontsize = size / 2.6;

	<svg xmlns="http://www.w3.org/2000/svg" width="${size}px" height="${size}px" viewBox="0 0 ${size} ${size}" style="background-color:${col1};" text-rendering="optimizeLegibility">
		if(stylesheet_url) {
			<defs>
				stylesheet(!gui.Client.agent);
			</defs>
		}
		<text x="50%" +
			y="${ypos(gui.Client)}" +
			text-anchor="middle" +
			alignment-baseline="middle" +
			font-size="${fontsize}" +
			font-family="${stylesheet_url ? 'Open Sans' : 'Arial'}" +
			font-weight="400" +
			fill="${col2}">${text}</text>
	</svg>

	/**
	 * Chrome apparently can't handle @import in SVG so we'll
	 * just inline the stylesheet until we figure this out.
	 * Must probably implement a more native SVG font setup.
	 */
	function stylesheet(imports) {
		<style type="text/css">
			if(imports) {
				out.html += '@import "' + stylesheet_url + '";';
			} else {
				out.html += stylesheet_txt;
			}
	 	</style>
	 }

	/**
	 * Get browser specific vertical allignment (for some reason).
	 * TODO: Fine-tune this to the given `size` parameter
	 * TODO: read comment about alignment on http://stackoverflow.com/questions/15422770/font-face-svg-not-working-properly-in-chrome
	 * @param {object} Client
	 */
	function ypos(Client) {
		switch(Client.agent) {
			case 'gecko':
				return '65%';
			case 'explorer':
				return '66%';
			case 'webkit':
				return '54%';
			default:
				return '50%';
		}
	}

</script>
