<!DOCTYPE html>
<html>
	<head>
		<title>Pager</title>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>Pager</h1>
				<section class="desc">
					<p>Provides a navigation menu with shortcuts for all kinds of paginated data.</p>
				</section>
				<section>
					<p>Assign <att>data-ts="Pager"</att> to a <elm>menu</elm> or <elm>nav</elm> to initialize it as a Pager. The component may be configured in HTML, complete with an inline callback, like in this example.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<menu data-ts="Pager" 
								data-ts.pages="8" 
								data-ts.page="0" 
								data-ts.onselect="console.log(this.page)">
							</menu>
						</script>
						<output/>
					</figure>
					<p>&mdash; or you can configure it via a JavaScript API, like in this example.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.get('#mypager', pager => {
								pager.pages = 8;
								pager.page = 0;
								pager.onselect = function(page) {
									console.log(page);
								};
							});
						</script>
					</figure>
					<menu data-ts="Pager" id="mypager"></menu>
					<p>As you can see, the Pager has no default outline and this will make it easier to embed into other components. Here's a short summary of the Pagers properties and methods.</p>
				</section>
				<section id="pager-api" data-important="THIS GETS INCLUDED INTO OTHER PAGES!">
					<div data-ts="DoxApi">
						<script type="application/json">
							{
								name: "ts.ui.PagerSpirit",
								properties: [
									{
										name: "pages",
										type: "number",
										desc: "The total amount of pages."
									},
									{
										name: "page",
										type: "number",
										desc: "The current page index, zero based."
									},
								],
								methods: [
									{
										name: "onselect",
										args: "number",
										desc: "Called whenever a page is selected; and with the new index as argument."
									}
								]
							}
						</script>
					</div>
				</section>
			</article>
		</main>
	</body>
</html>
