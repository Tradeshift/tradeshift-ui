<!DOCTYPE html>
<html>
	<head>
		<title>Table Collaboration</title>
		<object data="tabs.xhtml"></object>
	</head>
	<body class="nosticky">
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>Table Collaboration</h1>
				<section class="desc">
					<div data-ts="Note">
						<i class="ts-icon-info"></i>
						<p>This API is likely to change at some point.</p>
					</div>
				</section>
				<section>
					<p>You can activate a dedicated <em>collaboration</em> button in the statusbar.</p>
					<ul class="splitscreen">
						<li>
							<figure data-ts="DoxScript">
								<script type="runnable">
									var popup = ts.ui.Notification;
									ts.ui.get('#table1', table => {
										table.collabbutton(function onclick() {
											popup.success('Go collaborate!');
										}).cols(['A', 'B', 'C', 'D']).rows([
											[1, 4, 7, 10],
											[2, 5, 8, 11],
											[3, 6, 9, 12]
										])
									});
								</script>
							</figure>
						</li>
						<li>
							<div data-ts="Table" id="table1"></div>
						</li>
					</ul>
					<p>The button triggers a callback, but there is no default behavior associated. The API to initialize and resume a Collaboration thread will be defined elsewhere. When you are done with the button, you can hide it again.</p>
					<ul class="splitscreen">
						<li>
							<figure data-ts="DoxScript">
								<script type="runnable">
									ts.ui.get('#table1').collabbutton(null);
								</script>
							</figure>
						</li>
					</ul>
					<div data-ts="DoxApi">
						<script type="application/json">
							{
								name: "ts.ui.TableSpirit",
								methods: [
									{
										name: "collabbutton",
										args: ["(function|null)"],
										desc: "Show the collaboration button with given callback. Pass `null` to remove the button."
									}
								]
							}
						</script>
					</div>
				</section>
			</article>
		</main>
	</body>
</html>
