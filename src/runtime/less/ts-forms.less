// Mixins ......................................................................

/*
 * This thing is position:absolute because Firefox has 
 * (ancient) problems with styling of fieldset elements 
 */
.local-mixin-field-header() {
	position: absolute;
	left: @ts-unit-half;
	right: @ts-unit-half;
	top: 0;
	height: @ts-unit-plus;
	padding-top: @ts-unit-half;
	line-height: 11px;
	text-transform: uppercase;
	font-weight: @ts-fontweight-bold;
	font-size: @ts-fontsize-mini;
	white-space: nowrap;
	word-wrap: normal;
	overflow: hidden;
	text-overflow: ellipsis;
}


// Forms .......................................................................

.ts-form {
	display: block;
	text-align: left;
	&.ts-fieldset,
	&.ts-label,
	.ts-fieldset {
		display: block;
		position: relative;
		font-size: 0;
		+ .ts-fieldset {
			padding-top: @ts-unit-half;
		}
		> * {
			font-size: @ts-fontsize;
		}
		> span {
			overflow: hidden;
		}
		> span,
		> label {
			display: block;
		}
		> label {
			position: relative;
			padding: @ts-unit-half;
			padding-top: @ts-unit-half;
			border-radius: @ts-radius;
			&.ts-haslabel {
				padding-top: @ts-unit-plus;
			}
		}
		&.ts-options {
			padding-left: @ts-unit-half;
			padding-right: @ts-unit-half;
			padding-top: @ts-unit-half;
			padding-bottom: @ts-unit-half;
			margin-top: @ts-unit-half;
			&.ts-haslabel {
				padding-top: @ts-unit-double;
			}	
			> span:first-child {
				.local-mixin-field-header();
			}
			> label {
				padding-top: 0;
				padding-bottom: 0;
				border-radius: @ts-radius;
				border: 1px solid transparent;
				input,
				span {
					display: inline-block;
					vertical-align: top;
				}
				> span {
					padding-top: @ts-unit-quarter - 1px;
					padding-bottom: @ts-unit-quarter - 1px;
				}
			}
		}
		&:not(.ts-options) {
			> label {
				> span:first-child {
					.local-mixin-field-header();
				}
			}	
		}
	}
	.ts-textlabel:not(.ts-disabled) {
		cursor: text;
	}
	.ts-field {
		display: block;
		&.ts-text:not([disabled]) {
			cursor: text;
		}
		&.ts-text,
		&.ts-date {
			border: 1px solid @ts-medium-litest;
			display: block;
			width: 100%;
			font-size: @ts-fontsize-mini;
			font-weight: @ts-fontweight;
			border-radius: @ts-radius;
			padding-top: @ts-unit-quarter - 1px;
			padding-bottom: @ts-unit-quarter - 1px;
			padding-left: @ts-unit-half;
			background-color: @ts-white;
			height: @ts-unit-plus;
		}
		&.ts-textarea {
			max-height: @ts-unit * 10;
			min-height: @ts-unit * 3.5;
			padding-right: @ts-unit-half;
			padding-bottom: 0;
			resize: none;
		}
		&.ts-option {
			opacity: 0;
			position: absolute;
			+ span {
				padding-left: 26px;
				position: relative;
				display: block;
			}
			+ span:before {
				content: "";
				position: absolute;
				line-height: @ts-unit;
				font-family: @ts-fontstack-icon;
				font-size: 20px;
				font-weight: normal;
				top: @ts-unit-quarter - 1px;
				left: 0;
			}
			+ span:after {
				top: 50%;
			}
			&[type="radio"] {
				+ span:before {
					line-height: @ts-unit;
					content: "{";
				}
				&:checked {
					+ span:before {
						line-height: @ts-unit;
						content: ":";
					}
				}
			}
			&[type="checkbox"] {
				+ span:before {
					line-height: @ts-unit;
					content: "'";
				}
				&:checked {
					+ span:before {
						line-height: @ts-unit;
						content: "\"";
					}
				}
			}
		}
	}
}


// Focus & Hover ...............................................................

.local-mixin-focus-outline(@color: @ts-blue) {
	border: 1px solid @color;
	box-shadow: 0 0 0 1px fade(@color, 75%);
	border-radius: @ts-radius;
}
.local-mixin-hover-outline(@color: @ts-blue) {
	.local-mixin-focus-outline(fade(@color, 25%));
}
.local-mixin-no-outline() {
	border: 1px solid transparent !important;
	box-shadow: none !important;
}

.ts-form:not(.ts-nofx) {
	.ts-fieldset {
		label:hover:not(.ts-focus):not(.ts-focus-on) {
			&:not(.ts-disabled):not(.ts-readonly) {
				.ts-field {
					&.ts-text,
					&.ts-date {
						.local-mixin-hover-outline();
					}
				}
				&.ts-checkbox,
				&.ts-switchlabel {
					.local-mixin-hover-outline();
				}
				&.ts-error {
					.ts-field {
						&.ts-text,
						&.ts-date {
							.local-mixin-hover-outline(@ts-red);
						}
					}
					&.ts-checkbox,
					&.ts-switchlabel {
						.local-mixin-hover-outline(@ts-red);
					}	
				}
			}
		}
		label.ts-focus,
		label.ts-focus-on {
			&:not(.ts-disabled):not(.ts-readonly) {
				.ts-field {
					&.ts-text,
					&.ts-date {
						.local-mixin-focus-outline();
					}
				}
				&.ts-checkbox,
				&.ts-switchlabel {
					.local-mixin-focus-outline();
				}
			}
		}
		label.ts-focus,
		label.ts-focus-on {
			&.ts-fakelabel {
				&:not(.ts-disabled):not(.ts-readonly) {
					&:before {
						color: @ts-blue;
					}
				}
			}
		}
		&.ts-radio {
			&:not(.ts-disabled):not(.ts-readonly) {
				&:before {
					content: '';
					position: absolute;
					left: @ts-unit-half;
					right: @ts-unit-half;
					top: @ts-unit-plus;
					bottom: 0;
				}
				&:hover:not(.ts-focus):before {
					.local-mixin-hover-outline();
				}
				&.ts-focus:before {
					.local-mixin-focus-outline();
				}
			}
		}
	}
}


// Colors ......................................................................

.ts-bg-red,
.ts-bg-green,
.ts-bg-blue,
.ts-bg-purple,
.ts-bg-dark {
	.ts-form {
		.ts-field {
			&.ts-date,
			&.ts-text {
				border-color: transparent !important;
			}
		}
	}
}

.ts-bg-red,
.ts-bg-green,
.ts-bg-blue,
.ts-bg-purple {
	.ts-form {
		label {
			&:hover,
			&.ts-focus,
			&.ts-focus-on	{
				.ts-field {
					&.ts-text,
					&.ts-date {
						.local-mixin-no-outline();
					}
				}
				&.ts-checkbox,
				&.ts-switchlabel {
					.local-mixin-no-outline();
				}
			}
		}
	}
}
.ts-bg-red,
.ts-bg-green,
.ts-bg-blue,
.ts-bg-purple {
	.ts-form {
		.ts-fieldset.ts-radio {
			&:not(.ts-disabled):not(.ts-readonly) {
				&:hover:not(.ts-focus):before {
					.local-mixin-hover-outline(@ts-white);
				}
				&.ts-focus:before {
					.local-mixin-focus-outline(@ts-white);
				}
			}
		}	
	}
}
.ts-bg-red {
	.ts-form {
		label.ts-focus,
		label.ts-focus-on {
			&.ts-fakelabel:not(.ts-disabled):not(.ts-readonly):before {
				color: @ts-red;
			}
		}
	}
}
.ts-bg-green {
	.ts-form {
		label.ts-focus,
		label.ts-focus-on {
			&.ts-fakelabel:not(.ts-disabled):not(.ts-readonly):before {
				color: @ts-green;
			}
		}
	}
}
.ts-bg-purple {
	.ts-form {
		label.ts-focus,
		label.ts-focus-on {
			&.ts-fakelabel:not(.ts-disabled):not(.ts-readonly):before {
				color: @ts-purple;
			}
		}
	}
}


// Errors ......................................................................

.ts-form {
	label.ts-error {
		&:not(.ts-disabled):not(.ts-readonly) {
			.ts-field {
				&.ts-text,
				&.ts-date {
					border-color: @ts-red;
				}
			}
		}
		&.ts-focus,
		&.ts-focus-on {
			&:not(.ts-disabled):not(.ts-readonly) {
				.ts-field {
					&.ts-text,
					&.ts-date {
						.local-mixin-focus-outline(@ts-red);
					}
				}
				&.ts-checkbox,
				&.ts-switchlabel {
					.local-mixin-focus-outline(@ts-red);
				}

			}
		}
	}
	.ts-errors,
	.ts-info {
		color: @ts-red;
		margin-left: @ts-unit-half;
		font-size: @ts-fontsize-mini;
		font-weight: @ts-fontweight;
		margin-bottom: @ts-unit-half;
		font-weight: normal;
		position: relative;
		> dt,
		> dd {
			position:relative;
			padding-left: 19px;
			&:before {
				position: absolute;
				content: "";
				-webkit-font-smoothing: antialiased;
				-moz-osx-font-smoothing: grayscale;
				font-weight: normal;
				font-style: normal;
				text-decoration: none;
				text-transform: none;
				font-style: normal;
				line-height: 0;
				text-align: center;
			}
		}
		> dt {
			font-weight: bold;
			&:before {
				font-family: @ts-fontstack-icon;
				font-weight: @ts-fontweight;
				font-size: @ts-fontsize-medium;
				top: 12px;
				left: 0;
				content: "!";
			}
		}
		> dd {
			&:before {
				content: "\2219";
				font-size: 35px;
				line-height: 0;
				position: absolute;
				top: 9px;
				left: 3px;
			}
		}
	}
	.ts-info {
		color: @ts-black;
		> dt {
			&:before {
				content: "i";
				color: @ts-blue;
			}
		}
	}
	.ts-disabled {
		+ .ts-errors,
		+ .ts-info {
			color: @ts-medium;
			> dt {
				&:before {
					color: @ts-medium;
				}
			}
		}
	}
}


// Faking it ...................................................................

.ts-form {
	.ts-datelabel,
	.ts-fakelabel,
	.ts-autocompletelabel {
		&:not(.ts-disabled):not(.ts-readonly) {
			&, * {
				cursor: pointer;
			}
		}
	}
	.ts-fakelabel { // open-select-menu
		&:not(.ts-disabled):not(.ts-readonly) {
			&:before {
				.ts-mixin-icon(@ts-fontsize-medium);
				content: '}';
				position: absolute;
				right: @ts-unit-half;
				left: auto;
				bottom: 26px;
				width: @ts-unit-plus;
				color: @ts-medium;
			}
			&.ts-engine-gecko {
				&:before {
					bottom: 27px;
				}
			}
		}
	}
	.ts-datelabel {
		&:not(.ts-disabled):not(.ts-readonly) {
				&:before {
						content: '\00a9';
				}
		}
	}
	.ts-select,
	.ts-dateinput {
		position: absolute;
		opacity: 0;
		width: 0;
		height: 0;
		padding: 0 !important;
	}
	.ts-select {
		option { // https://bugzilla.mozilla.org/show_bug.cgi?id=392863 
			display: none;
		}
	}
	.ts-select[multiple] {
		~ button {
			display: none;
		}
	}
}

// Switches ....................................................................

.ts-form {
	label.ts-switchlabel {
		padding-right: @ts-unit-quarter;
		text-align: right;
		line-height: 0;
		overflow: hidden;
		> span {
			display: block;
			line-height: @ts-unit;
			width: calc(~"100% - "@ts-unit-double);
			text-align: left;
			float: left;
		}
		&.ts-disabled {
			> span:after {
				display: none;
			}
			.ts-field.ts-switchbox + .ts-switcher {
				> i:before {
					content: 'V'; // lock UPDATE REQUIRED!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					font-size: @ts-fontsize-medium;
				}
				&.ts-engine-webkit {
					> i:before {
						top: @ts-unit-half + 0.25px;
						left: -0.25px;
					}
				}
				&.ts-engine-gecko {
					> i:before {
						top: @ts-unit-half - 0.5px;
						left: 0;
					}
				}
			}
		}
	}
	.ts-field.ts-switchbox {
		opacity: 0;
		font-size: 0;
		width: 1px;
		height: 1px;
		overflow: hidden;
		position: absolute;
		top: @ts-unit-half;
		right: 0;
		margin: 0;
		+ .ts-switcher {
			display: inline-block;
			height: @ts-unit;
			width: @ts-unit-double;
			position: relative;
			top: @ts-unit-quarter - 1px;
			border-radius: @ts-unit-half;
			background-color: @ts-lite-dark;
			&, > i {
				.ts-mixin-transition(all,0.1s,ease-out);
			}
			> i {
				height: @ts-unit;
				width: @ts-unit;
				border-radius: @ts-unit-half;
				display: inline-block;
				position: absolute;
				left: 0;
				margin-left: 0;
				line-height: 0;
				font-size: @ts-fontsize-big;
				&:before {
					top: @ts-unit-half;
				}
				&:first-child {
					opacity: 1;
					background-color: @ts-medium;
					color: @ts-lite-dark;
					&:before {
						left: -0.5px;
					}
				}
				&:last-child {
					opacity: 0;
					background-color: @ts-green-dark;
					color: @ts-green-text;
				}
			}
			&.ts-checked {
				background-color: @ts-litegreen; // TODO: this color!
				> i {
					left: 100%;
					margin-left: -@ts-unit;
					&:first-child {
						opacity: 0;
					}
					&:last-child {
						opacity: 1;
					}
				}
			}
			&.ts-engine-webkit {
				> i.ts-icon-cancel:before {
					top: @ts-unit-half + 1.25px;
					left: -0.25px;
				}
				> i.ts-icon-checked:before {
					left: 0;
					top: @ts-unit-half + 2px;
				}
			}
			&.ts-engine-gecko {
				> i.ts-icon-cancel:before {
					top: @ts-unit-half + 0.5px;
					left: 0;
				}
				> i.ts-icon-checked:before {
					left: 0.5px;
					top: @ts-unit-half + 2px;
				}
			}
		}
	}
}


// Multi-fields  ...............................................................

.ts-form {
	.ts-fieldset.ts-multi {
		> label {
			display: inline-block;
			vertical-align: top;
			padding-right: @ts-unit-quarter;
			span {
				right: @ts-unit-quarter;
			}
			+ label {
				padding-left: @ts-unit-quarter;
				span {
					left: @ts-unit-quarter;
				}
			}
			&:last-child {
				padding-right: @ts-unit-half;
				span {
					right: @ts-unit-half;
				}
			}
			&:nth-child(2) + label {
				display: none;
			}
		}
		&,
		&.ts-1-1 {
			label {
				width: 100%/2;
			}
		}
		&.ts-1-2 {
			label:nth-child(1) {
				width: 100%/3;
			}
			label:nth-child(2) {
				width: 100%/1.5;
			}
		}
		&.ts-2-1 {
			label:nth-child(1) {
				width: 100%/1.5;
			}
			label:nth-child(2) {
				width: 100%/3;
			}
		}
		&.ts-1-1-1 {
			label {
				width: 100%/3;
				&:nth-child(2) + label {
					display: inline-block;
				}
			}
		}
	}
}



// Disabled & readonly .........................................................

.ts-form {
	label {
		&.ts-readonly,
		&.ts-disabled {
			::placeholder {
				color: transparent;
			}
			> input,
			> textarea {
				&,
				&[disabled],
				&[readonly] {
					padding-right: @ts-unit-plus;
				}
			}
			> textarea {
				overflow: hidden;
			}
			&:not(.ts-option):not(.ts-switchlabel):after {
				.ts-mixin-icon(@ts-fontsize-medium);
				content: 'V'; // lock icon
				position: absolute;
				top: @ts-unit-plus;
				right: @ts-unit-half;
				width: @ts-unit-plus;
				height: @ts-unit-plus;
				line-height: @ts-unit-plus;
				pointer-events: none;
			}
		}
		&.ts-disabled {
			> .ts-field,
			> span,
			&:after {
				color: @ts-medium;
			}
			.ts-field {
				&.ts-text { // &.ts-date
					border-color: @ts-lite;
				}
			}
		}
	}
}

// Customizing it ..............................................................

.ts-form {
	label.ts-customiconlabel:not(.ts-option):not(.ts-switchlabel) {
		&:after {
			.ts-mixin-icon(@ts-fontsize-medium);
			content: ~"attr(data-ts-icon)";
			position: absolute;
			right: @ts-unit-half;
			left: auto;
			bottom: 26px;
			width: @ts-unit-plus;
			color: @ts-medium;
			line-height: @ts-unit-plus;
		}
		&:not(.ts-disabled):not(.ts-readonly):after {
			line-height: 0;
		}
	}
}

// Autocomplete ................................................................

.ts-form {
	.ts-autocomplete-list {
		position: absolute;
		left: 0;
		right: 0;
		z-index: 1;
		background: @ts-dark-liter;
		border-bottom: 1px solid @ts-black;
		max-height: ((@ts-unit * 7.5) - 1px);
		margin: 1px @ts-unit-half 0;
		overflow-y: auto;
		> li {
			position: relative;
			height: @ts-unit-plus;
			line-height: @ts-unit-plus;
			border-bottom: 1px solid @ts-black;
			padding: 0 7px;
			font-size: @ts-fontsize-mini;
			overflow: hidden;
			background: @ts-dark-liter;
			color: fade(@ts-white, 70%);
			text-overflow: ellipsis;
			cursor: pointer;
			&:after {
				position: absolute;
				right: @ts-unit-half;
				top: 50%;
				line-height: 0;
				font-style: normal;
			}
			&.ts-autocomplete-results {
				background: @ts-dark;
				font-style: italic;
			}
			&.ts-autocomplete-results {
				&.ts-autocomplete-selected:after {
					content: '↓';
					font-style: normal;
				}
			}
			&:last-child {
				border-bottom: 1px solid transparent;
			}
			&.ts-autocomplete-selected {
				color: @ts-white;
				background: @ts-blue;
				&:after {
					content: '↲';
				}
			}
			&:hover {
				color: @ts-white;
				background: fade(@ts-blue, 50%);
			}
			b {
				font-weight: @ts-fontweight;
				text-decoration: underline;
			}
		}
	}
}
