<!DOCTYPE html>
<html>
	<head>
		<title>SideBars</title>
		<object data="tabs.xhtml"></object>
		<script>

			// used to test that sidebars can be transferred from MAIN to BODY 
			// without breaking functionality (since this always happens in V4).
			if(false) {
				$(document).ready(function() {
					var $elem = $('#mysidebar');
					var $main = $elem.closest('.ts-main');
					//alert($main).get(0);
					if ($main.length > 0) {
						$main.after($elem);
					}
				});
			}

			// used to test delayed Angular initialization in Collaboration panel :/
			// (note that the `title` must also be removed to simulate collaboration)
			if(false) {
				$(document).ready(function() {
					setTimeout(function() {
						var $elem = $('#mysidebar');
						$elem.attr('data-ts.autoclose', false);
					}, 1000);
				});
			}
		</script>
	</head>
	<body class="nosticky">
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>SideBar</h1>
				<section class="desc">
					<p>The SideBar is a panel used for interactions directly related to the main content, such as filtering and sorting a list of items.</p>
				</section>
				<section>
					<p>Assign <att>data-ts="SideBar"</att> to an <elm>aside</elm> to initialize as a SideBar. The SideBar <em>must</em> be created with a child <val>Panel</val>.</p>
				</section>
				<figure data-ts="DoxMarkup">
					<script>
						<aside data-ts="SideBar">
							<div data-ts="Panel">
								<p>SideBar content.</p>
							</div>
						</aside>
					</script>
				</figure>
				<p>Also note tht the SideBar <em>must</em> be positioned before or after the <val>Main</val> element:</p>
				<figure data-ts="DoxMarkup">
					<script>
						<main data-ts="Main"> ... </main>
						<aside data-ts="SideBar"> ... </aside>
					</script>
				</figure>

				<h3>Toggle the SideBar</h3>
				<p>In mobile breakpoint, the SideBar is hidden and must be toggled forth manually. If you resize to <em>mobile view</em>, you can try it with this button.</p>
				<p>
					<button data-ts="Button" class="ts-primary" onclick="gui.get('mysidebar').toggle()">
						<span>Toggle SideBar</span>
					</button>
				</p>
				<p>You can toggle the SideBar like you would <a data-ts="Button" href="/#components/asides/js.html">toggle an Aside</a>.</p>
				<figure data-ts="DoxScript">
					<script>
						var sidebar = gui.get('#mysidebar');
						sidebar.open();
						sidebar.close();
						sidebar.toggle();
					</script>
				</figure>

				<h3>Bonus panels</h3>
				<p>You can put a <val>Footer</val> next to the <val>Panel</val>. The Footer will stick to the bottom of the SideBar.</p>
				<figure data-ts="DoxMarkup">
					<script>
						<aside data-ts="SideBar" id="mysidebar" data-ts.title="My SideBar">
							<div data-ts="Panel"> ... </div>
							<div data-ts="Footer" class="ts-show-mobile-only"> ... </div>
						</aside>
					</script>
				</figure>
				<div data-ts="Note">
					<i class="ts-icon-info"></i>
					<p>If you want this to be visible in mobile only, as the current designs suggest, you can assign it the classname <val>ts-show-mobile-only</val>.</p>
				</div>

				<h3>Nesting Asides</h3>
				<p>You can make <em>subsidebars</em> by nesting Aside components in the <val>ts-sidebar</val>. The Aside can be opened and closed like a <a data-ts="Button" href="/#components/asides/js.html">normal Aside</a>.</p>
				<figure data-ts="DoxMarkup">
					<script>
						<aside data-ts="SideBar">
							<div data-ts="Panel">
								<p>SideBar content</p>
							</div>
							<aside data-ts="Aside">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</aside>
					</script>
				</figure>
				
				<h3>Custom toolbar buttons</h3>
				<p>The SideBar header works like a Toolbar. You can add buttons with an API, so we'll add a button to toggle that Aside we talked about.</p>
				<figure data-ts="DoxScript">
					<script type="runnable">
						var sidebar = gui.get('#mysidebar');
						var header = sidebar.header();
						header.buttons.push({
							icon: 'ts-icon-add',
							onclick: function() {
								gui.get('#myaside').toggle();
							}
						});
					</script>
				</figure>
				<div data-ts="Note">
					<i class="ts-icon-warning"></i>
					<p>This API is likely to change!</p>
				</div>
			</article>
		</main>
		<aside data-ts="SideBar" id="mysidebar" data-ts.title="Example SideBar">
			<div data-ts="Panel">
				<p>SideBar content.</p>
			</div>
			<aside data-ts="Aside" data-ts.title="Nested Aside" id="myaside">
				<div data-ts="Panel">
					<p>Aside content.</p>
				</div>
			</aside>
			<div data-ts="Footer">
				<p>Footer content. The button below is only relevant in <strong>mobile</strong> view.</p>
				<menu data-ts="Buttons">
					<li>
						<button data-ts="Button" class="ts-tertiary" onclick="gui.get('mysidebar').toggle()">
							<span>Toggle SideBar</span>
						</button>
					</li>
				</menu>
				</p>
			</div>
		</aside>
	</body>
</html>
