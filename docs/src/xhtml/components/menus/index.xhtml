<!DOCTYPE html>
<html>
	<head>
		<title>Menu</title>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article id="panel1">
				<h1>Menu</h1>
				<section class="desc">
					<p>Not to be confused with the main navigation, the <code class="attr-name">ts-menu</code> is simply a list of selectable items.</p>
				</section>
				<section>

					<p>Assign <att>data-ts="Menu"</att> to a <elm>menu</elm> element to initialize it as a Menu. Use <elm>li</elm> elements to separate the menu items, all of which follows the structure of a Button.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li>
									<button>
										<span>Item One</span>
										<i class="ts-icon-rating"></i>
									</button>
								</li>
								<li>
									<button>
										<span>Item Two</span>
										<i class="ts-icon-rating"></i>
									</button>
								</li>
								<li>
									<button>
										<span>Item Three</span>
										<i class="ts-icon-rating"></i>
									</button>
								</li>
							</menu>
						</script>
					</figure>

					<h3>Adding Icons</h3>
					<p>The markup follows the convention for <a data-ts="Button" href="/#components/buttons/">buttons</a>. Use a <elm>span</elm> and an <elm>i</elm> element to seperate text and icon, simply reverse the two to make the icon go first.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li>
									<button>
										<span>I have an icon on my right</span>
										<i class="ts-icon-rating"></i>
									</button>
								</li>
								<li>
									<button>
										<i class="ts-icon-rating"></i>
										<span>I have an icon on my left</span>
									</button>
								</li>
							</menu>
						</script>
					</figure>
					
					<h3>Using the second line/sub text</h3>
					<p>To add a second line to the Menu item, just add a <elm>sub</elm> with some text in it.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li>
									<button>
										<span>I'm the first line</span>
										<sub>I'm the second line</sub>
									</button>
								</li>
							</menu>
						</script>
					</figure>

					<h3>Select one</h3>
					<p>To create a <em>single select</em> menu, mark one (and only one) <elm>li</elm> with the <val>ts-checked</val> classname and use the <val>ts-icon-checked</val> classname for the icon (<elm>i</elm> element)</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li class="ts-checked">
									<button>
										<span>Selected</span>
										<i class="ts-icon-checked"></i>
									</button>
								</li>
								<li>
									<button>
										<span>Not selected</span>
									</button>
								</li>
							</menu>
						</script>
					</figure>

					<h3>Select many</h3>
					<p>To create a <em>multi select</em> menu, simply add more classnames and icons.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li class="ts-checked">
									<button>
										<span>Selected</span>
										<i class="ts-icon-checked"></i>
									</button>
								</li>
								<li class="ts-checked">
									<button>
										<span>Also Selected</span>
										<i class="ts-icon-checked"></i>
									</button>
								</li>
							</menu>
						</script>
					</figure>
					<div data-ts="Note">
						<i class="ts-icon-info"></i>
						<p>The UI component makes no attempt to automatically manage these icons and classnames whenever a new menu item gets selected.</p>
					</div>

					<h3>Disabled items</h3>
					<p>You can mark any selection as <em>readonly</em> by adding the <att>disabled</att> attribute to the individual buttons.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script type="text/html">
							<menu data-ts="Menu">
								<li>
									<button disabled>
										<span>Not selected</span>
									</button>
								</li>
								<li>
									<button disabled>
										<span>Not selected</span>
									</button>
								</li>
								<li class="ts-checked">
									<button disabled>
										<span>Selected</span>
										<i class="ts-icon-checked"></i>
									</button>
								</li>
							</menu>
						</script>
					</figure>

				</section>
			</article>
		</main>
	</body>
</html>
