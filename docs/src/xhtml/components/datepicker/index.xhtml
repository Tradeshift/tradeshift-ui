<!DOCTYPE html>
<html>
	<head>
		<title>DatePicker</title>
	</head>
	<body>
			<article>
				<h1>DatePicker</h1>
				<section class="desc">
					<p>Calendar widget that appears in Aside. Used in Forms for an implementation of &lt;input type="date"&gt; elements.</p>
				</section>
				<section>
					<p>The DatePicker can be launched with a JavaScript API. You should implement the <code>onselect</code> method to get notified whenever the user picks a date. Note that you must manually <code>open</code> and <code>close</code> the DatePicker.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							var datePicker = ts.ui.DatePicker({
								title: "Your Birthday",
								value: '1973-03-26',
								onselect: function(newval, oldval) {
									ts.ui.Notification.success(this.value);
									this.close();
								},
								onclosed: function() {
									this.dispose();
								}
							});
							datePicker.open();
						</script>
					</figure>
					<p>You can specify a <code>min</code> and <code>max</code> value.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.DatePicker({
								title: "Your Birthday",
								value: '1984-05-23',
								min: '1984-01-01',
								max: '1985-12-24',
								onrendercell: function(cell){
									var jsDate = new Date(cell.year, cell.month, cell.day);
									var isWeekday = ![0,6].includes(jsDate.getDay());

									cell.selectable = isWeekday;
									cell.className = (isWeekday ? 'weekday' : 'weekend');
								},
								onselect: function() {
									ts.ui.Notification.success(this.value);
									this.close();
								},
								onclosed: function() {
									this.dispose();
								}
							}).open();
						</script>
					</figure>
					<p>The object argument configures a <code>ts.ui.DatePickerModel</code> as outlined below.</p>
					<table class="api">
						<caption>
							<code>ts.ui.DatePickerModel</code>
						</caption>
						<tbody>
							<tr>
								<th colspan="3">Instance properties</th>
							</tr>
							<tr>
								<td><code>title</code></td>
								<td><code>{string}</code></td>
								<td>Appears as the title of the DatePicker</td>
							</tr>
							<tr>
								<td><code>value<code></td>
								<td><code>{string}</code></td>
								<td>
									The selected date. Must be dash-separated, ISO 8601 formatted date string e.g. <code>2015-01-01</code>
								</td>
							</tr>
							<tr>
								<th colspan="3">Instance methods</th>
							</tr>
							<tr>
								<td><code>open</code></td>
								<td><code>{void}</code></td>
								<td>Open the DatePicker</td>
							</tr>
							<tr>
								<td><code>close</code></td>
								<td><code>{void}</code></td>
								<td>Close the DatePicker</td>
							</tr>
							<tr>
								<td><code>onrendercell</code></td>
								<td><code>{void}</code></td>
								<td>
									Called whenever the datepicker renders a cell, used to determine if a cell is selectable through
									the <code>cell.selectable</code> property. Can also be an injection point for adding in specialized
									classes for the current cell with <code>cell.className</code>.
								</td>
							</tr>
							<tr>
								<td><code>onselect</code></td>
								<td><code>{void}</code></td>
								<td>
									Called whenever selection changes with two
									arguments <code>newval</code> and <code>oldval<code>.
								</td>
							</tr>
							<tr>
								<td><code>onclosed</code></td>
								<td><code>{void}</code></td>
								<td>
									Event listener for close event. Called after
									aside closing animation is completed.
								</td>
							</tr>
							<tr>
								<td><code>dispose</code></td>
								<td><code>{void}</code></td>
								<td>Cleanup the DataPicker (recommended)</td>
							</tr>
						</tbody>
					</table>
				</section>
			</article>
	</body>
</html>
