<!DOCTYPE html>
<html>
	<head>
		<title>Dialog</title>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>Dialog</h1>
				<section class="desc">
					<p>The Dialog API can be used to ask simple questions much like the JavaScript <code>confirm()</code> method.</p>
				</section>
				<section>
					<p>You can launch a Dialog with methods to handle OK and Cancel.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.confirm('Will you try?', {
								onaccept: function() {
									ts.ui.Notification.success('Good luck');
								},
								oncancel: function() {
									ts.ui.Notification.success('Come back later');
								}
							});
						</script>
					</figure>
					<p>You are encouraged to specify the text of the OK button. The button should attempt to indicate what happens when you press it.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.confirm('Show the Notification?', 'Show It', {
								onaccept: function() {
									ts.ui.Notification.success('Good choice');
								},
							});
						</script>
					</figure>
					<p>You can add a third string argument to specify the Cancel text.</p>

					<h3>Buttons setup</h3>
					<p>Dialog buttons are secondary (blue) by default, but you can choose to make the <code>accept</code> or <code>cancel</code> button primary. You can also tweak the default focus.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.confirm('Sign up for Tradeshift?', 'Join Now', {
								primary: 'accept',
								focused: 'accept'
							});
						</script>
					</figure>
					<p>You can change the label of both the primary and secondary buttons.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.confirm('Sign up for Tradeshift?', 'Join Now', 'Not Now', {
								primary: 'accept',
								focused: 'accept'
							});
						</script>
					</figure>

					<h3>Warning dialogs</h3>
					<p>You can launch special dialogs to confirm choices of more dire consequence.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.warning('This will delete the thing.', 'Delete It', {
								onaccept: function() {
									ts.ui.Dialog.danger(
										'Are you absolutely sure you want to ' +
										'*permanently* delete the whole thing?',
										'Delete It'
									);
								}
							});
						</script>
					</figure>

					<h3>Dialog icons</h3>
					<p>You can point the <code>icon</code> property to an alternative <a data-ts="Button" href="/#components/icons/css.html">icon class</a>, but you should stick to the stock icons whenever possible so that the user can easily recognize the dialog type.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							ts.ui.Dialog.confirm('Proceed to Checkout?', 'Check Out', {
								icon: 'ts-icon-cart',
								primary: 'accept',
								focused: 'accept'
							});
						</script>
					</figure>
				</section>
			</article>
		</main>
	</body>
<html>
