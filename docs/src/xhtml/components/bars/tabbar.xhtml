<!DOCTYPE html>
<html>
	<head>
		<title>TabBar</title>
		<object data="tabs.xhtml"></object>
		<script>
			ts.ui.ready(function() { // support color scheme links in API table
				var method;
				ts.ui.get('html').action.add('ts-action-safe-link', {
					onaction: function(a) {
						var tabbar = ts.ui.get('#mytabbar');
						if((method = tabbar[a.data])) {
							method.call(tabbar);
						}
					}
				})
			});
		</script>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<div data-ts="Panel" data-ts.label="Main TabBar">
				<article>
					<h1>Main TabBar</h1>
					<section class="desc">
						<p>Provides second level tabbed navigation.</p>
					</section>
					<section id="tabs">
						<object data="topbar.xhtml#tabs-desc">
							<replace input="TopBar" output="TabBar"/>
							<replace input="[4" output="[2"/>
							<replace input="(4" output="(2"/>
							<replace input="selectedIndex = 1" output="selectedIndex = 0"/>
							<replace id="tabs-init">
								<script>
									ts.ui.TabBar.tabs([
										{label: 'Main TabBar'},
										{label: 'Inline TabBar'}
									]);
								</script>
							</object>
						</link>
					</section>
					<section>
						<object data="topbar.xhtml#tabs-api">
							<replace input="TopBar" output="TabBar"/>
						</object>
					</section>
					<h2 id="buttons">TabBar.buttons</h2>
					<section>
						<p>It's perfectly alright to add buttons to the TabBar, either to avoid wasting space on a separate ToolBar or because the buttons will affect content in all the tabs.</p>
						<figure data-ts="DoxScript">
							<script type="runnable">
								ts.ui.TabBar.buttons([
									{label: 'One', type: 'ts-primary'},
									{label: 'Two', type: 'ts-secondary'},
									{label: 'Three'}
								]);
							</script>
						</figure>
						<p>If the buttons affect the selected tab only, remember to <code>clear</code> the buttons when a new tab is selected.</p>
						<figure data-ts="DoxScript">
							<script type="runnable">
								ts.ui.TabBar.buttons().clear();
							</script>
						</figure>
					</section>
					<section>
						<object data="topbar.xhtml#buttons-api">
							<replace input="TopBar" output="TabBar"/>
						</object>
					</section>
				</article>
			</div>
			<div data-ts="Panel" data-ts.label="Inline TabBar">
				<article>
					<h1>Inline TabBar</h1>
					<section class="desc">
						<p>TabBars can be positioned anywhere on the page.</p>
					</section>
					<section>
						<p>Assign <att>data-ts="TabBar"</att> to a <elm>header</elm> or <elm>nav</elm> to initialize it as a TabBar.</p>
						<figure data-ts="DoxMarkup">
							<script>
								<header data-ts="TabBar"></header>
							</script>
						</figure>
					 	<p>All features are controlled through a JavaScript API. You can get a hold of the component using a CSS selector and call any of the methods we've seen applicable to the Main TabBar.</p>
						<figure data-ts="DoxScript">
							<script type="runnable">
								var tabbar = ts.ui.get('#mytabbar'); // or pass an element
								tabbar.tabs([
									{label: 'One'},
									{label: 'Two'},
									{label: 'Three'}
								]);
							</script>
						</figure>
						<nav data-ts="TabBar" id="mytabbar"></nav>
						<p>Here's an overview of the inline TabBar component.</p>
						<div data-ts="DoxApi">
							<script type="application/json">
								{
									name: "ts.ui.TabBarSpirit",
									methods: [
										{
											name: "tabs",
											args: "(array)",
											desc: "Get or set the tabs."
										},
										{
											name: "buttons",
											args: "(array)",
											desc: "Get or set the buttons."
										},
										{
											name: "clear",
											desc: "Clear all tabs and buttons."
										},
										{
											name: "uncompact",
											desc: "Don't collect multiple tertiary buttons in a menu. You can call `compact` to restore default behavior."
										},
										{
											name: "white",
											desc: "Use (white)[white] background for selected tab."
										},
										{
											name: "lite",
											desc: "Use (light)[lite] background for selected tab."
										}
									]
								}
							</script>
						<div>
					</section>
				</article>
			</div>
		</main>
	</body>
</html>
