@import 'ts-variables.less';
@import 'ts-mixins.less';

body {
	word-wrap: break-word;
}
p,
ul,
ol,
dl,
hr,
nav,
menu,
code,
form,
table,
figure {
	margin: 0 0 @ts-unit 0;
	&:last-child {
		margin-bottom: 0;
	}
}
nav,
menu {
	list-style: none;
}
ul[class],
ol[class] {
	list-style: none; // see also ts-typo.less
}
hr {
	border: none;
	background-color: transparent;
	color: transparent;
	border-bottom: 1px dotted @ts-color-gray-light;
	margin: @ts-unit 0 (@ts-unit - 1px) 0;
}
samp,
code,
kbd,
var {
	font-family: @ts-fontstack-mono;
	font-size: 16px;
}
a {
	text-decoration: none;
}
button,
a {
	color: @ts-color-blue;
	touch-action: manipulation;
  user-drag: none; 
}
button:not([disabled]),
a {
	cursor: pointer;
	* {
		cursor: inherit;
	}
}
button:not(:disabled):hover,
a:hover {
	text-decoration: underline; // overwritten later on in "ts-buttons.less"
}
button {
	background-color: transparent;
	border: none;
}
input:not([type='checkbox']):not([type='radio']),
button,
select,
textarea {
	.ts-mixin-border-box();
	font-family: inherit;
	font-weight: inherit;
	font-size: inherit;
	line-height: inherit;
}
::-webkit-input-placeholder {
	color: @ts-color-gray-light;
	font-style: italic;
}
input:-moz-placeholder {
	color: @ts-color-gray-light;
	font-style: italic;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}
// todo textarea
input:not([type='checkbox']):not([type='radio']) {
	&[disabled],
	&[readonly] {
		cursor: default;
		color: @ts-color-black; // TODO: foks on iOS
	}
}
input::-ms-clear,
textarea::-ms-clear {
	display: none;
}
a,
input,
button {
	-ms-touch-action: none !important;
}
table {
	border-collapse: collapse;
}
th,
td {
	vertical-align: top;
}
